{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u03bbORM [ ](https://lambda-orm.github.io/wiki/api/index.html \u03bbORM is an ORM that allows us to perform distributed queries on different database engines. In \u03bbORM, queries are defined using lambda expressions based on a domain model which abstracts us from the infrastructure. For example, in a query you can obtain or modify records from different entities, where some persist in MySQL, others in Postgres, and others in Mongo. \u03bbORM allows you to define different scenarios for the same domain. For example, in one scenario, the infrastructure may consist of distributed instances across SQL Server, MongoDB, and Oracle, while in another scenario it may be a single Postgres instance. This allows the CQRS pattern to be implemented through configuration, without needing to write a single line of code. view example In addition to being used as a Node.js library, it can be consumed from a command line interface (CLI), a REST service, or a REST service client in other programming languages. Query Language Example of a query where orders and their details associated with a customer are obtained: const query = (country: string) => Products .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .sort(p => desc(p.largestPrice)); // Run the query passing the value of the country parameter const result = await orm.execute(query, { country: 'ARG' }); In this example: Define a query that returns a list of product categories along with the maximum price of each category. Filter products based on price and supplier's country or stock availability Group products by category and calculate the maximum price Map each product to an object with category name and maximum price Sort the products by largest price in descending order view: queries | select | join | grouping | include | insert | bulkInsert | update | delete | repository | usage | metadata Include The include allows us to obtain the entity data and its relationships in the same query. These data may be in different databases. \\ In this example the query is expressed as a text string. (Which is another alternative to the lambda expression) import { orm } from '../../lib' (async () => { try { await orm.init('./config/northwind.yaml') const query = `Orders .filter(p => p.id === id) .include(p => [ p.customer.map(p => p.name), p.details .include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice]) ] )` const params = { id: 102 } const result = await orm.execute(query, params, { stage: 'PostgreSQL' }) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.message) } finally { await orm.end() } })() Result: [ { \"id\": 102, \"customerId\": \"SPLIR\", \"employeeId\": 7, \"orderDate\": \"1996-11-07T23:00:00.000Z\", \"requiredDate\": \"1996-12-05T23:00:00.000Z\", \"shippedDate\": \"1996-11-14T23:00:00.000Z\", \"shipViaId\": 1, \"freight\": 8.63, \"name\": \"Split Rail Beer & Ale\", \"address\": \"P.O. Box 555\", \"city\": \"Lander\", \"region\": \"WY\", \"postalCode\": \"82520\", \"country\": \"USA\", \"customer\": { \"name\": \"Split Rail Beer & Ale\" }, \"details\": [ { \"quantity\": 24, \"unitPrice\": 5.9, \"product\": { \"name\": \"Tourtire\", \"category\": { \"name\": \"Meat/Poultry\" } } } ] } ] more info: include Schema Configuration Through the schema, you can define entities, enumerations, indexes, unique keys, default values, constraints, mapping, sources, stages, listeners, etc. The schema can be defined in a JSON or YAML format. Conditions or actions are performed using the same expression language that is used to define queries. view: schema | definition | use | expressions | environment Variables | composite | listener | multiple stages | multiple sources | push | pull | fetch | introspect | incorporate All Labs You can access various labs at lambdaorm labs Related projects Lambda ORM CLI : Command line interface for \u03bbORM Lambda ORM Service : REST service for \u03bbORM Client Node : HTTP client for \u03bbORM 3xpr : Extensible expression engine, which allows evaluating mathematical and logical expressions.","title":"\u03bbORM"},{"location":"#orm","text":"[ ](https://lambda-orm.github.io/wiki/api/index.html \u03bbORM is an ORM that allows us to perform distributed queries on different database engines. In \u03bbORM, queries are defined using lambda expressions based on a domain model which abstracts us from the infrastructure. For example, in a query you can obtain or modify records from different entities, where some persist in MySQL, others in Postgres, and others in Mongo. \u03bbORM allows you to define different scenarios for the same domain. For example, in one scenario, the infrastructure may consist of distributed instances across SQL Server, MongoDB, and Oracle, while in another scenario it may be a single Postgres instance. This allows the CQRS pattern to be implemented through configuration, without needing to write a single line of code. view example In addition to being used as a Node.js library, it can be consumed from a command line interface (CLI), a REST service, or a REST service client in other programming languages.","title":"\u03bbORM"},{"location":"#query-language","text":"Example of a query where orders and their details associated with a customer are obtained: const query = (country: string) => Products .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .sort(p => desc(p.largestPrice)); // Run the query passing the value of the country parameter const result = await orm.execute(query, { country: 'ARG' }); In this example: Define a query that returns a list of product categories along with the maximum price of each category. Filter products based on price and supplier's country or stock availability Group products by category and calculate the maximum price Map each product to an object with category name and maximum price Sort the products by largest price in descending order view: queries | select | join | grouping | include | insert | bulkInsert | update | delete | repository | usage | metadata","title":"Query Language"},{"location":"#include","text":"The include allows us to obtain the entity data and its relationships in the same query. These data may be in different databases. \\ In this example the query is expressed as a text string. (Which is another alternative to the lambda expression) import { orm } from '../../lib' (async () => { try { await orm.init('./config/northwind.yaml') const query = `Orders .filter(p => p.id === id) .include(p => [ p.customer.map(p => p.name), p.details .include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice]) ] )` const params = { id: 102 } const result = await orm.execute(query, params, { stage: 'PostgreSQL' }) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.message) } finally { await orm.end() } })() Result: [ { \"id\": 102, \"customerId\": \"SPLIR\", \"employeeId\": 7, \"orderDate\": \"1996-11-07T23:00:00.000Z\", \"requiredDate\": \"1996-12-05T23:00:00.000Z\", \"shippedDate\": \"1996-11-14T23:00:00.000Z\", \"shipViaId\": 1, \"freight\": 8.63, \"name\": \"Split Rail Beer & Ale\", \"address\": \"P.O. Box 555\", \"city\": \"Lander\", \"region\": \"WY\", \"postalCode\": \"82520\", \"country\": \"USA\", \"customer\": { \"name\": \"Split Rail Beer & Ale\" }, \"details\": [ { \"quantity\": 24, \"unitPrice\": 5.9, \"product\": { \"name\": \"Tourtire\", \"category\": { \"name\": \"Meat/Poultry\" } } } ] } ] more info: include","title":"Include"},{"location":"#schema-configuration","text":"Through the schema, you can define entities, enumerations, indexes, unique keys, default values, constraints, mapping, sources, stages, listeners, etc. The schema can be defined in a JSON or YAML format. Conditions or actions are performed using the same expression language that is used to define queries. view: schema | definition | use | expressions | environment Variables | composite | listener | multiple stages | multiple sources | push | pull | fetch | introspect | incorporate","title":"Schema Configuration"},{"location":"#all-labs","text":"You can access various labs at lambdaorm labs","title":"All Labs"},{"location":"#related-projects","text":"Lambda ORM CLI : Command line interface for \u03bbORM Lambda ORM Service : REST service for \u03bbORM Client Node : HTTP client for \u03bbORM 3xpr : Extensible expression engine, which allows evaluating mathematical and logical expressions.","title":"Related projects"},{"location":"CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. Versions 2.3.9 (2025-05-31) 2.3.8 (2025-05-31) 2.3.7 (2025-05-31) 2.3.6 (2025-05-31) 2.3.5 (2025-05-30) 2.3.4 (2025-05-30) 2.3.3 (2025-05-30) 2.3.2 (2024-06-10) 2.3.1 (2024-06-01) 2.3.0 (2024-06-01) Features: change format state file as flyway ( ab10fb3 ), closes #2 2.2.9 (2024-05-18) 2.2.8 (2024-05-13) Bug Fixes: bugfix in dates lab ( 1ee61a4 ), closes #0 2.2.7 (2024-05-13) 2.2.6 (2024-05-13) Bug Fixes: bugfix in dates lab ( f8c82a2 ), closes #0 2.2.5 (2024-05-13) 2.2.4 (2024-05-12) 2.2.3 (2024-05-12) 2.2.2 (2024-05-11) Bug Fixes: comment dates lab ( d3091fc ), closes #0 2.2.1 (2024-05-11) 2.2.0 (2024-05-09) Features: stage actions return ExecuteResult[] ( e088a13 ), closes #0 2.1.0 (2024-05-09) Features: add descripion in ExecuteResult ( 2cf6131 ), closes #0 2.0.7 (2024-05-08) Bug Fixes: bugfix with drop entity in mongo and refactorize workspace ( e670f29 ), closes #0 2.0.6 (2024-05-08) Bug Fixes: bugfix listeners args ( ae41e9f ), closes #0 2.0.5 (2024-05-08) Bug Fixes: bugfix on build ddl, omited alter table ( 8a01b53 ), closes #0 2.0.4 (2024-05-08) 2.0.3 (2024-05-07) 2.0.2 (2024-05-07) 2.0.1 (2024-05-07) 1.13.9 (2024-05-06) 1.13.8 (2024-05-06) 1.13.7 (2024-05-06) 1.13.6 (2024-05-06) 1.13.5 (2024-05-05) 1.13.4 (2024-05-05) 1.13.3 (2024-05-05) 1.13.2 (2024-05-04) 1.13.1 (2024-05-04) 1.13.0 (2024-05-02) Features: add introspect in stage facade ( d7a65b1 ), closes #0 1.12.2 (2024-05-02) Bug Fixes: bugfix in bulkinsert mysql ( a325a8b ), closes #0 1.12.1 (2024-05-01) Bug Fixes: modify orm constructor ( c8a0e53 ), closes #0 modify ORM constructor ( 06a11ea ), closes #0 1.12.0 (2024-05-01) Features: add dbTypes LONG and TEXT ( 8022ee3 ), closes #0 1.11.3 (2024-04-30) Bug Fixes: bugfix initialize ( a0d8ab2 ), closes #0 1.11.2 (2024-04-29) 1.11.1 (2024-04-29) 1.11.0 (2024-04-29) Features: add mongodb fetch ( 67078a5 ), closes #0 Bug Fixes: bugfix fetch ( 41da0f8 ), closes #0 1.10.7 (2024-04-27) Bug Fixes: advance in bugfix mongodb queries ( 0218050 ), closes #0 mongo: solve literal in project clause ( dd4fc39 ), closes #0 solve literal in project on mongodb lamguage ( 3e979b3 ), closes #0 1.10.6 (2024-04-23) Bug Fixes: mongo: solve any value of parameter ( eea0ea6 ), closes #0 1.10.5 (2024-04-22) Bug Fixes: test: bugfix in generate test ( 38a3b3f ), closes #0 test: set toEqual in metadata test ( 3a79940 ), closes #0 1.10.4 (2024-04-18) 1.10.3 (2024-04-17) 1.10.2 (2024-04-17) 1.10.1 (2024-04-15) 1.10.0 (2024-04-14) Features: change on OrmH3lp ( 6a9e7c6 ), closes #0 1.9.1 (2024-04-14) 1.9.0 (2024-04-10) Features: language: begin working in upsert, insertConditonal and bulkMerge ( 2a89d7c ), closes #167 language: begin working in upsert, insertConditonal and bulkMerge ( 694c8c0 ), closes #167 language: working in no case sensitive ( ee7c62c ), closes #0 log: add logger ( 0f8ae68 ), closes #164 rename Helper for OrmH3lp ( f39561e ), closes #0 schema: adjust in ddl scripts ( e4a4f67 ), closes #0 schema: complete match multiples lab ( f514f0d ), closes #0 sentences: add upsert, bulkMerge and bulkDelete clausules ( 14bde00 ), closes #167 sql: adjust ddl info ( 2ae8121 ), closes #0 1.8.0 (2024-04-07) Features: queries: add metadata queries ( eb20164 ), closes #0 Bug Fixes: schema: bugfix match schema ( cce4c9e ), closes #0 1.7.0 (2024-04-04) Features: schema: test match with postgres ( b927db0 ), closes #0 schema: test schema match ( 2f1a445 ), closes #0 schema: test schema match ( 106c0f7 ), closes #0 schema: test schema match ( 001ed30 ), closes #0 stage: add match usecase ( 1b45586 ), closes #0 1.6.0 (2024-03-31) Features: add schema update from data ( d92bf3e ), closes #0 1.5.0 (2024-03-25) Features: ddl-builder: update h3lp dependence and adjusts for delta ( 18796ae ), closes #0 schema: complete sync from data ( de3ec08 ), closes #0 Bug Fixes: sync: bugfix in sync ( 4700706 ), closes #0 sync: bugfix sync from data ( ce4c795 ), closes #0 1.4.0 (2024-03-20) Features: sentence: remove sentence service ( 4320540 ), closes #0 1.3.2 (2024-01-01) 1.3.1 (2023-12-28) 1.3.0 (2023-12-27) Features: move repository to organization ( 842eebf ), closes #224 1.1.5 (2023-12-27) 1.1.4 (2023-12-27) 1.1.3 (2023-12-26) ======= 1.2.0 (2023-12-27) Features: move repository to org ( 73ae43d ), closes #224 1.1.5 (2023-12-27) 1.1.4 (2023-12-27) 1.1.3 (2023-12-26) release/1.2.0 1.1.2 (2023-12-26) Bug Fixes: solve undefined schema.infrastructure.paths properties ( 8667a6d ), closes #223 1.1.1 (2023-12-26) 1.1.0 (2023-12-23) Features: remove workspace for schemaFacade and update lambdaorm-base ( 7147e97 ), closes #223 1.0.2 (2023-12-23) 1.0.1 (2023-12-23) 0.9.11 (2023-12-22) 0.9.10 (2023-12-22) 0.9.9 (2023-12-22) 0.9.8 (2023-12-22) Features: update lambdaorm-base and remove QueryOptions for lambdaorm ( 27a00d3 ), closes #224 0.9.7 (2023-12-22) 0.9.6 (2023-12-21) 0.9.5 (2023-12-21) 0.9.4 (2023-12-19) 0.9.3 (2023-12-19) 0.9.2 (2023-12-19) 0.9.1 (2023-12-19) 0.8.100 (2023-12-19) 0.8.99 (2023-12-19) 0.8.98 (2023-12-16) Features: solve async expressions ( 6310c38 ), closes #201 0.8.97 (2023-12-16) Bug Fixes: library: solve orm.execute async method ( 3a7cdff ), closes #201 0.8.96 (2023-12-02) Features: wiki: complete definition and examples of schema ( ade761b ), closes #201 0.8.95 (2023-12-02) Features: listener: rename action property for on ( 5d57f9a ), closes #201 wiki: add schema examples ( 9d75e95 ), closes #201 0.8.94 (2023-12-01) 0.8.93 (2023-12-01) 0.8.92 (2023-12-01) 0.8.91 (2023-12-01) 0.8.90 (2023-12-01) Features: expressions: add orm library ( 1410aa2 ), closes #201 Bug Fixes: working cqrs ( 4fd91e7 ), closes #201 working in bugfix listeners ( 29f5423 ), closes #201 0.8.89 (2023-11-30) Bug Fixes: schema: bugfix on load source without connection ( 889020d ), closes #201 0.8.88 (2023-11-30) Features: add ormLibrary with method execute ( b409f8e ), closes #201 0.8.87 (2023-11-30) Features: update readme and refactoring wiki ( 46f4537 ), closes #201 0.8.86 (2023-11-30) Features: update readme and refactoring wiki ( 35522f7 ), closes #201 0.8.85 (2023-11-28) 0.8.84 (2023-11-28) 0.8.83 (2023-11-28) Features: query: solve children of composite ( 058b6e8 ), closes #201 query: solve compose include with children ( 0a0af85 ), closes #201 sentence: rename getInfo for plan ( 6fce97d ), closes #201 stage: rename stage.clean for stage.drop ( e55ef63 ), closes #201 0.8.82 (2023-11-26) 0.8.81 (2023-11-26) Bug Fixes: language: solve second parameter on startsWith and like functions ( d07a0a4 ), closes #201 0.8.80 (2023-11-26) 0.8.79 (2023-11-26) Features: language: add like, startsWith and includes function ( 55f1abc ), closes #201 Bug Fixes: solve bug with includes in mongo ( 2894c4f ), closes #201 test: add syntax.d.ts for dev code ( 594d8bb ), closes #201 test: regenerate unit-test ( 65e6d80 ), closes #201 0.8.78 (2023-11-24) Bug Fixes: solve bug with oracle dbTypes and bug in sequence in mongodb ( afffa10 ), closes #201 0.8.77 (2023-11-21) Features: schema: set infrastructure and application properties in schema as nullables ( 0c231c6 ), closes #202 0.8.76 (2023-11-21) 0.8.75 (2023-11-21) 0.8.74 (2023-11-21) Features: schema: add version to schema ( 283a24b ), closes #202 0.8.73 (2023-11-17) Features: on execute and getInfo , parse data and options if is serialized ( d21f27f ), closes #198 0.8.72 (2023-11-15) 0.8.71 (2023-11-15) 0.8.70 (2023-11-15) 0.8.69 (2023-11-15) 0.8.68 (2023-11-15) 0.8.67 (2023-11-15) 0.8.66 (2023-11-15) 0.8.65 (2023-11-15) 0.8.64 (2023-11-15) 0.8.63 (2023-11-15) Features: syntax: move sintaxis to .ts files ( ae0d205 ), closes #189 0.8.62 (2023-11-13) Features: release: remove syntax.d.ts to types on package.json and add types on repository/domain/queryable ( 6e46e7a ), closes #189 syntax: refactoring queryable ( e5a8783 ), closes #189 0.8.61 (2023-11-13) Features: release: add syntax.d.ts to types on package.json ( 11da720 ), closes #189 0.8.60 (2023-11-10) Bug Fixes: security: update dependencies ( f496198 ), closes #176 0.8.59 (2023-11-10) 0.8.58 (2023-11-10) 0.8.57 (2023-11-10) Bug Fixes: types: solve shared types ( d65e38b ), closes #179 0.8.56 (2023-11-09) 0.8.55 (2023-11-09) 0.8.54 (2023-11-09) 0.8.53 (2023-11-09) Features: dependencies: configure dependabot target to develop ( b66289f ), closes #176 0.8.52 (2023-11-09) Features: dependencies: add dependabot ( 45e3c40 ), closes #176 0.8.51 (2023-11-09) 0.8.50 (2023-11-09) Features: changelogs: define header ( c53028a ), closes #176 0.8.49 (2023-11-09) 0.8.48 (2023-11-09) 0.8.47 (2023-11-09)","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file.","title":"Changelog"},{"location":"CHANGELOG/#versions","text":"","title":"Versions"},{"location":"CHANGELOG/#239-2025-05-31","text":"","title":"2.3.9 (2025-05-31)"},{"location":"CHANGELOG/#238-2025-05-31","text":"","title":"2.3.8 (2025-05-31)"},{"location":"CHANGELOG/#237-2025-05-31","text":"","title":"2.3.7 (2025-05-31)"},{"location":"CHANGELOG/#236-2025-05-31","text":"","title":"2.3.6 (2025-05-31)"},{"location":"CHANGELOG/#235-2025-05-30","text":"","title":"2.3.5 (2025-05-30)"},{"location":"CHANGELOG/#234-2025-05-30","text":"","title":"2.3.4 (2025-05-30)"},{"location":"CHANGELOG/#233-2025-05-30","text":"","title":"2.3.3 (2025-05-30)"},{"location":"CHANGELOG/#232-2024-06-10","text":"","title":"2.3.2 (2024-06-10)"},{"location":"CHANGELOG/#231-2024-06-01","text":"","title":"2.3.1 (2024-06-01)"},{"location":"CHANGELOG/#230-2024-06-01","text":"Features: change format state file as flyway ( ab10fb3 ), closes #2","title":"2.3.0 (2024-06-01)"},{"location":"CHANGELOG/#229-2024-05-18","text":"","title":"2.2.9 (2024-05-18)"},{"location":"CHANGELOG/#228-2024-05-13","text":"Bug Fixes: bugfix in dates lab ( 1ee61a4 ), closes #0","title":"2.2.8 (2024-05-13)"},{"location":"CHANGELOG/#227-2024-05-13","text":"","title":"2.2.7 (2024-05-13)"},{"location":"CHANGELOG/#226-2024-05-13","text":"Bug Fixes: bugfix in dates lab ( f8c82a2 ), closes #0","title":"2.2.6 (2024-05-13)"},{"location":"CHANGELOG/#225-2024-05-13","text":"","title":"2.2.5 (2024-05-13)"},{"location":"CHANGELOG/#224-2024-05-12","text":"","title":"2.2.4 (2024-05-12)"},{"location":"CHANGELOG/#223-2024-05-12","text":"","title":"2.2.3 (2024-05-12)"},{"location":"CHANGELOG/#222-2024-05-11","text":"Bug Fixes: comment dates lab ( d3091fc ), closes #0","title":"2.2.2 (2024-05-11)"},{"location":"CHANGELOG/#221-2024-05-11","text":"","title":"2.2.1 (2024-05-11)"},{"location":"CHANGELOG/#220-2024-05-09","text":"Features: stage actions return ExecuteResult[] ( e088a13 ), closes #0","title":"2.2.0 (2024-05-09)"},{"location":"CHANGELOG/#210-2024-05-09","text":"Features: add descripion in ExecuteResult ( 2cf6131 ), closes #0","title":"2.1.0 (2024-05-09)"},{"location":"CHANGELOG/#207-2024-05-08","text":"Bug Fixes: bugfix with drop entity in mongo and refactorize workspace ( e670f29 ), closes #0","title":"2.0.7 (2024-05-08)"},{"location":"CHANGELOG/#206-2024-05-08","text":"Bug Fixes: bugfix listeners args ( ae41e9f ), closes #0","title":"2.0.6 (2024-05-08)"},{"location":"CHANGELOG/#205-2024-05-08","text":"Bug Fixes: bugfix on build ddl, omited alter table ( 8a01b53 ), closes #0","title":"2.0.5 (2024-05-08)"},{"location":"CHANGELOG/#204-2024-05-08","text":"","title":"2.0.4 (2024-05-08)"},{"location":"CHANGELOG/#203-2024-05-07","text":"","title":"2.0.3 (2024-05-07)"},{"location":"CHANGELOG/#202-2024-05-07","text":"","title":"2.0.2 (2024-05-07)"},{"location":"CHANGELOG/#201-2024-05-07","text":"","title":"2.0.1 (2024-05-07)"},{"location":"CHANGELOG/#1139-2024-05-06","text":"","title":"1.13.9 (2024-05-06)"},{"location":"CHANGELOG/#1138-2024-05-06","text":"","title":"1.13.8 (2024-05-06)"},{"location":"CHANGELOG/#1137-2024-05-06","text":"","title":"1.13.7 (2024-05-06)"},{"location":"CHANGELOG/#1136-2024-05-06","text":"","title":"1.13.6 (2024-05-06)"},{"location":"CHANGELOG/#1135-2024-05-05","text":"","title":"1.13.5 (2024-05-05)"},{"location":"CHANGELOG/#1134-2024-05-05","text":"","title":"1.13.4 (2024-05-05)"},{"location":"CHANGELOG/#1133-2024-05-05","text":"","title":"1.13.3 (2024-05-05)"},{"location":"CHANGELOG/#1132-2024-05-04","text":"","title":"1.13.2 (2024-05-04)"},{"location":"CHANGELOG/#1131-2024-05-04","text":"","title":"1.13.1 (2024-05-04)"},{"location":"CHANGELOG/#1130-2024-05-02","text":"Features: add introspect in stage facade ( d7a65b1 ), closes #0","title":"1.13.0 (2024-05-02)"},{"location":"CHANGELOG/#1122-2024-05-02","text":"Bug Fixes: bugfix in bulkinsert mysql ( a325a8b ), closes #0","title":"1.12.2 (2024-05-02)"},{"location":"CHANGELOG/#1121-2024-05-01","text":"Bug Fixes: modify orm constructor ( c8a0e53 ), closes #0 modify ORM constructor ( 06a11ea ), closes #0","title":"1.12.1 (2024-05-01)"},{"location":"CHANGELOG/#1120-2024-05-01","text":"Features: add dbTypes LONG and TEXT ( 8022ee3 ), closes #0","title":"1.12.0 (2024-05-01)"},{"location":"CHANGELOG/#1113-2024-04-30","text":"Bug Fixes: bugfix initialize ( a0d8ab2 ), closes #0","title":"1.11.3 (2024-04-30)"},{"location":"CHANGELOG/#1112-2024-04-29","text":"","title":"1.11.2 (2024-04-29)"},{"location":"CHANGELOG/#1111-2024-04-29","text":"","title":"1.11.1 (2024-04-29)"},{"location":"CHANGELOG/#1110-2024-04-29","text":"Features: add mongodb fetch ( 67078a5 ), closes #0 Bug Fixes: bugfix fetch ( 41da0f8 ), closes #0","title":"1.11.0 (2024-04-29)"},{"location":"CHANGELOG/#1107-2024-04-27","text":"Bug Fixes: advance in bugfix mongodb queries ( 0218050 ), closes #0 mongo: solve literal in project clause ( dd4fc39 ), closes #0 solve literal in project on mongodb lamguage ( 3e979b3 ), closes #0","title":"1.10.7 (2024-04-27)"},{"location":"CHANGELOG/#1106-2024-04-23","text":"Bug Fixes: mongo: solve any value of parameter ( eea0ea6 ), closes #0","title":"1.10.6 (2024-04-23)"},{"location":"CHANGELOG/#1105-2024-04-22","text":"Bug Fixes: test: bugfix in generate test ( 38a3b3f ), closes #0 test: set toEqual in metadata test ( 3a79940 ), closes #0","title":"1.10.5 (2024-04-22)"},{"location":"CHANGELOG/#1104-2024-04-18","text":"","title":"1.10.4 (2024-04-18)"},{"location":"CHANGELOG/#1103-2024-04-17","text":"","title":"1.10.3 (2024-04-17)"},{"location":"CHANGELOG/#1102-2024-04-17","text":"","title":"1.10.2 (2024-04-17)"},{"location":"CHANGELOG/#1101-2024-04-15","text":"","title":"1.10.1 (2024-04-15)"},{"location":"CHANGELOG/#1100-2024-04-14","text":"Features: change on OrmH3lp ( 6a9e7c6 ), closes #0","title":"1.10.0 (2024-04-14)"},{"location":"CHANGELOG/#191-2024-04-14","text":"","title":"1.9.1 (2024-04-14)"},{"location":"CHANGELOG/#190-2024-04-10","text":"Features: language: begin working in upsert, insertConditonal and bulkMerge ( 2a89d7c ), closes #167 language: begin working in upsert, insertConditonal and bulkMerge ( 694c8c0 ), closes #167 language: working in no case sensitive ( ee7c62c ), closes #0 log: add logger ( 0f8ae68 ), closes #164 rename Helper for OrmH3lp ( f39561e ), closes #0 schema: adjust in ddl scripts ( e4a4f67 ), closes #0 schema: complete match multiples lab ( f514f0d ), closes #0 sentences: add upsert, bulkMerge and bulkDelete clausules ( 14bde00 ), closes #167 sql: adjust ddl info ( 2ae8121 ), closes #0","title":"1.9.0 (2024-04-10)"},{"location":"CHANGELOG/#180-2024-04-07","text":"Features: queries: add metadata queries ( eb20164 ), closes #0 Bug Fixes: schema: bugfix match schema ( cce4c9e ), closes #0","title":"1.8.0 (2024-04-07)"},{"location":"CHANGELOG/#170-2024-04-04","text":"Features: schema: test match with postgres ( b927db0 ), closes #0 schema: test schema match ( 2f1a445 ), closes #0 schema: test schema match ( 106c0f7 ), closes #0 schema: test schema match ( 001ed30 ), closes #0 stage: add match usecase ( 1b45586 ), closes #0","title":"1.7.0 (2024-04-04)"},{"location":"CHANGELOG/#160-2024-03-31","text":"Features: add schema update from data ( d92bf3e ), closes #0","title":"1.6.0 (2024-03-31)"},{"location":"CHANGELOG/#150-2024-03-25","text":"Features: ddl-builder: update h3lp dependence and adjusts for delta ( 18796ae ), closes #0 schema: complete sync from data ( de3ec08 ), closes #0 Bug Fixes: sync: bugfix in sync ( 4700706 ), closes #0 sync: bugfix sync from data ( ce4c795 ), closes #0","title":"1.5.0 (2024-03-25)"},{"location":"CHANGELOG/#140-2024-03-20","text":"Features: sentence: remove sentence service ( 4320540 ), closes #0","title":"1.4.0 (2024-03-20)"},{"location":"CHANGELOG/#132-2024-01-01","text":"","title":"1.3.2 (2024-01-01)"},{"location":"CHANGELOG/#131-2023-12-28","text":"","title":"1.3.1 (2023-12-28)"},{"location":"CHANGELOG/#130-2023-12-27","text":"Features: move repository to organization ( 842eebf ), closes #224","title":"1.3.0 (2023-12-27)"},{"location":"CHANGELOG/#115-2023-12-27","text":"","title":"1.1.5 (2023-12-27)"},{"location":"CHANGELOG/#114-2023-12-27","text":"","title":"1.1.4 (2023-12-27)"},{"location":"CHANGELOG/#113-2023-12-26","text":"=======","title":"1.1.3 (2023-12-26)"},{"location":"CHANGELOG/#120-2023-12-27","text":"Features: move repository to org ( 73ae43d ), closes #224","title":"1.2.0 (2023-12-27)"},{"location":"CHANGELOG/#115-2023-12-27_1","text":"","title":"1.1.5 (2023-12-27)"},{"location":"CHANGELOG/#114-2023-12-27_1","text":"","title":"1.1.4 (2023-12-27)"},{"location":"CHANGELOG/#113-2023-12-26_1","text":"release/1.2.0","title":"1.1.3 (2023-12-26)"},{"location":"CHANGELOG/#112-2023-12-26","text":"Bug Fixes: solve undefined schema.infrastructure.paths properties ( 8667a6d ), closes #223","title":"1.1.2 (2023-12-26)"},{"location":"CHANGELOG/#111-2023-12-26","text":"","title":"1.1.1 (2023-12-26)"},{"location":"CHANGELOG/#110-2023-12-23","text":"Features: remove workspace for schemaFacade and update lambdaorm-base ( 7147e97 ), closes #223","title":"1.1.0 (2023-12-23)"},{"location":"CHANGELOG/#102-2023-12-23","text":"","title":"1.0.2 (2023-12-23)"},{"location":"CHANGELOG/#101-2023-12-23","text":"","title":"1.0.1 (2023-12-23)"},{"location":"CHANGELOG/#0911-2023-12-22","text":"","title":"0.9.11 (2023-12-22)"},{"location":"CHANGELOG/#0910-2023-12-22","text":"","title":"0.9.10 (2023-12-22)"},{"location":"CHANGELOG/#099-2023-12-22","text":"","title":"0.9.9 (2023-12-22)"},{"location":"CHANGELOG/#098-2023-12-22","text":"Features: update lambdaorm-base and remove QueryOptions for lambdaorm ( 27a00d3 ), closes #224","title":"0.9.8 (2023-12-22)"},{"location":"CHANGELOG/#097-2023-12-22","text":"","title":"0.9.7 (2023-12-22)"},{"location":"CHANGELOG/#096-2023-12-21","text":"","title":"0.9.6 (2023-12-21)"},{"location":"CHANGELOG/#095-2023-12-21","text":"","title":"0.9.5 (2023-12-21)"},{"location":"CHANGELOG/#094-2023-12-19","text":"","title":"0.9.4 (2023-12-19)"},{"location":"CHANGELOG/#093-2023-12-19","text":"","title":"0.9.3 (2023-12-19)"},{"location":"CHANGELOG/#092-2023-12-19","text":"","title":"0.9.2 (2023-12-19)"},{"location":"CHANGELOG/#091-2023-12-19","text":"","title":"0.9.1 (2023-12-19)"},{"location":"CHANGELOG/#08100-2023-12-19","text":"","title":"0.8.100 (2023-12-19)"},{"location":"CHANGELOG/#0899-2023-12-19","text":"","title":"0.8.99 (2023-12-19)"},{"location":"CHANGELOG/#0898-2023-12-16","text":"Features: solve async expressions ( 6310c38 ), closes #201","title":"0.8.98 (2023-12-16)"},{"location":"CHANGELOG/#0897-2023-12-16","text":"Bug Fixes: library: solve orm.execute async method ( 3a7cdff ), closes #201","title":"0.8.97 (2023-12-16)"},{"location":"CHANGELOG/#0896-2023-12-02","text":"Features: wiki: complete definition and examples of schema ( ade761b ), closes #201","title":"0.8.96 (2023-12-02)"},{"location":"CHANGELOG/#0895-2023-12-02","text":"Features: listener: rename action property for on ( 5d57f9a ), closes #201 wiki: add schema examples ( 9d75e95 ), closes #201","title":"0.8.95 (2023-12-02)"},{"location":"CHANGELOG/#0894-2023-12-01","text":"","title":"0.8.94 (2023-12-01)"},{"location":"CHANGELOG/#0893-2023-12-01","text":"","title":"0.8.93 (2023-12-01)"},{"location":"CHANGELOG/#0892-2023-12-01","text":"","title":"0.8.92 (2023-12-01)"},{"location":"CHANGELOG/#0891-2023-12-01","text":"","title":"0.8.91 (2023-12-01)"},{"location":"CHANGELOG/#0890-2023-12-01","text":"Features: expressions: add orm library ( 1410aa2 ), closes #201 Bug Fixes: working cqrs ( 4fd91e7 ), closes #201 working in bugfix listeners ( 29f5423 ), closes #201","title":"0.8.90 (2023-12-01)"},{"location":"CHANGELOG/#0889-2023-11-30","text":"Bug Fixes: schema: bugfix on load source without connection ( 889020d ), closes #201","title":"0.8.89 (2023-11-30)"},{"location":"CHANGELOG/#0888-2023-11-30","text":"Features: add ormLibrary with method execute ( b409f8e ), closes #201","title":"0.8.88 (2023-11-30)"},{"location":"CHANGELOG/#0887-2023-11-30","text":"Features: update readme and refactoring wiki ( 46f4537 ), closes #201","title":"0.8.87 (2023-11-30)"},{"location":"CHANGELOG/#0886-2023-11-30","text":"Features: update readme and refactoring wiki ( 35522f7 ), closes #201","title":"0.8.86 (2023-11-30)"},{"location":"CHANGELOG/#0885-2023-11-28","text":"","title":"0.8.85 (2023-11-28)"},{"location":"CHANGELOG/#0884-2023-11-28","text":"","title":"0.8.84 (2023-11-28)"},{"location":"CHANGELOG/#0883-2023-11-28","text":"Features: query: solve children of composite ( 058b6e8 ), closes #201 query: solve compose include with children ( 0a0af85 ), closes #201 sentence: rename getInfo for plan ( 6fce97d ), closes #201 stage: rename stage.clean for stage.drop ( e55ef63 ), closes #201","title":"0.8.83 (2023-11-28)"},{"location":"CHANGELOG/#0882-2023-11-26","text":"","title":"0.8.82 (2023-11-26)"},{"location":"CHANGELOG/#0881-2023-11-26","text":"Bug Fixes: language: solve second parameter on startsWith and like functions ( d07a0a4 ), closes #201","title":"0.8.81 (2023-11-26)"},{"location":"CHANGELOG/#0880-2023-11-26","text":"","title":"0.8.80 (2023-11-26)"},{"location":"CHANGELOG/#0879-2023-11-26","text":"Features: language: add like, startsWith and includes function ( 55f1abc ), closes #201 Bug Fixes: solve bug with includes in mongo ( 2894c4f ), closes #201 test: add syntax.d.ts for dev code ( 594d8bb ), closes #201 test: regenerate unit-test ( 65e6d80 ), closes #201","title":"0.8.79 (2023-11-26)"},{"location":"CHANGELOG/#0878-2023-11-24","text":"Bug Fixes: solve bug with oracle dbTypes and bug in sequence in mongodb ( afffa10 ), closes #201","title":"0.8.78 (2023-11-24)"},{"location":"CHANGELOG/#0877-2023-11-21","text":"Features: schema: set infrastructure and application properties in schema as nullables ( 0c231c6 ), closes #202","title":"0.8.77 (2023-11-21)"},{"location":"CHANGELOG/#0876-2023-11-21","text":"","title":"0.8.76 (2023-11-21)"},{"location":"CHANGELOG/#0875-2023-11-21","text":"","title":"0.8.75 (2023-11-21)"},{"location":"CHANGELOG/#0874-2023-11-21","text":"Features: schema: add version to schema ( 283a24b ), closes #202","title":"0.8.74 (2023-11-21)"},{"location":"CHANGELOG/#0873-2023-11-17","text":"Features: on execute and getInfo , parse data and options if is serialized ( d21f27f ), closes #198","title":"0.8.73 (2023-11-17)"},{"location":"CHANGELOG/#0872-2023-11-15","text":"","title":"0.8.72 (2023-11-15)"},{"location":"CHANGELOG/#0871-2023-11-15","text":"","title":"0.8.71 (2023-11-15)"},{"location":"CHANGELOG/#0870-2023-11-15","text":"","title":"0.8.70 (2023-11-15)"},{"location":"CHANGELOG/#0869-2023-11-15","text":"","title":"0.8.69 (2023-11-15)"},{"location":"CHANGELOG/#0868-2023-11-15","text":"","title":"0.8.68 (2023-11-15)"},{"location":"CHANGELOG/#0867-2023-11-15","text":"","title":"0.8.67 (2023-11-15)"},{"location":"CHANGELOG/#0866-2023-11-15","text":"","title":"0.8.66 (2023-11-15)"},{"location":"CHANGELOG/#0865-2023-11-15","text":"","title":"0.8.65 (2023-11-15)"},{"location":"CHANGELOG/#0864-2023-11-15","text":"","title":"0.8.64 (2023-11-15)"},{"location":"CHANGELOG/#0863-2023-11-15","text":"Features: syntax: move sintaxis to .ts files ( ae0d205 ), closes #189","title":"0.8.63 (2023-11-15)"},{"location":"CHANGELOG/#0862-2023-11-13","text":"Features: release: remove syntax.d.ts to types on package.json and add types on repository/domain/queryable ( 6e46e7a ), closes #189 syntax: refactoring queryable ( e5a8783 ), closes #189","title":"0.8.62 (2023-11-13)"},{"location":"CHANGELOG/#0861-2023-11-13","text":"Features: release: add syntax.d.ts to types on package.json ( 11da720 ), closes #189","title":"0.8.61 (2023-11-13)"},{"location":"CHANGELOG/#0860-2023-11-10","text":"Bug Fixes: security: update dependencies ( f496198 ), closes #176","title":"0.8.60 (2023-11-10)"},{"location":"CHANGELOG/#0859-2023-11-10","text":"","title":"0.8.59 (2023-11-10)"},{"location":"CHANGELOG/#0858-2023-11-10","text":"","title":"0.8.58 (2023-11-10)"},{"location":"CHANGELOG/#0857-2023-11-10","text":"Bug Fixes: types: solve shared types ( d65e38b ), closes #179","title":"0.8.57 (2023-11-10)"},{"location":"CHANGELOG/#0856-2023-11-09","text":"","title":"0.8.56 (2023-11-09)"},{"location":"CHANGELOG/#0855-2023-11-09","text":"","title":"0.8.55 (2023-11-09)"},{"location":"CHANGELOG/#0854-2023-11-09","text":"","title":"0.8.54 (2023-11-09)"},{"location":"CHANGELOG/#0853-2023-11-09","text":"Features: dependencies: configure dependabot target to develop ( b66289f ), closes #176","title":"0.8.53 (2023-11-09)"},{"location":"CHANGELOG/#0852-2023-11-09","text":"Features: dependencies: add dependabot ( 45e3c40 ), closes #176","title":"0.8.52 (2023-11-09)"},{"location":"CHANGELOG/#0851-2023-11-09","text":"","title":"0.8.51 (2023-11-09)"},{"location":"CHANGELOG/#0850-2023-11-09","text":"Features: changelogs: define header ( c53028a ), closes #176","title":"0.8.50 (2023-11-09)"},{"location":"CHANGELOG/#0849-2023-11-09","text":"","title":"0.8.49 (2023-11-09)"},{"location":"CHANGELOG/#0848-2023-11-09","text":"","title":"0.8.48 (2023-11-09)"},{"location":"CHANGELOG/#0847-2023-11-09","text":"","title":"0.8.47 (2023-11-09)"},{"location":"Features/","text":"Features Supports MySQL, MariaDB, PostgresSQL, Oracle, SqlServer, SqlJs and MongoDB. Query Language Simple query language based on javascript lambda expressions. Can write the expression as javascript code or as a string Crud clauses Implicit joins and group by Eager loading using the Include() method. Query expression metadata Repositories and custom repositories Transactions and distributed transactions Schema Configuration Decoupling the domain model from infrastructure Configuration in json or yml formats Definition of mappings between domain and infrastructure Extends entities Environment variables define indices, unique keys and constraints Conditions and actions are based on the expression engine 3xpr Synchronization Performance and Optimization BulkInsert High performance queries Connection pooling Listeners and subscribers TypeScript and JavaScript support CLI Support support REST API Support HTTP Client Support Node Client Kotlin Client (In Progress) Java Client (Coming Soon) C# Client (Coming Soon) Python Client (Coming Soon)","title":"Features"},{"location":"Features/#features","text":"Supports MySQL, MariaDB, PostgresSQL, Oracle, SqlServer, SqlJs and MongoDB. Query Language Simple query language based on javascript lambda expressions. Can write the expression as javascript code or as a string Crud clauses Implicit joins and group by Eager loading using the Include() method. Query expression metadata Repositories and custom repositories Transactions and distributed transactions Schema Configuration Decoupling the domain model from infrastructure Configuration in json or yml formats Definition of mappings between domain and infrastructure Extends entities Environment variables define indices, unique keys and constraints Conditions and actions are based on the expression engine 3xpr Synchronization Performance and Optimization BulkInsert High performance queries Connection pooling Listeners and subscribers TypeScript and JavaScript support CLI Support support REST API Support HTTP Client Support Node Client Kotlin Client (In Progress) Java Client (Coming Soon) C# Client (Coming Soon) Python Client (Coming Soon)","title":"Features"},{"location":"Repository/","text":"Repositories Repositories are associated with an entity and have several methods to interact with the entity. Example: import { orm } from 'lambdaorm' import { ProductRepository } from './models/northwind' (async () => { await orm.init() const productRepository = new ProductRepository('mydb') const country = 'USA' const result = await productRepository.query().filter(p => (p.price > 5 && p.supplier.country === country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) .execute({ country: country }) console.log(JSON.stringify(result, null, 2)) await orm.end() })() method Description insert To insert one record bulkInsert To insert records update To update one record updateAll to be able to update all the records of an entity delete To delete one record deleteAll delete all records of an entity get get one record first returns the first record last returns the last record take returns one record query permite realizar una consulta personalizada The repositories are generated by lambdaorm by executing the update command. When executing this command, among other tasks, a repository is created for each entity of the defined schemas. These files are only generated the first time, so it is safe to add custom methods to these repositories. Example: import { Repository, IOrm } from 'lambdaorm' import { Product, QryProduct } from './model' export class ProductRepository extends Repository<Product, QryProduct> { constructor (database?: string, Orm?:IOrm) { super('Products', database, Orm) } // Add your methods here }","title":"Repositories"},{"location":"Repository/#repositories","text":"Repositories are associated with an entity and have several methods to interact with the entity. Example: import { orm } from 'lambdaorm' import { ProductRepository } from './models/northwind' (async () => { await orm.init() const productRepository = new ProductRepository('mydb') const country = 'USA' const result = await productRepository.query().filter(p => (p.price > 5 && p.supplier.country === country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) .execute({ country: country }) console.log(JSON.stringify(result, null, 2)) await orm.end() })() method Description insert To insert one record bulkInsert To insert records update To update one record updateAll to be able to update all the records of an entity delete To delete one record deleteAll delete all records of an entity get get one record first returns the first record last returns the last record take returns one record query permite realizar una consulta personalizada The repositories are generated by lambdaorm by executing the update command. When executing this command, among other tasks, a repository is created for each entity of the defined schemas. These files are only generated the first time, so it is safe to add custom methods to these repositories. Example: import { Repository, IOrm } from 'lambdaorm' import { Product, QryProduct } from './model' export class ProductRepository extends Repository<Product, QryProduct> { constructor (database?: string, Orm?:IOrm) { super('Products', database, Orm) } // Add your methods here }","title":"Repositories"},{"location":"Transaction/","text":"Transaction To work with transactions use the orm.transaction method. This method receives the name of the database as the first argument and as the second it is a callback function that does not pass a Transaction object, in the example we name it tr. We use the lambda or expression method to execute the sentence (as we found it written). When we reach the end and return the callback, the orm will internally execute the COMMIT, if there is an exception, internally the ROLLBACK will be executed Example: import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { customerId: 'VINET', employeeId: 5, orderDate: '1996-07-03T22:00:00.000Z', requiredDate: '1996-07-31T22:00:00.000Z', shippedDate: '1996-07-15T22:00:00.000Z', shipViaId: 3, freight: 32.38, name: 'Vins et alcools Chevalier', address: '59 rue de l-Abbaye', city: 'Reims', region: null, postalCode: '51100', country: 'France', details: [{ productId: 11, unitPrice: 14, quantity: 12, discount: !1 }, { productId: 42, unitPrice: 9.8, quantity: 10, discount: !1 }, { productId: 72, unitPrice: 34.8, quantity: 5, discount: !1 }] } orm.transaction({ stage: 'source' }, async (tr) => { // create order const orderId = await tr.execute(() => Orders.insert().include(p => p.details), order) // get order const result = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) const order2 = result[0] // updated order order2.address = 'changed 59 rue de l-Abbaye' order2.details[0].discount = true order2.details[1].unitPrice = 10 order2.details[2].quantity = 7 const updateCount = await tr.execute(() => Orders.update().include(p => p.details), order2) console.log(updateCount) // get order const order3 = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) console.log(JSON.stringify(order3)) // delete const deleteCount = await tr.execute(() => Orders.delete().include(p => p.details), order3[0]) console.log(deleteCount) // get order const order4 = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) console.log(JSON.stringify(order4)) }) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Transaction"},{"location":"Transaction/#transaction","text":"To work with transactions use the orm.transaction method. This method receives the name of the database as the first argument and as the second it is a callback function that does not pass a Transaction object, in the example we name it tr. We use the lambda or expression method to execute the sentence (as we found it written). When we reach the end and return the callback, the orm will internally execute the COMMIT, if there is an exception, internally the ROLLBACK will be executed Example: import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { customerId: 'VINET', employeeId: 5, orderDate: '1996-07-03T22:00:00.000Z', requiredDate: '1996-07-31T22:00:00.000Z', shippedDate: '1996-07-15T22:00:00.000Z', shipViaId: 3, freight: 32.38, name: 'Vins et alcools Chevalier', address: '59 rue de l-Abbaye', city: 'Reims', region: null, postalCode: '51100', country: 'France', details: [{ productId: 11, unitPrice: 14, quantity: 12, discount: !1 }, { productId: 42, unitPrice: 9.8, quantity: 10, discount: !1 }, { productId: 72, unitPrice: 34.8, quantity: 5, discount: !1 }] } orm.transaction({ stage: 'source' }, async (tr) => { // create order const orderId = await tr.execute(() => Orders.insert().include(p => p.details), order) // get order const result = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) const order2 = result[0] // updated order order2.address = 'changed 59 rue de l-Abbaye' order2.details[0].discount = true order2.details[1].unitPrice = 10 order2.details[2].quantity = 7 const updateCount = await tr.execute(() => Orders.update().include(p => p.details), order2) console.log(updateCount) // get order const order3 = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) console.log(JSON.stringify(order3)) // delete const deleteCount = await tr.execute(() => Orders.delete().include(p => p.details), order3[0]) console.log(deleteCount) // get order const order4 = await tr.execute((id: number) => Orders.filter(p => p.id === id).include(p => p.details), { id: orderId }) console.log(JSON.stringify(order4)) }) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Transaction"},{"location":"Usage/","text":"To show different ways of consuming the ORM we will propose different cases with an example domain and we will propose different infrastructures. To simplify the schema, we will omit the specification of the properties, keys, indices and relationships of the entities as well as the mapping. But you can see the complete schema in the example labs. Unique Source Schema: In the following schema we define 4 entities in the domain: Categories, Customers, Products and Orders, with Orders being an entity composed of Orders and Order Details. In infrastructure we define a single scenario that is associated with a single data source called Ordering, which is a MySQL database, which uses the default mapping. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default sources: - name: Ordering mapping: default dialect: MySQL connection: ${CNN_MYSQL} stages: - name: default sources: - name: Ordering Query: We will write the query to obtain an Order with its details belonging to a client. We will write the query using lambda expression. import { orm } from 'lambdaorm' import { Orders } from './northwind/domain/model' ( async () => { try { // Initialize the ORM by passing the schema file await orm.init('./lambdaORM.yaml') // Query const query = (customerId:string)=> Orders.filter(p =>p.customerId==customerId) .include(p=>[p.customer.map(p=>p.name),p.details .include(p=>p.product .include(p=>p.category.map(p=>p.name)) .map(p=>p.name)) .map(p=>[p.quantity,p.unitPrice])]) .page(1,1) // Execute the query const result = await orm.execute(query, {customerId: 'CENTC' }) // Print the result console.log(JSON.stringify(result,null,2)) } catch (error: any) { console.error(error) } })() Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"customer\": { \"name\": \"Centro comercial Moctezuma\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 8, \"product\": { \"name\": \"Sir Rodney's Scones\", \"category\": { \"name\": \"Confections\" } } }, { \"quantity\": 1, \"unitPrice\": 20.8, \"product\": { \"name\": \"Gravad lax\", \"category\": { \"name\": \"Seafood\" } } } ] } ] Multiple Sources Schema: In this case we will define a scenario where the domain entities are persisted in different data sources: The Categories, Products entities are persisted in the source Catalog, which is a MySQL database that uses the default mapping. The Customers entity is persisted in the Crm source, which is a PostgreSQL database that uses the default mapping. The Orders entity is persisted in the Ordering source, which is a MongoDB database that uses the mongoDb mapping. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default - name: mongoDb extends: default sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) Query: This time we will execute the query from the command line interface (CLI) and we will obtain the same result as in the previous case. lambdaorm execute -e \".env\" -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"customer\": { \"name\": \"Centro comercial Moctezuma\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 8, \"product\": { \"name\": \"Sir Rodney's Scones\", \"category\": { \"name\": \"Confections\" } } }, { \"quantity\": 1, \"unitPrice\": 20.8, \"product\": { \"name\": \"Gravad lax\", \"category\": { \"name\": \"Seafood\" } } } ] } ] view complete laboratory CQRS (Command Query Responsibility Segregation) Schema: In this case we will define 3 scenarios for the same domain. default: where data is read and written to the Catalog, Crm and Ordering sources. insights: where the data from the Insights source is read and written. cqrs: where data is read from the Insights source but persisted in the Catalog, Crm and Ordering sources. In order to synchronize the data between the Catalog, Crm and Ordering sources with Insights, we will define a listener that will be executed after each insertion, update or deletion of data in the default and cqrs scenario and will apply the same operation in the insights scenario. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default - name: mongoDb extends: default sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights - name: cqrs sources: - name: Insights condition: action == \"select\" - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) Query: In this case we will execute the query from the REST service. curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\",\"data\":\"{\\\"customerId\\\": \\\"CENTC\\\"}\", \"options\":\"{\\\"stage\\\": \\\"default\\\"}\"}' Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000+02:00\", \"details\": [ { \"subTotal\": 80, \"product\": { \"name\": \"Sir Rodney's Scones\" } }, { \"subTotal\": 20.8, \"product\": { \"name\": \"Gravad lax\" } } ], \"customer\": { \"name\": \"Centro comercial Moctezuma\" } } ] Read Query Plan on Default Stage: When a query is executed in the default stage, data will be obtained from different data sources according to the stage configuration. curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\", \"options\":\"{\\\"default\\\": \\\"cqrs\\\"}\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$match\\\" : { \\\"CustomerID\\\":{{customerId}} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"id\\\":\\\"$_id\\\", \\\"customerId\\\":\\\"$CustomerID\\\", \\\"orderDate\\\":\\\"$OrderDate\\\", \\\"__id\\\":\\\"$_id\\\", \\\"__customerId\\\":\\\"$CustomerID\\\" ,\\\"details\\\": { \\\"$map\\\":{ \\\"input\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\", \\\"in\\\": { \\\"subTotal\\\":{ \\\"$multiply\\\" :[\\\"$$this.Quantity\\\",\\\"$$this.UnitPrice\\\"] }, \\\"__productId\\\":\\\"$$this.ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$$this.OrderID\\\" } }} }} , { \\\"$sort\\\" :{ \\\"OrderDate\\\":1 } } , { \\\"$skip\\\" : 0 }, { \\\"$limit\\\" : 1 } , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT p.ProductName AS name, p.ProductID AS LambdaOrmParentId FROM Products p WHERE p.ProductID IN (?) \" } ] }, { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Crm\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" } ] } Read Query Plan on CQRS Stage: When you run a query on the cqrs stage, you will get data from a single data source according to the stage configuration. But if the query is for insert, update or delete, it will be executed in the corresponding data source. curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\", \"options\":\"{\\\"stage\\\": \\\"cqrs\\\"}\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT o.OrderID AS \\\"id\\\", o.CustomerID AS \\\"customerId\\\", o.OrderDate AS \\\"orderDate\\\", o.OrderID AS \\\"__id\\\", o.CustomerID AS \\\"__customerId\\\" FROM Orders o WHERE o.CustomerID = $1 ORDER BY o.OrderDate asc OFFSET 0 LIMIT 1 \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT (o1.Quantity * o1.UnitPrice) AS \\\"subTotal\\\", o1.ProductID AS \\\"__productId\\\", o1.OrderID AS \\\"LambdaOrmParentId\\\" FROM \\\"Order Details\\\" o1 WHERE o1.OrderID IN ($1) \", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT p.ProductName AS \\\"name\\\", p.ProductID AS \\\"LambdaOrmParentId\\\" FROM Products p WHERE p.ProductID IN ($1) \" } ] }, { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" } ] } view complete laboratory CQRS (Command Query Responsibility Segregation) with Kafka If we use the ORM from the REST service, we can use Kafka to publish the insert, update and delete data events in the default and cqrs scenario. And configure Kafka consumers to update the data in the insights scenario. Schema: ... infrastructure: ... queue: config: $QUEUE_CONFIG consumers: - name: syncInsights config: groupId: group1 subscribe: topic: insights-sync fromBeginning: true execute: orm.execute(message.query,message.data, {stage:\"insights\"}) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: queue.send(\"insights-sync\",[{query,data}]) view complete laboratory Node Client Schema: In the case of using a rest service client, the schema only defines the domain and the paths in the infrastructure. Since the infrastructure definition is done in the rest service configuration. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: paths: src: src domain: northwind/domain Query: In this case we will use a Node client that will connect to the REST service to execute the query. And in this case we will write the query in string format. import { orm } from 'lambdaorm-client-node' import fs from 'fs' import path from'path' ( async () => { try { await orm.init('http://localhost:9291') // test connection console.log(await orm.general.ping()) // Gets the content of the data.json file to insert the data const content = fs.readFileSync(path.join(__dirname,'../data.json'), 'utf-8') const data = JSON.parse(content) // Import data await orm.stage.import('default',data) // query as string const query = `Orders.filter(p =>p.customerId==customerId) .include(p=>[p.customer.map(p=>p.name),p.details .include(p=>p.product .include(p=>p.category.map(p=>p.name)) .map(p=>p.name)) .map(p=>[p.quantity,p.unitPrice])])` // get plan const plan = await orm.plan(query, { stage: 'default'}) console.log(JSON.stringify(plan,null,2)) // execute query const result = await orm.execute(query, {customerId: 'CENTC' },{ stage: 'default'}) console.log(JSON.stringify(result,null,2)) } catch (error: any) { console.error(error) } finally { await orm.end() } })() Considerations view complete laboratory Keep in mind that whether we use the \"lambdaorm\" or \"lambdaorm-client-node\" library we can write the queries in lambda or string format. We could start a development by proposing a simple infrastructure and then make modifications to it and this would not affect our code, since the queries are written based on the domain model and are independent of the infrastructure. You could also have development, test and production environments with different infrastructure configurations without having to alter the code. In addition to the examples presented previously, there are many other use cases that can be solved with \u03bbORM by configuring the schema and queries language. Therefore, we invite you to explore the different laboratories and read the documentation .","title":"Usage"},{"location":"Usage/#unique-source","text":"Schema: In the following schema we define 4 entities in the domain: Categories, Customers, Products and Orders, with Orders being an entity composed of Orders and Order Details. In infrastructure we define a single scenario that is associated with a single data source called Ordering, which is a MySQL database, which uses the default mapping. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default sources: - name: Ordering mapping: default dialect: MySQL connection: ${CNN_MYSQL} stages: - name: default sources: - name: Ordering Query: We will write the query to obtain an Order with its details belonging to a client. We will write the query using lambda expression. import { orm } from 'lambdaorm' import { Orders } from './northwind/domain/model' ( async () => { try { // Initialize the ORM by passing the schema file await orm.init('./lambdaORM.yaml') // Query const query = (customerId:string)=> Orders.filter(p =>p.customerId==customerId) .include(p=>[p.customer.map(p=>p.name),p.details .include(p=>p.product .include(p=>p.category.map(p=>p.name)) .map(p=>p.name)) .map(p=>[p.quantity,p.unitPrice])]) .page(1,1) // Execute the query const result = await orm.execute(query, {customerId: 'CENTC' }) // Print the result console.log(JSON.stringify(result,null,2)) } catch (error: any) { console.error(error) } })() Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"customer\": { \"name\": \"Centro comercial Moctezuma\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 8, \"product\": { \"name\": \"Sir Rodney's Scones\", \"category\": { \"name\": \"Confections\" } } }, { \"quantity\": 1, \"unitPrice\": 20.8, \"product\": { \"name\": \"Gravad lax\", \"category\": { \"name\": \"Seafood\" } } } ] } ]","title":"Unique Source"},{"location":"Usage/#multiple-sources","text":"Schema: In this case we will define a scenario where the domain entities are persisted in different data sources: The Categories, Products entities are persisted in the source Catalog, which is a MySQL database that uses the default mapping. The Customers entity is persisted in the Crm source, which is a PostgreSQL database that uses the default mapping. The Orders entity is persisted in the Ordering source, which is a MongoDB database that uses the mongoDb mapping. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default - name: mongoDb extends: default sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) Query: This time we will execute the query from the command line interface (CLI) and we will obtain the same result as in the previous case. lambdaorm execute -e \".env\" -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"customer\": { \"name\": \"Centro comercial Moctezuma\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 8, \"product\": { \"name\": \"Sir Rodney's Scones\", \"category\": { \"name\": \"Confections\" } } }, { \"quantity\": 1, \"unitPrice\": 20.8, \"product\": { \"name\": \"Gravad lax\", \"category\": { \"name\": \"Seafood\" } } } ] } ] view complete laboratory","title":"Multiple Sources"},{"location":"Usage/#cqrs-command-query-responsibility-segregation","text":"Schema: In this case we will define 3 scenarios for the same domain. default: where data is read and written to the Catalog, Crm and Ordering sources. insights: where the data from the Insights source is read and written. cqrs: where data is read from the Insights source but persisted in the Catalog, Crm and Ordering sources. In order to synchronize the data between the Catalog, Crm and Ordering sources with Insights, we will define a listener that will be executed after each insertion, update or deletion of data in the default and cqrs scenario and will apply the same operation in the insights scenario. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: mappings: - name: default - name: mongoDb extends: default sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights - name: cqrs sources: - name: Insights condition: action == \"select\" - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) Query: In this case we will execute the query from the REST service. curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\",\"data\":\"{\\\"customerId\\\": \\\"CENTC\\\"}\", \"options\":\"{\\\"stage\\\": \\\"default\\\"}\"}' Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000+02:00\", \"details\": [ { \"subTotal\": 80, \"product\": { \"name\": \"Sir Rodney's Scones\" } }, { \"subTotal\": 20.8, \"product\": { \"name\": \"Gravad lax\" } } ], \"customer\": { \"name\": \"Centro comercial Moctezuma\" } } ] Read Query Plan on Default Stage: When a query is executed in the default stage, data will be obtained from different data sources according to the stage configuration. curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\", \"options\":\"{\\\"default\\\": \\\"cqrs\\\"}\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$match\\\" : { \\\"CustomerID\\\":{{customerId}} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"id\\\":\\\"$_id\\\", \\\"customerId\\\":\\\"$CustomerID\\\", \\\"orderDate\\\":\\\"$OrderDate\\\", \\\"__id\\\":\\\"$_id\\\", \\\"__customerId\\\":\\\"$CustomerID\\\" ,\\\"details\\\": { \\\"$map\\\":{ \\\"input\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\", \\\"in\\\": { \\\"subTotal\\\":{ \\\"$multiply\\\" :[\\\"$$this.Quantity\\\",\\\"$$this.UnitPrice\\\"] }, \\\"__productId\\\":\\\"$$this.ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$$this.OrderID\\\" } }} }} , { \\\"$sort\\\" :{ \\\"OrderDate\\\":1 } } , { \\\"$skip\\\" : 0 }, { \\\"$limit\\\" : 1 } , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT p.ProductName AS name, p.ProductID AS LambdaOrmParentId FROM Products p WHERE p.ProductID IN (?) \" } ] }, { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Crm\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" } ] } Read Query Plan on CQRS Stage: When you run a query on the cqrs stage, you will get data from a single data source according to the stage configuration. But if the query is for insert, update or delete, it will be executed in the corresponding data source. curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>[p.details.include(p=>p.product.map(p=>p.name)).map(p=>{subTotal:p.quantity*p.unitPrice}),p.customer.map(p=>p.name)]).order(p=>p.orderDate).page(1,1)\", \"options\":\"{\\\"stage\\\": \\\"cqrs\\\"}\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT o.OrderID AS \\\"id\\\", o.CustomerID AS \\\"customerId\\\", o.OrderDate AS \\\"orderDate\\\", o.OrderID AS \\\"__id\\\", o.CustomerID AS \\\"__customerId\\\" FROM Orders o WHERE o.CustomerID = $1 ORDER BY o.OrderDate asc OFFSET 0 LIMIT 1 \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT (o1.Quantity * o1.UnitPrice) AS \\\"subTotal\\\", o1.ProductID AS \\\"__productId\\\", o1.OrderID AS \\\"LambdaOrmParentId\\\" FROM \\\"Order Details\\\" o1 WHERE o1.OrderID IN ($1) \", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT p.ProductName AS \\\"name\\\", p.ProductID AS \\\"LambdaOrmParentId\\\" FROM Products p WHERE p.ProductID IN ($1) \" } ] }, { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Insights\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" } ] } view complete laboratory","title":"CQRS (Command Query Responsibility Segregation)"},{"location":"Usage/#cqrs-command-query-responsibility-segregation-with-kafka","text":"If we use the ORM from the REST service, we can use Kafka to publish the insert, update and delete data events in the default and cqrs scenario. And configure Kafka consumers to update the data in the insights scenario. Schema: ... infrastructure: ... queue: config: $QUEUE_CONFIG consumers: - name: syncInsights config: groupId: group1 subscribe: topic: insights-sync fromBeginning: true execute: orm.execute(message.query,message.data, {stage:\"insights\"}) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: queue.send(\"insights-sync\",[{query,data}]) view complete laboratory","title":"CQRS (Command Query Responsibility Segregation) with Kafka"},{"location":"Usage/#node-client","text":"Schema: In the case of using a rest service client, the schema only defines the domain and the paths in the infrastructure. Since the infrastructure definition is done in the rest service configuration. domain: entities: - name: Categories - name: Customers - name: Products - name: Orders - name: Orders.details infrastructure: paths: src: src domain: northwind/domain Query: In this case we will use a Node client that will connect to the REST service to execute the query. And in this case we will write the query in string format. import { orm } from 'lambdaorm-client-node' import fs from 'fs' import path from'path' ( async () => { try { await orm.init('http://localhost:9291') // test connection console.log(await orm.general.ping()) // Gets the content of the data.json file to insert the data const content = fs.readFileSync(path.join(__dirname,'../data.json'), 'utf-8') const data = JSON.parse(content) // Import data await orm.stage.import('default',data) // query as string const query = `Orders.filter(p =>p.customerId==customerId) .include(p=>[p.customer.map(p=>p.name),p.details .include(p=>p.product .include(p=>p.category.map(p=>p.name)) .map(p=>p.name)) .map(p=>[p.quantity,p.unitPrice])])` // get plan const plan = await orm.plan(query, { stage: 'default'}) console.log(JSON.stringify(plan,null,2)) // execute query const result = await orm.execute(query, {customerId: 'CENTC' },{ stage: 'default'}) console.log(JSON.stringify(result,null,2)) } catch (error: any) { console.error(error) } finally { await orm.end() } })()","title":"Node Client"},{"location":"Usage/#considerations","text":"view complete laboratory Keep in mind that whether we use the \"lambdaorm\" or \"lambdaorm-client-node\" library we can write the queries in lambda or string format. We could start a development by proposing a simple infrastructure and then make modifications to it and this would not affect our code, since the queries are written based on the domain model and are independent of the infrastructure. You could also have development, test and production environments with different infrastructure configurations without having to alter the code. In addition to the examples presented previously, there are many other use cases that can be solved with \u03bbORM by configuring the schema and queries language. Therefore, we invite you to explore the different laboratories and read the documentation .","title":"Considerations"},{"location":"function_functions/","text":"Function Description sleep Sleeps for the specified number of milliseconds console Prints to console between Between includes Includes in In like String contains pattern isNull Check if value is null isNotNull Check if value is not null isEmpty Check if value is empty isNotEmpty Check if value is not empty isBoolean Check if value is boolean isNumber Check if value is number isInteger Check if value is integer isDecimal Check if value is decimal isString Check if value is string isDate Check if value is date isDateTime Check if value is date time isTime Check if value is time isObject Check if value is object isArray Check if value is array isBooleanFormat Check if value is boolean format isNumberFormat Check if value is number format isIntegerFormat Check if value is integer format isDecimalFormat Check if value is decimal format isDateFormat Check if value is date format isDateTimeFormat Check if value is date time format isTimeFormat Check if value is time format nvl Null value nvl2 Null value abs Absolute value acos Arc cosine asin Arc sine atan Arc tangent atan2 Arc tangent of two variables ceil Ceiling cos Cosine cosh Hyperbolic cosine exp Exponential floor Floor ln Natural logarithm log10 Base 10 logarithm log Natural logarithm remainder Remainder round Round sign Sign sin Sine sinh Hyperbolic sine tan Tangent tanh Hyperbolic tangent trunc Truncate chr Character capitalize Capitalize endsWith Ends with strCount Count lower Lower case lpad Left pad ltrim Left trim indexOf Index of join Join replace Replace rpad Right pad rtrim Right trim substring Substring trim Trim upper Upper case concat Concatenate test Test title Title case match Match mask Mask sensitive data split Split string startWith Starts with map Map foreach Foreach filter Filter reverse Reverse sort Sort remove Remove push Push bulkInsert Bulk Insert pop Pop length Length slice Slice page Paging distinct Distinct first First last Last count Count max Max min Min avg Average sum Sum curTime Current time today Current date now Current date time time Get time date Get date dateTime Get date time year Get year month Get month day Get day weekday Get day of week hour Get hours minute Get minutes second Get seconds millisecond Get milliseconds addYear Add years addMonth Add months addDay Add days addHour Add hours addMinute Add minutes addSecond Add seconds addMillisecond Add milliseconds addTime Add time subtractTime Subtract time yearDiff Year difference dayDiff Day difference hourDiff Hour difference secondDiff Second difference millisecondDiff Millisecond difference dayToDate Convert days to date time hourToDate Convert hours to date time secondToDate Convert seconds to date time millisecondToDate Convert milliseconds to date time toString Convert to string toNumber Convert to number dateToString Convert date to string stringify Convert to JSON string parse Parse JSON string keys Object keys values Object values entries Object entries fromEntries Object from entries union Union intersection Intersection difference Difference symmetricDifference Symmetric Difference toBase64 Convert a string to base64 getBase64 Get a string from base64 encrypt Encrypt a string decrypt Decrypt a string update Update a list updateAll Update all items in a list deleteAll Delete all items in a list merge Merge a list bulkMerge Bulk merge a list having Having a list include Include a list desc Descending asc Ascending orm.execute Execute query orm.plan Plan of query orm.metadata Get metadata from query orm.model Get model from query orm.parameters Get parameters from query orm.constraints Get constraints from query contains Includes substr Substring concatenate Concatenate startsWith Starts with select Map each Foreach where Filter order Sort delete Remove insert Push len Length Definition sleep description: Sleeps for the specified number of milliseconds deterministic: true return: void params: ms?: number console description: Prints to console deterministic: true return: void params: value: any between description: Between deterministic: true return: boolean params: value: T from: T to: T includes description: Includes deterministic: true return: boolean params: source: string|T[] value: string|T in description: In deterministic: true return: boolean params: source: T values: T like description: String contains pattern deterministic: true return: boolean params: value: string pattern: string isNull description: Check if value is null deterministic: true return: boolean params: value: any isNotNull description: Check if value is not null deterministic: true return: boolean params: value: any isEmpty description: Check if value is empty deterministic: true return: boolean params: value: string isNotEmpty description: Check if value is not empty deterministic: true return: boolean params: value: string isBoolean description: Check if value is boolean deterministic: true return: boolean params: value: any isNumber description: Check if value is number deterministic: true return: boolean params: value: any isInteger description: Check if value is integer deterministic: true return: boolean params: value: any isDecimal description: Check if value is decimal deterministic: true return: boolean params: value: any isString description: Check if value is string deterministic: true return: boolean params: value: any isDate description: Check if value is date deterministic: true return: boolean params: value: any isDateTime description: Check if value is date time deterministic: true return: boolean params: value: any isTime description: Check if value is time deterministic: true return: boolean params: value: any isObject description: Check if value is object deterministic: true return: boolean params: value: any isArray description: Check if value is array deterministic: true return: boolean params: value: any isBooleanFormat description: Check if value is boolean format deterministic: true return: boolean params: value: string isNumberFormat description: Check if value is number format deterministic: true return: boolean params: value: string isIntegerFormat description: Check if value is integer format deterministic: true return: boolean params: value: string isDecimalFormat description: Check if value is decimal format deterministic: true return: boolean params: value: string isDateFormat description: Check if value is date format deterministic: true return: boolean params: value: string isDateTimeFormat description: Check if value is date time format deterministic: true return: boolean params: value: string isTimeFormat description: Check if value is time format deterministic: true return: boolean params: value: string nvl description: Null value deterministic: true return: T params: value: T default: T nvl2 description: Null value deterministic: true return: T params: value: any a: T b: T abs description: Absolute value deterministic: true return: number params: x: number acos description: Arc cosine deterministic: true return: number params: x: number asin description: Arc sine deterministic: true return: number params: x: number atan description: Arc tangent deterministic: true return: number params: x: number atan2 description: Arc tangent of two variables deterministic: true return: number params: x: number ceil description: Ceiling deterministic: true return: number params: x: number cos description: Cosine deterministic: true return: number params: x: number cosh description: Hyperbolic cosine deterministic: true return: number params: x: number exp description: Exponential deterministic: true return: number params: x: number floor description: Floor deterministic: true return: number params: x: number ln description: Natural logarithm deterministic: true return: number params: x: number log10 description: Base 10 logarithm deterministic: true return: number params: x: number log description: Natural logarithm deterministic: true return: number params: x: number remainder description: Remainder deterministic: true return: number params: n1: number n2: number round description: Round deterministic: true return: number params: num: number decimals: 0 sign description: Sign deterministic: true return: number params: x: number sin description: Sine deterministic: true return: number params: x: number sinh description: Hyperbolic sine deterministic: true return: number params: x: number tan description: Tangent deterministic: true return: number params: x: number tanh description: Hyperbolic tangent deterministic: true return: number params: x: number trunc description: Truncate deterministic: true return: number params: x: number chr description: Character deterministic: true return: string params: ascii: number capitalize description: Capitalize deterministic: true return: string params: value: string endsWith description: Ends with deterministic: true return: boolean params: value: string sub: string start: number strCount description: Count deterministic: true return: number params: source: string value: string lower description: Lower case deterministic: true return: string params: value: string lpad description: Left pad deterministic: true return: string params: value: string len: number pad: string ltrim description: Left trim deterministic: true return: string params: value: string indexOf description: Index of deterministic: true return: number params: value: string sub: string start: number join description: Join deterministic: true return: string params: values: string[] separator: string : \" replace description: Replace deterministic: true return: string params: value: string source: string target: string rpad description: Right pad deterministic: true return: string params: value: string len: number pad: string rtrim description: Right trim deterministic: true return: string params: value: string substring description: Substring deterministic: true return: string params: value: string from: number count: number trim description: Trim deterministic: true return: string params: value: string upper description: Upper case deterministic: true return: string params: value: string concat description: Concatenate deterministic: true return: string params: values: any test description: Test deterministic: true return: boolean params: value: string regexp: string title description: Title case deterministic: true return: string params: value: string match description: Match deterministic: true return: any params: value: string regexp: string mask description: Mask sensitive data deterministic: true return: string params: value: string split description: Split string deterministic: true return: string[] params: value: string separator: string : \" startWith description: Starts with deterministic: true return: boolean params: value: string sub: string start: number map description: Map deterministic: true return: T[] params: list: any[] predicate: T foreach description: Foreach deterministic: true return: void params: list: any[] predicate: any filter description: Filter deterministic: true return: T[] params: list: T[] predicate: boolean reverse description: Reverse deterministic: true return: T[] params: list: T[] predicate: any sort description: Sort deterministic: true return: T[] params: list: T[] predicate: any remove description: Remove deterministic: true return: T[] params: list: T[] predicate: boolean push description: Push deterministic: true return: T[] params: list: T[] value: T bulkInsert description: Bulk Insert deterministic: true return: T[] params: list: T[] value: T[] pop description: Pop deterministic: true return: T params: list: T[] length description: Length deterministic: true return: number params: source: any[]|string slice description: Slice deterministic: true return: T[] params: list: T[] from: integer to: integer page description: Paging deterministic: true return: T[] params: list: T[] page: integer records: integer distinct description: Distinct deterministic: true return: any[] params: list: any[] predicate: any first description: First deterministic: true return: T params: list: T[] predicate: boolean last description: Last deterministic: true return: T params: list: T[] predicate: boolean count description: Count deterministic: true return: integer params: list: T[] predicate: boolean max description: Max deterministic: true return: T params: list: T[] predicate: boolean min description: Min deterministic: true return: T params: list: T[] predicate: boolean avg description: Average deterministic: true return: number params: list: T[] value: number sum description: Sum deterministic: true return: number params: list: T[] value: number curTime description: Current time deterministic: true return: time params: : any today description: Current date deterministic: true return: date params: : any now description: Current date time deterministic: true return: dateTime params: : any time description: Get time deterministic: true return: time params: value: string date description: Get date deterministic: true return: date params: value: string dateTime description: Get date time deterministic: true return: dateTime params: value: string year description: Get year deterministic: true return: integer params: value: dateTime month description: Get month deterministic: true return: integer params: value: dateTime day description: Get day deterministic: true return: integer params: value: dateTime weekday description: Get day of week deterministic: true return: integer params: value: dateTime hour description: Get hours deterministic: true return: integer params: value: dateTime minute description: Get minutes deterministic: true return: integer params: value: dateTime second description: Get seconds deterministic: true return: integer params: value: dateTime millisecond description: Get milliseconds deterministic: true return: integer params: value: dateTime addYear description: Add years deterministic: true return: dateTime params: date: dateTime value: number addMonth description: Add months deterministic: true return: dateTime params: date: dateTime value: number addDay description: Add days deterministic: true return: dateTime params: date: dateTime value: number addHour description: Add hours deterministic: true return: dateTime params: date: dateTime value: number addMinute description: Add minutes deterministic: true return: dateTime params: date: dateTime value: number addSecond description: Add seconds deterministic: true return: dateTime params: date: dateTime value: number addMillisecond description: Add milliseconds deterministic: true return: dateTime params: date: dateTime value: number addTime description: Add time deterministic: true return: dateTime params: date: dateTime time: time subtractTime description: Subtract time deterministic: true return: dateTime params: date: dateTime time: time yearDiff description: Year difference deterministic: true return: integer params: date1: dateTime date2: dateTime dayDiff description: Day difference deterministic: true return: integer params: date1: dateTime date2: dateTime hourDiff description: Hour difference deterministic: true return: integer params: date1: dateTime date2: dateTime secondDiff description: Second difference deterministic: true return: integer params: date1: dateTime date2: dateTime millisecondDiff description: Millisecond difference deterministic: true return: integer params: date1: dateTime date2: dateTime dayToDate description: Convert days to date time deterministic: true return: dateTime params: value: number hourToDate description: Convert hours to date time deterministic: true return: dateTime params: value: number secondToDate description: Convert seconds to date time deterministic: true return: dateTime params: value: number millisecondToDate description: Convert milliseconds to date time deterministic: true return: dateTime params: value: number toString description: Convert to string deterministic: true return: string params: value: any toNumber description: Convert to number deterministic: true return: number params: value: any dateToString description: Convert date to string deterministic: true return: string params: date: date stringify description: Convert to JSON string deterministic: true return: string params: value: any parse description: Parse JSON string deterministic: true return: any params: value: string keys description: Object keys deterministic: true return: string[] params: obj: any values description: Object values deterministic: true return: any[] params: obj: any entries description: Object entries deterministic: true return: [string,any][] params: obj: any fromEntries description: Object from entries deterministic: true return: any params: entries: [string : any][] union description: Union deterministic: true return: T[] params: a: T[] b: T[] intersection description: Intersection deterministic: true return: T[] params: a: T[] b: T[] difference description: Difference deterministic: true return: T[] params: a: T[] b: T[] symmetricDifference description: Symmetric Difference deterministic: true return: T[] params: a: T[] b: T[] toBase64 description: Convert a string to base64 deterministic: true return: string params: value: string getBase64 description: Get a string from base64 deterministic: true return: string params: value: string encrypt description: Encrypt a string deterministic: true return: string params: value: string decrypt description: Decrypt a string deterministic: true return: string params: value: string update description: Update a list deterministic: true return: any params: list: any[] predicate: any updateAll description: Update all items in a list deterministic: true return: any params: list: any[] predicate: any deleteAll description: Delete all items in a list deterministic: true return: any params: list: any[] merge description: Merge a list deterministic: true return: any params: list: any[] predicate: any bulkMerge description: Bulk merge a list deterministic: true return: any params: list: any[] predicate: any having description: Having a list deterministic: true return: T[] params: list: T[] predicate: boolean include description: Include a list deterministic: true return: any params: list: any[] predicate: any desc description: Descending deterministic: true return: void params: value: any asc description: Ascending deterministic: true return: void params: value: any orm.execute description: Execute query deterministic: true return: any params: query: string data: any options: any orm.plan description: Plan of query deterministic: true return: any params: query: string options: any orm.metadata description: Get metadata from query deterministic: true return: any params: query: string orm.model description: Get model from query deterministic: true return: any params: query: string orm.parameters description: Get parameters from query deterministic: true return: any params: query: string orm.constraints description: Get constraints from query deterministic: true return: any params: query: string contains description: Includes deterministic: true return: boolean params: source: string|T[] value: string|T substr description: Substring deterministic: true return: string params: value: string from: number count: number concatenate description: Concatenate deterministic: true return: string params: values: any startsWith description: Starts with deterministic: true return: boolean params: value: string sub: string start: number select description: Map deterministic: true return: T[] params: list: any[] predicate: T each description: Foreach deterministic: true return: void params: list: any[] predicate: any where description: Filter deterministic: true return: T[] params: list: T[] predicate: boolean order description: Sort deterministic: true return: T[] params: list: T[] predicate: any delete description: Remove deterministic: true return: T[] params: list: T[] predicate: boolean insert description: Push deterministic: true return: T[] params: list: T[] value: T len description: Length deterministic: true return: number params: source: any[]|string","title":"Function functions"},{"location":"function_functions/#definition","text":"","title":"Definition"},{"location":"function_functions/#sleep","text":"description: Sleeps for the specified number of milliseconds deterministic: true return: void params: ms?: number","title":"sleep"},{"location":"function_functions/#console","text":"description: Prints to console deterministic: true return: void params: value: any","title":"console"},{"location":"function_functions/#between","text":"description: Between deterministic: true return: boolean params: value: T from: T to: T","title":"between"},{"location":"function_functions/#includes","text":"description: Includes deterministic: true return: boolean params: source: string|T[] value: string|T","title":"includes"},{"location":"function_functions/#in","text":"description: In deterministic: true return: boolean params: source: T values: T","title":"in"},{"location":"function_functions/#like","text":"description: String contains pattern deterministic: true return: boolean params: value: string pattern: string","title":"like"},{"location":"function_functions/#isnull","text":"description: Check if value is null deterministic: true return: boolean params: value: any","title":"isNull"},{"location":"function_functions/#isnotnull","text":"description: Check if value is not null deterministic: true return: boolean params: value: any","title":"isNotNull"},{"location":"function_functions/#isempty","text":"description: Check if value is empty deterministic: true return: boolean params: value: string","title":"isEmpty"},{"location":"function_functions/#isnotempty","text":"description: Check if value is not empty deterministic: true return: boolean params: value: string","title":"isNotEmpty"},{"location":"function_functions/#isboolean","text":"description: Check if value is boolean deterministic: true return: boolean params: value: any","title":"isBoolean"},{"location":"function_functions/#isnumber","text":"description: Check if value is number deterministic: true return: boolean params: value: any","title":"isNumber"},{"location":"function_functions/#isinteger","text":"description: Check if value is integer deterministic: true return: boolean params: value: any","title":"isInteger"},{"location":"function_functions/#isdecimal","text":"description: Check if value is decimal deterministic: true return: boolean params: value: any","title":"isDecimal"},{"location":"function_functions/#isstring","text":"description: Check if value is string deterministic: true return: boolean params: value: any","title":"isString"},{"location":"function_functions/#isdate","text":"description: Check if value is date deterministic: true return: boolean params: value: any","title":"isDate"},{"location":"function_functions/#isdatetime","text":"description: Check if value is date time deterministic: true return: boolean params: value: any","title":"isDateTime"},{"location":"function_functions/#istime","text":"description: Check if value is time deterministic: true return: boolean params: value: any","title":"isTime"},{"location":"function_functions/#isobject","text":"description: Check if value is object deterministic: true return: boolean params: value: any","title":"isObject"},{"location":"function_functions/#isarray","text":"description: Check if value is array deterministic: true return: boolean params: value: any","title":"isArray"},{"location":"function_functions/#isbooleanformat","text":"description: Check if value is boolean format deterministic: true return: boolean params: value: string","title":"isBooleanFormat"},{"location":"function_functions/#isnumberformat","text":"description: Check if value is number format deterministic: true return: boolean params: value: string","title":"isNumberFormat"},{"location":"function_functions/#isintegerformat","text":"description: Check if value is integer format deterministic: true return: boolean params: value: string","title":"isIntegerFormat"},{"location":"function_functions/#isdecimalformat","text":"description: Check if value is decimal format deterministic: true return: boolean params: value: string","title":"isDecimalFormat"},{"location":"function_functions/#isdateformat","text":"description: Check if value is date format deterministic: true return: boolean params: value: string","title":"isDateFormat"},{"location":"function_functions/#isdatetimeformat","text":"description: Check if value is date time format deterministic: true return: boolean params: value: string","title":"isDateTimeFormat"},{"location":"function_functions/#istimeformat","text":"description: Check if value is time format deterministic: true return: boolean params: value: string","title":"isTimeFormat"},{"location":"function_functions/#nvl","text":"description: Null value deterministic: true return: T params: value: T default: T","title":"nvl"},{"location":"function_functions/#nvl2","text":"description: Null value deterministic: true return: T params: value: any a: T b: T","title":"nvl2"},{"location":"function_functions/#abs","text":"description: Absolute value deterministic: true return: number params: x: number","title":"abs"},{"location":"function_functions/#acos","text":"description: Arc cosine deterministic: true return: number params: x: number","title":"acos"},{"location":"function_functions/#asin","text":"description: Arc sine deterministic: true return: number params: x: number","title":"asin"},{"location":"function_functions/#atan","text":"description: Arc tangent deterministic: true return: number params: x: number","title":"atan"},{"location":"function_functions/#atan2","text":"description: Arc tangent of two variables deterministic: true return: number params: x: number","title":"atan2"},{"location":"function_functions/#ceil","text":"description: Ceiling deterministic: true return: number params: x: number","title":"ceil"},{"location":"function_functions/#cos","text":"description: Cosine deterministic: true return: number params: x: number","title":"cos"},{"location":"function_functions/#cosh","text":"description: Hyperbolic cosine deterministic: true return: number params: x: number","title":"cosh"},{"location":"function_functions/#exp","text":"description: Exponential deterministic: true return: number params: x: number","title":"exp"},{"location":"function_functions/#floor","text":"description: Floor deterministic: true return: number params: x: number","title":"floor"},{"location":"function_functions/#ln","text":"description: Natural logarithm deterministic: true return: number params: x: number","title":"ln"},{"location":"function_functions/#log10","text":"description: Base 10 logarithm deterministic: true return: number params: x: number","title":"log10"},{"location":"function_functions/#log","text":"description: Natural logarithm deterministic: true return: number params: x: number","title":"log"},{"location":"function_functions/#remainder","text":"description: Remainder deterministic: true return: number params: n1: number n2: number","title":"remainder"},{"location":"function_functions/#round","text":"description: Round deterministic: true return: number params: num: number decimals: 0","title":"round"},{"location":"function_functions/#sign","text":"description: Sign deterministic: true return: number params: x: number","title":"sign"},{"location":"function_functions/#sin","text":"description: Sine deterministic: true return: number params: x: number","title":"sin"},{"location":"function_functions/#sinh","text":"description: Hyperbolic sine deterministic: true return: number params: x: number","title":"sinh"},{"location":"function_functions/#tan","text":"description: Tangent deterministic: true return: number params: x: number","title":"tan"},{"location":"function_functions/#tanh","text":"description: Hyperbolic tangent deterministic: true return: number params: x: number","title":"tanh"},{"location":"function_functions/#trunc","text":"description: Truncate deterministic: true return: number params: x: number","title":"trunc"},{"location":"function_functions/#chr","text":"description: Character deterministic: true return: string params: ascii: number","title":"chr"},{"location":"function_functions/#capitalize","text":"description: Capitalize deterministic: true return: string params: value: string","title":"capitalize"},{"location":"function_functions/#endswith","text":"description: Ends with deterministic: true return: boolean params: value: string sub: string start: number","title":"endsWith"},{"location":"function_functions/#strcount","text":"description: Count deterministic: true return: number params: source: string value: string","title":"strCount"},{"location":"function_functions/#lower","text":"description: Lower case deterministic: true return: string params: value: string","title":"lower"},{"location":"function_functions/#lpad","text":"description: Left pad deterministic: true return: string params: value: string len: number pad: string","title":"lpad"},{"location":"function_functions/#ltrim","text":"description: Left trim deterministic: true return: string params: value: string","title":"ltrim"},{"location":"function_functions/#indexof","text":"description: Index of deterministic: true return: number params: value: string sub: string start: number","title":"indexOf"},{"location":"function_functions/#join","text":"description: Join deterministic: true return: string params: values: string[] separator: string : \"","title":"join"},{"location":"function_functions/#replace","text":"description: Replace deterministic: true return: string params: value: string source: string target: string","title":"replace"},{"location":"function_functions/#rpad","text":"description: Right pad deterministic: true return: string params: value: string len: number pad: string","title":"rpad"},{"location":"function_functions/#rtrim","text":"description: Right trim deterministic: true return: string params: value: string","title":"rtrim"},{"location":"function_functions/#substring","text":"description: Substring deterministic: true return: string params: value: string from: number count: number","title":"substring"},{"location":"function_functions/#trim","text":"description: Trim deterministic: true return: string params: value: string","title":"trim"},{"location":"function_functions/#upper","text":"description: Upper case deterministic: true return: string params: value: string","title":"upper"},{"location":"function_functions/#concat","text":"description: Concatenate deterministic: true return: string params: values: any","title":"concat"},{"location":"function_functions/#test","text":"description: Test deterministic: true return: boolean params: value: string regexp: string","title":"test"},{"location":"function_functions/#title","text":"description: Title case deterministic: true return: string params: value: string","title":"title"},{"location":"function_functions/#match","text":"description: Match deterministic: true return: any params: value: string regexp: string","title":"match"},{"location":"function_functions/#mask","text":"description: Mask sensitive data deterministic: true return: string params: value: string","title":"mask"},{"location":"function_functions/#split","text":"description: Split string deterministic: true return: string[] params: value: string separator: string : \"","title":"split"},{"location":"function_functions/#startwith","text":"description: Starts with deterministic: true return: boolean params: value: string sub: string start: number","title":"startWith"},{"location":"function_functions/#map","text":"description: Map deterministic: true return: T[] params: list: any[] predicate: T","title":"map"},{"location":"function_functions/#foreach","text":"description: Foreach deterministic: true return: void params: list: any[] predicate: any","title":"foreach"},{"location":"function_functions/#filter","text":"description: Filter deterministic: true return: T[] params: list: T[] predicate: boolean","title":"filter"},{"location":"function_functions/#reverse","text":"description: Reverse deterministic: true return: T[] params: list: T[] predicate: any","title":"reverse"},{"location":"function_functions/#sort","text":"description: Sort deterministic: true return: T[] params: list: T[] predicate: any","title":"sort"},{"location":"function_functions/#remove","text":"description: Remove deterministic: true return: T[] params: list: T[] predicate: boolean","title":"remove"},{"location":"function_functions/#push","text":"description: Push deterministic: true return: T[] params: list: T[] value: T","title":"push"},{"location":"function_functions/#bulkinsert","text":"description: Bulk Insert deterministic: true return: T[] params: list: T[] value: T[]","title":"bulkInsert"},{"location":"function_functions/#pop","text":"description: Pop deterministic: true return: T params: list: T[]","title":"pop"},{"location":"function_functions/#length","text":"description: Length deterministic: true return: number params: source: any[]|string","title":"length"},{"location":"function_functions/#slice","text":"description: Slice deterministic: true return: T[] params: list: T[] from: integer to: integer","title":"slice"},{"location":"function_functions/#page","text":"description: Paging deterministic: true return: T[] params: list: T[] page: integer records: integer","title":"page"},{"location":"function_functions/#distinct","text":"description: Distinct deterministic: true return: any[] params: list: any[] predicate: any","title":"distinct"},{"location":"function_functions/#first","text":"description: First deterministic: true return: T params: list: T[] predicate: boolean","title":"first"},{"location":"function_functions/#last","text":"description: Last deterministic: true return: T params: list: T[] predicate: boolean","title":"last"},{"location":"function_functions/#count","text":"description: Count deterministic: true return: integer params: list: T[] predicate: boolean","title":"count"},{"location":"function_functions/#max","text":"description: Max deterministic: true return: T params: list: T[] predicate: boolean","title":"max"},{"location":"function_functions/#min","text":"description: Min deterministic: true return: T params: list: T[] predicate: boolean","title":"min"},{"location":"function_functions/#avg","text":"description: Average deterministic: true return: number params: list: T[] value: number","title":"avg"},{"location":"function_functions/#sum","text":"description: Sum deterministic: true return: number params: list: T[] value: number","title":"sum"},{"location":"function_functions/#curtime","text":"description: Current time deterministic: true return: time params: : any","title":"curTime"},{"location":"function_functions/#today","text":"description: Current date deterministic: true return: date params: : any","title":"today"},{"location":"function_functions/#now","text":"description: Current date time deterministic: true return: dateTime params: : any","title":"now"},{"location":"function_functions/#time","text":"description: Get time deterministic: true return: time params: value: string","title":"time"},{"location":"function_functions/#date","text":"description: Get date deterministic: true return: date params: value: string","title":"date"},{"location":"function_functions/#datetime","text":"description: Get date time deterministic: true return: dateTime params: value: string","title":"dateTime"},{"location":"function_functions/#year","text":"description: Get year deterministic: true return: integer params: value: dateTime","title":"year"},{"location":"function_functions/#month","text":"description: Get month deterministic: true return: integer params: value: dateTime","title":"month"},{"location":"function_functions/#day","text":"description: Get day deterministic: true return: integer params: value: dateTime","title":"day"},{"location":"function_functions/#weekday","text":"description: Get day of week deterministic: true return: integer params: value: dateTime","title":"weekday"},{"location":"function_functions/#hour","text":"description: Get hours deterministic: true return: integer params: value: dateTime","title":"hour"},{"location":"function_functions/#minute","text":"description: Get minutes deterministic: true return: integer params: value: dateTime","title":"minute"},{"location":"function_functions/#second","text":"description: Get seconds deterministic: true return: integer params: value: dateTime","title":"second"},{"location":"function_functions/#millisecond","text":"description: Get milliseconds deterministic: true return: integer params: value: dateTime","title":"millisecond"},{"location":"function_functions/#addyear","text":"description: Add years deterministic: true return: dateTime params: date: dateTime value: number","title":"addYear"},{"location":"function_functions/#addmonth","text":"description: Add months deterministic: true return: dateTime params: date: dateTime value: number","title":"addMonth"},{"location":"function_functions/#addday","text":"description: Add days deterministic: true return: dateTime params: date: dateTime value: number","title":"addDay"},{"location":"function_functions/#addhour","text":"description: Add hours deterministic: true return: dateTime params: date: dateTime value: number","title":"addHour"},{"location":"function_functions/#addminute","text":"description: Add minutes deterministic: true return: dateTime params: date: dateTime value: number","title":"addMinute"},{"location":"function_functions/#addsecond","text":"description: Add seconds deterministic: true return: dateTime params: date: dateTime value: number","title":"addSecond"},{"location":"function_functions/#addmillisecond","text":"description: Add milliseconds deterministic: true return: dateTime params: date: dateTime value: number","title":"addMillisecond"},{"location":"function_functions/#addtime","text":"description: Add time deterministic: true return: dateTime params: date: dateTime time: time","title":"addTime"},{"location":"function_functions/#subtracttime","text":"description: Subtract time deterministic: true return: dateTime params: date: dateTime time: time","title":"subtractTime"},{"location":"function_functions/#yeardiff","text":"description: Year difference deterministic: true return: integer params: date1: dateTime date2: dateTime","title":"yearDiff"},{"location":"function_functions/#daydiff","text":"description: Day difference deterministic: true return: integer params: date1: dateTime date2: dateTime","title":"dayDiff"},{"location":"function_functions/#hourdiff","text":"description: Hour difference deterministic: true return: integer params: date1: dateTime date2: dateTime","title":"hourDiff"},{"location":"function_functions/#seconddiff","text":"description: Second difference deterministic: true return: integer params: date1: dateTime date2: dateTime","title":"secondDiff"},{"location":"function_functions/#milliseconddiff","text":"description: Millisecond difference deterministic: true return: integer params: date1: dateTime date2: dateTime","title":"millisecondDiff"},{"location":"function_functions/#daytodate","text":"description: Convert days to date time deterministic: true return: dateTime params: value: number","title":"dayToDate"},{"location":"function_functions/#hourtodate","text":"description: Convert hours to date time deterministic: true return: dateTime params: value: number","title":"hourToDate"},{"location":"function_functions/#secondtodate","text":"description: Convert seconds to date time deterministic: true return: dateTime params: value: number","title":"secondToDate"},{"location":"function_functions/#millisecondtodate","text":"description: Convert milliseconds to date time deterministic: true return: dateTime params: value: number","title":"millisecondToDate"},{"location":"function_functions/#tostring","text":"description: Convert to string deterministic: true return: string params: value: any","title":"toString"},{"location":"function_functions/#tonumber","text":"description: Convert to number deterministic: true return: number params: value: any","title":"toNumber"},{"location":"function_functions/#datetostring","text":"description: Convert date to string deterministic: true return: string params: date: date","title":"dateToString"},{"location":"function_functions/#stringify","text":"description: Convert to JSON string deterministic: true return: string params: value: any","title":"stringify"},{"location":"function_functions/#parse","text":"description: Parse JSON string deterministic: true return: any params: value: string","title":"parse"},{"location":"function_functions/#keys","text":"description: Object keys deterministic: true return: string[] params: obj: any","title":"keys"},{"location":"function_functions/#values","text":"description: Object values deterministic: true return: any[] params: obj: any","title":"values"},{"location":"function_functions/#entries","text":"description: Object entries deterministic: true return: [string,any][] params: obj: any","title":"entries"},{"location":"function_functions/#fromentries","text":"description: Object from entries deterministic: true return: any params: entries: [string : any][]","title":"fromEntries"},{"location":"function_functions/#union","text":"description: Union deterministic: true return: T[] params: a: T[] b: T[]","title":"union"},{"location":"function_functions/#intersection","text":"description: Intersection deterministic: true return: T[] params: a: T[] b: T[]","title":"intersection"},{"location":"function_functions/#difference","text":"description: Difference deterministic: true return: T[] params: a: T[] b: T[]","title":"difference"},{"location":"function_functions/#symmetricdifference","text":"description: Symmetric Difference deterministic: true return: T[] params: a: T[] b: T[]","title":"symmetricDifference"},{"location":"function_functions/#tobase64","text":"description: Convert a string to base64 deterministic: true return: string params: value: string","title":"toBase64"},{"location":"function_functions/#getbase64","text":"description: Get a string from base64 deterministic: true return: string params: value: string","title":"getBase64"},{"location":"function_functions/#encrypt","text":"description: Encrypt a string deterministic: true return: string params: value: string","title":"encrypt"},{"location":"function_functions/#decrypt","text":"description: Decrypt a string deterministic: true return: string params: value: string","title":"decrypt"},{"location":"function_functions/#update","text":"description: Update a list deterministic: true return: any params: list: any[] predicate: any","title":"update"},{"location":"function_functions/#updateall","text":"description: Update all items in a list deterministic: true return: any params: list: any[] predicate: any","title":"updateAll"},{"location":"function_functions/#deleteall","text":"description: Delete all items in a list deterministic: true return: any params: list: any[]","title":"deleteAll"},{"location":"function_functions/#merge","text":"description: Merge a list deterministic: true return: any params: list: any[] predicate: any","title":"merge"},{"location":"function_functions/#bulkmerge","text":"description: Bulk merge a list deterministic: true return: any params: list: any[] predicate: any","title":"bulkMerge"},{"location":"function_functions/#having","text":"description: Having a list deterministic: true return: T[] params: list: T[] predicate: boolean","title":"having"},{"location":"function_functions/#include","text":"description: Include a list deterministic: true return: any params: list: any[] predicate: any","title":"include"},{"location":"function_functions/#desc","text":"description: Descending deterministic: true return: void params: value: any","title":"desc"},{"location":"function_functions/#asc","text":"description: Ascending deterministic: true return: void params: value: any","title":"asc"},{"location":"function_functions/#ormexecute","text":"description: Execute query deterministic: true return: any params: query: string data: any options: any","title":"orm.execute"},{"location":"function_functions/#ormplan","text":"description: Plan of query deterministic: true return: any params: query: string options: any","title":"orm.plan"},{"location":"function_functions/#ormmetadata","text":"description: Get metadata from query deterministic: true return: any params: query: string","title":"orm.metadata"},{"location":"function_functions/#ormmodel","text":"description: Get model from query deterministic: true return: any params: query: string","title":"orm.model"},{"location":"function_functions/#ormparameters","text":"description: Get parameters from query deterministic: true return: any params: query: string","title":"orm.parameters"},{"location":"function_functions/#ormconstraints","text":"description: Get constraints from query deterministic: true return: any params: query: string","title":"orm.constraints"},{"location":"function_functions/#contains","text":"description: Includes deterministic: true return: boolean params: source: string|T[] value: string|T","title":"contains"},{"location":"function_functions/#substr","text":"description: Substring deterministic: true return: string params: value: string from: number count: number","title":"substr"},{"location":"function_functions/#concatenate","text":"description: Concatenate deterministic: true return: string params: values: any","title":"concatenate"},{"location":"function_functions/#startswith","text":"description: Starts with deterministic: true return: boolean params: value: string sub: string start: number","title":"startsWith"},{"location":"function_functions/#select","text":"description: Map deterministic: true return: T[] params: list: any[] predicate: T","title":"select"},{"location":"function_functions/#each","text":"description: Foreach deterministic: true return: void params: list: any[] predicate: any","title":"each"},{"location":"function_functions/#where","text":"description: Filter deterministic: true return: T[] params: list: T[] predicate: boolean","title":"where"},{"location":"function_functions/#order","text":"description: Sort deterministic: true return: T[] params: list: T[] predicate: any","title":"order"},{"location":"function_functions/#delete","text":"description: Remove deterministic: true return: T[] params: list: T[] predicate: boolean","title":"delete"},{"location":"function_functions/#insert","text":"description: Push deterministic: true return: T[] params: list: T[] value: T","title":"insert"},{"location":"function_functions/#len","text":"description: Length deterministic: true return: number params: source: any[]|string","title":"len"},{"location":"api/","text":"Lambda ORM service Service that exposes the functionality of the LambdaOrm library Service The service exposes the following endpoints: Queries endpoints Query General endpoints General Schema endpoints Schema Stage endpoints Stages Usage Configuration Queries Kafka source Change log Ping curl -X GET \"http://localhost:9291/ping?format=beautiful\" Result: { \"message\": \"pong\", \"time\": \"2023-12-08T19:41:00.543Z\" } Model curl -X POST \"http://localhost:9291/model?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ] Parameters curl -X POST \"http://localhost:9291/parameters?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: [ { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ] Constraints curl -X POST \"http://localhost:9291/constraints?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] } Plan curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"PostgreSQL\", \"source\": \"default\", \"sentence\": \"SELECT o.OrderID AS \\\"id\\\", o.CustomerID AS \\\"customerId\\\", o.OrderDate AS \\\"orderDate\\\", o.OrderID AS \\\"__id\\\" FROM Orders o WHERE o.CustomerID = $1 \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"PostgreSQL\", \"source\": \"default\", \"sentence\": \"SELECT o1.OrderID AS \\\"orderId\\\", o1.ProductID AS \\\"productId\\\", o1.UnitPrice AS \\\"unitPrice\\\", o1.Quantity AS \\\"quantity\\\", o1.OrderID AS \\\"LambdaOrmParentId\\\" FROM \\\"Order Details\\\" o1 WHERE o1.OrderID IN ($1) \" } ] } Import curl -X POST -H \"Content-Type: application/json\" -d @data.json http://localhost:9291/stages/default/import Execute curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\", \"data\": \"{\\\"customerId\\\": \\\"CENTC\\\"}\" }' Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"details\": [ { \"orderId\": 12, \"productId\": 21, \"unitPrice\": 8, \"quantity\": 10 }, { \"orderId\": 12, \"productId\": 37, \"unitPrice\": 20.8, \"quantity\": 1 } ] } ] Docker Image You can access to image at flaviorita/lambdaorm-svc Clients The following clients allow consuming this service Node Client Soon: Kotlin Client Python Client CSharp Client Go Client Labs You can access various labs at github.com/lambda-orm/lambdaorm-labs","title":"Lambda ORM service"},{"location":"api/#lambda-orm-service","text":"Service that exposes the functionality of the LambdaOrm library","title":"Lambda ORM service"},{"location":"api/#service","text":"The service exposes the following endpoints:","title":"Service"},{"location":"api/#queries-endpoints","text":"Query","title":"Queries endpoints"},{"location":"api/#general-endpoints","text":"General","title":"General endpoints"},{"location":"api/#schema-endpoints","text":"Schema","title":"Schema endpoints"},{"location":"api/#stage-endpoints","text":"Stages","title":"Stage endpoints"},{"location":"api/#usage","text":"Configuration Queries Kafka source Change log","title":"Usage"},{"location":"api/#ping","text":"curl -X GET \"http://localhost:9291/ping?format=beautiful\" Result: { \"message\": \"pong\", \"time\": \"2023-12-08T19:41:00.543Z\" }","title":"Ping"},{"location":"api/#model","text":"curl -X POST \"http://localhost:9291/model?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ]","title":"Model"},{"location":"api/#parameters","text":"curl -X POST \"http://localhost:9291/parameters?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: [ { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ]","title":"Parameters"},{"location":"api/#constraints","text":"curl -X POST \"http://localhost:9291/constraints?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] }","title":"Constraints"},{"location":"api/#plan","text":"curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\"}' Result: { \"entity\": \"Orders\", \"dialect\": \"PostgreSQL\", \"source\": \"default\", \"sentence\": \"SELECT o.OrderID AS \\\"id\\\", o.CustomerID AS \\\"customerId\\\", o.OrderDate AS \\\"orderDate\\\", o.OrderID AS \\\"__id\\\" FROM Orders o WHERE o.CustomerID = $1 \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"PostgreSQL\", \"source\": \"default\", \"sentence\": \"SELECT o1.OrderID AS \\\"orderId\\\", o1.ProductID AS \\\"productId\\\", o1.UnitPrice AS \\\"unitPrice\\\", o1.Quantity AS \\\"quantity\\\", o1.OrderID AS \\\"LambdaOrmParentId\\\" FROM \\\"Order Details\\\" o1 WHERE o1.OrderID IN ($1) \" } ] }","title":"Plan"},{"location":"api/#import","text":"curl -X POST -H \"Content-Type: application/json\" -d @data.json http://localhost:9291/stages/default/import","title":"Import"},{"location":"api/#execute","text":"curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.customerId==customerId).include(p=>p.details)\", \"data\": \"{\\\"customerId\\\": \\\"CENTC\\\"}\" }' Result: [ { \"id\": 12, \"customerId\": \"CENTC\", \"orderDate\": \"1996-07-18T00:00:00.000Z\", \"details\": [ { \"orderId\": 12, \"productId\": 21, \"unitPrice\": 8, \"quantity\": 10 }, { \"orderId\": 12, \"productId\": 37, \"unitPrice\": 20.8, \"quantity\": 1 } ] } ]","title":"Execute"},{"location":"api/#docker-image","text":"You can access to image at flaviorita/lambdaorm-svc","title":"Docker Image"},{"location":"api/#clients","text":"The following clients allow consuming this service Node Client Soon: Kotlin Client Python Client CSharp Client Go Client","title":"Clients"},{"location":"api/#labs","text":"You can access various labs at github.com/lambda-orm/lambdaorm-labs","title":"Labs"},{"location":"api/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. Versions 2.2.1 (2025-06-01) 2.2.0 (2025-05-30) Features: add beatiful format on endpoints ( 6a99932 ), closes #189 complete readme ( 9f17af2 ), closes #189 complete readme ( 6b7083f ), closes #189 depens: update lambdaorm dependence ( cea5225 ), closes #201 docs: add usage on readme ( 401fbe7 ), closes #201 docs: update readme and wiki ( 85fc4ec ), closes #201 fix: request without response data ( c9bd639 ), closes #201 queue: refactorize consumer ( e49120e ), closes #201 queue: test cqrs with kafka ( b4a3d05 ), closes #201 remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189 remove orb library for apply on lambdaorm ( 15da943 ), closes #201 rename datasource for souce ( 3fd0a8b ), closes #224 schema: add schema endpoint ( 24d7055 ), closes #202 schema: add version and views ( 439b45b ), closes #202 test cqrs ( 279339d ), closes #201 update lambdaorm dependencie ( 285fb49 ), closes #224 update methods and dependences ( c6a8fe9 ), closes #0 update readme ( ba346c8 ), closes #189 wiki: update Sidebar ( 5eac40d ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201 Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189 solve import request data ( 413fc78 ), closes #201 2.1.0 (2024-05-13) Features: update methods and dependences ( c6a8fe9 ), closes #0 1.2.3 (2024-05-04) 1.2.2 (2024-05-03) 1.2.1 (2024-04-18) 1.2.0 (2023-12-28) Features: add beatiful format on endpoints ( 6a99932 ), closes #189 complete readme ( 9f17af2 ), closes #189 complete readme ( 6b7083f ), closes #189 depens: update lambdaorm dependence ( cea5225 ), closes #201 docs: add usage on readme ( 401fbe7 ), closes #201 docs: update readme and wiki ( 85fc4ec ), closes #201 fix: request without response data ( c9bd639 ), closes #201 queue: refactorize consumer ( e49120e ), closes #201 queue: test cqrs with kafka ( b4a3d05 ), closes #201 remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189 remove orb library for apply on lambdaorm ( 15da943 ), closes #201 rename datasource for souce ( 3fd0a8b ), closes #224 schema: add schema endpoint ( 24d7055 ), closes #202 schema: add version and views ( 439b45b ), closes #202 test cqrs ( 279339d ), closes #201 update lambdaorm dependencie ( 285fb49 ), closes #224 update readme ( ba346c8 ), closes #189 wiki: update Sidebar ( 5eac40d ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201 Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189 solve import request data ( 413fc78 ), closes #201 1.1.1 (2023-12-27) 1.1.0 (2023-12-23) Features: update lambdaorm dependencie ( 285fb49 ), closes #224 0.8.60 (2023-12-22) 0.8.59 (2023-12-22) Features: rename datasource for source ( 3fd0a8b ), closes #224 0.8.58 (2023-12-17) Features: docs: add usage on readme ( 401fbe7 ), closes #201 0.8.57 (2023-12-16) Features: test cqrs ( 279339d ), closes #201 0.8.56 (2023-12-16) Features: queue: test cqrs with kafka ( b4a3d05 ), closes #201 0.8.55 (2023-12-16) Features: queue: refactorize consumer ( e49120e ), closes #201 0.8.54 (2023-12-13) Features: fix: request without response data ( c9bd639 ), closes #201 0.8.53 (2023-12-13) Features: wiki: update Sidebar ( 5eac40d ), closes #201 Bug Fixes: solve import request data ( 413fc78 ), closes #201 0.8.52 (2023-12-02) Features: remove orb library for apply on lambdaorm ( 15da943 ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201 0.8.51 (2023-11-29) Features: docs: update readme and wiki ( 85fc4ec ), closes #201 0.8.50 (2023-11-28) 0.8.49 (2023-11-28) Features: depens: update lambdaorm dependence ( cea5225 ), closes #201 0.8.48 (2023-11-28) 0.8.47 (2023-11-26) 0.8.46 (2023-11-26) 0.8.45 (2023-11-21) Features: schema: add schema endpoint ( 24d7055 ), closes #202 0.8.44 (2023-11-21) Features: schema: add version and views ( 439b45b ), closes #202 0.8.43 (2023-11-17) Features: remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189 0.8.42 (2023-11-17) Features: update readme ( ba346c8 ), closes #189 0.8.41 (2023-11-17) Features: complete readme ( 9f17af2 ), closes #189 0.8.40 (2023-11-17) Features: complete readme ( 6b7083f ), closes #189 0.8.39 (2023-11-17) Features: add beatiful format on endpoints ( 6a99932 ), closes #189 0.8.38 (2023-11-17) 0.8.37 (2023-11-16) Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189 0.8.36 (2023-11-15) 0.8.35 (2023-11-15) Features: licence: change licence to MIT and update email ( 8b4298f ), closes #189 0.8.34 (2023-11-09) Features: dependenpies: add dependabot ( 76094ff ), closes #176 0.8.33 (2023-11-09) Bug Fixes: publish: bugfix build on github workflow ( 0f8c8d9 ), closes #176 0.8.32 (2023-11-09) 0.8.31 (2023-11-09) 0.8.30 (2023-11-09) 0.8.29 (2023-11-09) 0.8.28 (2023-11-09) 0.8.27 (2023-11-09) 0.8.26 (2023-11-09) 0.8.25 (2023-11-09) 0.8.24 (2023-11-09) 0.8.23 (2023-11-09) 0.8.22 (2023-11-09) 0.8.21 (2023-11-09) 0.8.10 (2023-11-09) 0.8.9 (2023-11-09) Features: release: update github actions ( 51d4215 ), closes #176 0.8.8 (2023-11-07) 0.8.7 (2023-11-07) Features: release: add dist task on release workflow ( 99e7d06 ), closes #176 0.8.6 (2023-11-07) Features: release: update workflow ( c5b2d99 ), closes #176 0.8.5 (2023-11-07) Features: release: update workflow ( 63954b7 ), closes #176 0.8.4 (2023-11-06) Features: update release workflow ( bae0678 ), closes #176 0.8.3 (2023-11-06) Features: adjust release workflow ( 4add60f ), closes #176 0.8.2 (2023-11-05) 0.8.1 (2023-11-05) 0.7.21 (2023-11-05)","title":"Changelog"},{"location":"api/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file.","title":"Changelog"},{"location":"api/CHANGELOG/#versions","text":"","title":"Versions"},{"location":"api/CHANGELOG/#221-2025-06-01","text":"","title":"2.2.1 (2025-06-01)"},{"location":"api/CHANGELOG/#220-2025-05-30","text":"Features: add beatiful format on endpoints ( 6a99932 ), closes #189 complete readme ( 9f17af2 ), closes #189 complete readme ( 6b7083f ), closes #189 depens: update lambdaorm dependence ( cea5225 ), closes #201 docs: add usage on readme ( 401fbe7 ), closes #201 docs: update readme and wiki ( 85fc4ec ), closes #201 fix: request without response data ( c9bd639 ), closes #201 queue: refactorize consumer ( e49120e ), closes #201 queue: test cqrs with kafka ( b4a3d05 ), closes #201 remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189 remove orb library for apply on lambdaorm ( 15da943 ), closes #201 rename datasource for souce ( 3fd0a8b ), closes #224 schema: add schema endpoint ( 24d7055 ), closes #202 schema: add version and views ( 439b45b ), closes #202 test cqrs ( 279339d ), closes #201 update lambdaorm dependencie ( 285fb49 ), closes #224 update methods and dependences ( c6a8fe9 ), closes #0 update readme ( ba346c8 ), closes #189 wiki: update Sidebar ( 5eac40d ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201 Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189 solve import request data ( 413fc78 ), closes #201","title":"2.2.0 (2025-05-30)"},{"location":"api/CHANGELOG/#210-2024-05-13","text":"Features: update methods and dependences ( c6a8fe9 ), closes #0","title":"2.1.0 (2024-05-13)"},{"location":"api/CHANGELOG/#123-2024-05-04","text":"","title":"1.2.3 (2024-05-04)"},{"location":"api/CHANGELOG/#122-2024-05-03","text":"","title":"1.2.2 (2024-05-03)"},{"location":"api/CHANGELOG/#121-2024-04-18","text":"","title":"1.2.1 (2024-04-18)"},{"location":"api/CHANGELOG/#120-2023-12-28","text":"Features: add beatiful format on endpoints ( 6a99932 ), closes #189 complete readme ( 9f17af2 ), closes #189 complete readme ( 6b7083f ), closes #189 depens: update lambdaorm dependence ( cea5225 ), closes #201 docs: add usage on readme ( 401fbe7 ), closes #201 docs: update readme and wiki ( 85fc4ec ), closes #201 fix: request without response data ( c9bd639 ), closes #201 queue: refactorize consumer ( e49120e ), closes #201 queue: test cqrs with kafka ( b4a3d05 ), closes #201 remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189 remove orb library for apply on lambdaorm ( 15da943 ), closes #201 rename datasource for souce ( 3fd0a8b ), closes #224 schema: add schema endpoint ( 24d7055 ), closes #202 schema: add version and views ( 439b45b ), closes #202 test cqrs ( 279339d ), closes #201 update lambdaorm dependencie ( 285fb49 ), closes #224 update readme ( ba346c8 ), closes #189 wiki: update Sidebar ( 5eac40d ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201 Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189 solve import request data ( 413fc78 ), closes #201","title":"1.2.0 (2023-12-28)"},{"location":"api/CHANGELOG/#111-2023-12-27","text":"","title":"1.1.1 (2023-12-27)"},{"location":"api/CHANGELOG/#110-2023-12-23","text":"Features: update lambdaorm dependencie ( 285fb49 ), closes #224","title":"1.1.0 (2023-12-23)"},{"location":"api/CHANGELOG/#0860-2023-12-22","text":"","title":"0.8.60 (2023-12-22)"},{"location":"api/CHANGELOG/#0859-2023-12-22","text":"Features: rename datasource for source ( 3fd0a8b ), closes #224","title":"0.8.59 (2023-12-22)"},{"location":"api/CHANGELOG/#0858-2023-12-17","text":"Features: docs: add usage on readme ( 401fbe7 ), closes #201","title":"0.8.58 (2023-12-17)"},{"location":"api/CHANGELOG/#0857-2023-12-16","text":"Features: test cqrs ( 279339d ), closes #201","title":"0.8.57 (2023-12-16)"},{"location":"api/CHANGELOG/#0856-2023-12-16","text":"Features: queue: test cqrs with kafka ( b4a3d05 ), closes #201","title":"0.8.56 (2023-12-16)"},{"location":"api/CHANGELOG/#0855-2023-12-16","text":"Features: queue: refactorize consumer ( e49120e ), closes #201","title":"0.8.55 (2023-12-16)"},{"location":"api/CHANGELOG/#0854-2023-12-13","text":"Features: fix: request without response data ( c9bd639 ), closes #201","title":"0.8.54 (2023-12-13)"},{"location":"api/CHANGELOG/#0853-2023-12-13","text":"Features: wiki: update Sidebar ( 5eac40d ), closes #201 Bug Fixes: solve import request data ( 413fc78 ), closes #201","title":"0.8.53 (2023-12-13)"},{"location":"api/CHANGELOG/#0852-2023-12-02","text":"Features: remove orb library for apply on lambdaorm ( 15da943 ), closes #201 wiki: update wiki ( 1cbd2c0 ), closes #201","title":"0.8.52 (2023-12-02)"},{"location":"api/CHANGELOG/#0851-2023-11-29","text":"Features: docs: update readme and wiki ( 85fc4ec ), closes #201","title":"0.8.51 (2023-11-29)"},{"location":"api/CHANGELOG/#0850-2023-11-28","text":"","title":"0.8.50 (2023-11-28)"},{"location":"api/CHANGELOG/#0849-2023-11-28","text":"Features: depens: update lambdaorm dependence ( cea5225 ), closes #201","title":"0.8.49 (2023-11-28)"},{"location":"api/CHANGELOG/#0848-2023-11-28","text":"","title":"0.8.48 (2023-11-28)"},{"location":"api/CHANGELOG/#0847-2023-11-26","text":"","title":"0.8.47 (2023-11-26)"},{"location":"api/CHANGELOG/#0846-2023-11-26","text":"","title":"0.8.46 (2023-11-26)"},{"location":"api/CHANGELOG/#0845-2023-11-21","text":"Features: schema: add schema endpoint ( 24d7055 ), closes #202","title":"0.8.45 (2023-11-21)"},{"location":"api/CHANGELOG/#0844-2023-11-21","text":"Features: schema: add version and views ( 439b45b ), closes #202","title":"0.8.44 (2023-11-21)"},{"location":"api/CHANGELOG/#0843-2023-11-17","text":"Features: remove /api prefix on endpoints, refactorize folders and complete readme ( bc575cc ), closes #189","title":"0.8.43 (2023-11-17)"},{"location":"api/CHANGELOG/#0842-2023-11-17","text":"Features: update readme ( ba346c8 ), closes #189","title":"0.8.42 (2023-11-17)"},{"location":"api/CHANGELOG/#0841-2023-11-17","text":"Features: complete readme ( 9f17af2 ), closes #189","title":"0.8.41 (2023-11-17)"},{"location":"api/CHANGELOG/#0840-2023-11-17","text":"Features: complete readme ( 6b7083f ), closes #189","title":"0.8.40 (2023-11-17)"},{"location":"api/CHANGELOG/#0839-2023-11-17","text":"Features: add beatiful format on endpoints ( 6a99932 ), closes #189","title":"0.8.39 (2023-11-17)"},{"location":"api/CHANGELOG/#0838-2023-11-17","text":"","title":"0.8.38 (2023-11-17)"},{"location":"api/CHANGELOG/#0837-2023-11-16","text":"Bug Fixes: solve bug on body parameters ( 647df0d ), closes #189","title":"0.8.37 (2023-11-16)"},{"location":"api/CHANGELOG/#0836-2023-11-15","text":"","title":"0.8.36 (2023-11-15)"},{"location":"api/CHANGELOG/#0835-2023-11-15","text":"Features: licence: change licence to MIT and update email ( 8b4298f ), closes #189","title":"0.8.35 (2023-11-15)"},{"location":"api/CHANGELOG/#0834-2023-11-09","text":"Features: dependenpies: add dependabot ( 76094ff ), closes #176","title":"0.8.34 (2023-11-09)"},{"location":"api/CHANGELOG/#0833-2023-11-09","text":"Bug Fixes: publish: bugfix build on github workflow ( 0f8c8d9 ), closes #176","title":"0.8.33 (2023-11-09)"},{"location":"api/CHANGELOG/#0832-2023-11-09","text":"","title":"0.8.32 (2023-11-09)"},{"location":"api/CHANGELOG/#0831-2023-11-09","text":"","title":"0.8.31 (2023-11-09)"},{"location":"api/CHANGELOG/#0830-2023-11-09","text":"","title":"0.8.30 (2023-11-09)"},{"location":"api/CHANGELOG/#0829-2023-11-09","text":"","title":"0.8.29 (2023-11-09)"},{"location":"api/CHANGELOG/#0828-2023-11-09","text":"","title":"0.8.28 (2023-11-09)"},{"location":"api/CHANGELOG/#0827-2023-11-09","text":"","title":"0.8.27 (2023-11-09)"},{"location":"api/CHANGELOG/#0826-2023-11-09","text":"","title":"0.8.26 (2023-11-09)"},{"location":"api/CHANGELOG/#0825-2023-11-09","text":"","title":"0.8.25 (2023-11-09)"},{"location":"api/CHANGELOG/#0824-2023-11-09","text":"","title":"0.8.24 (2023-11-09)"},{"location":"api/CHANGELOG/#0823-2023-11-09","text":"","title":"0.8.23 (2023-11-09)"},{"location":"api/CHANGELOG/#0822-2023-11-09","text":"","title":"0.8.22 (2023-11-09)"},{"location":"api/CHANGELOG/#0821-2023-11-09","text":"","title":"0.8.21 (2023-11-09)"},{"location":"api/CHANGELOG/#0810-2023-11-09","text":"","title":"0.8.10 (2023-11-09)"},{"location":"api/CHANGELOG/#089-2023-11-09","text":"Features: release: update github actions ( 51d4215 ), closes #176","title":"0.8.9 (2023-11-09)"},{"location":"api/CHANGELOG/#088-2023-11-07","text":"","title":"0.8.8 (2023-11-07)"},{"location":"api/CHANGELOG/#087-2023-11-07","text":"Features: release: add dist task on release workflow ( 99e7d06 ), closes #176","title":"0.8.7 (2023-11-07)"},{"location":"api/CHANGELOG/#086-2023-11-07","text":"Features: release: update workflow ( c5b2d99 ), closes #176","title":"0.8.6 (2023-11-07)"},{"location":"api/CHANGELOG/#085-2023-11-07","text":"Features: release: update workflow ( 63954b7 ), closes #176","title":"0.8.5 (2023-11-07)"},{"location":"api/CHANGELOG/#084-2023-11-06","text":"Features: update release workflow ( bae0678 ), closes #176","title":"0.8.4 (2023-11-06)"},{"location":"api/CHANGELOG/#083-2023-11-06","text":"Features: adjust release workflow ( 4add60f ), closes #176","title":"0.8.3 (2023-11-06)"},{"location":"api/CHANGELOG/#082-2023-11-05","text":"","title":"0.8.2 (2023-11-05)"},{"location":"api/CHANGELOG/#081-2023-11-05","text":"","title":"0.8.1 (2023-11-05)"},{"location":"api/CHANGELOG/#0721-2023-11-05","text":"","title":"0.7.21 (2023-11-05)"},{"location":"api/Endpoints/General/","text":"General Endpoints General endpoints are used to get information about the service. Ping Returns a pong message. Request: curl -X GET \"http://localhost:9291/ping?format=beautiful\" Response { \"message\": \"pong\", \"time\": \"2023-11-28T23:13:09.741Z\" } Health Returns the health of the service. Request: curl -X GET \"http://localhost:9291/health?format=beautiful\" Response { \"uptime\": 3679.23219635, \"message\": \"OK\", \"time\": \"2023-11-28T23:13:43.827Z\" } Version Returns the version of the service. Request: curl -X GET \"http://localhost:9291/version?format=beautiful\" Response { \"version\": \"0.8.49\" } Metrics Returns the metrics of the service. Request: curl -X GET \"http://localhost:9291/metrics?format=beautiful\" Response # HELP node_process_cpu_user_seconds_total Total user CPU time spent in seconds. # TYPE node_process_cpu_user_seconds_total counter node_process_cpu_user_seconds_total 0.001831 # HELP node_process_cpu_system_seconds_total Total system CPU time spent in seconds. # TYPE node_process_cpu_system_seconds_total counter node_process_cpu_system_seconds_total 0 # HELP node_process_cpu_seconds_total Total user and system CPU time spent in seconds. # TYPE node_process_cpu_seconds_total counter node_process_cpu_seconds_total 0.001831 # HELP node_process_start_time_seconds Start time of the process since unix epoch in seconds. # TYPE node_process_start_time_seconds gauge node_process_start_time_seconds 1701209545 # HELP node_process_resident_memory_bytes Resident memory size in bytes. # TYPE node_process_resident_memory_bytes gauge node_process_resident_memory_bytes 74321920 # HELP node_process_virtual_memory_bytes Virtual memory size in bytes. # TYPE node_process_virtual_memory_bytes gauge node_process_virtual_memory_bytes 1142546432 # HELP node_process_heap_bytes Process heap size in bytes. # TYPE node_process_heap_bytes gauge node_process_heap_bytes 119537664 # HELP node_process_open_fds Number of open file descriptors. # TYPE node_process_open_fds gauge node_process_open_fds 63 # HELP node_process_max_fds Maximum number of open file descriptors. # TYPE node_process_max_fds gauge node_process_max_fds 1048576 # HELP node_nodejs_eventloop_lag_seconds Lag of event loop in seconds. # TYPE node_nodejs_eventloop_lag_seconds gauge node_nodejs_eventloop_lag_seconds 0 # HELP node_nodejs_eventloop_lag_min_seconds The minimum recorded event loop delay. # TYPE node_nodejs_eventloop_lag_min_seconds gauge node_nodejs_eventloop_lag_min_seconds 9223372036.854776 # HELP node_nodejs_eventloop_lag_max_seconds The maximum recorded event loop delay. # TYPE node_nodejs_eventloop_lag_max_seconds gauge node_nodejs_eventloop_lag_max_seconds 0 # HELP node_nodejs_eventloop_lag_mean_seconds The mean of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_mean_seconds gauge node_nodejs_eventloop_lag_mean_seconds Nan # HELP node_nodejs_eventloop_lag_stddev_seconds The standard deviation of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_stddev_seconds gauge node_nodejs_eventloop_lag_stddev_seconds Nan # HELP node_nodejs_eventloop_lag_p50_seconds The 50th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p50_seconds gauge node_nodejs_eventloop_lag_p50_seconds 5.11e-7 # HELP node_nodejs_eventloop_lag_p90_seconds The 90th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p90_seconds gauge node_nodejs_eventloop_lag_p90_seconds 5.11e-7 # HELP node_nodejs_eventloop_lag_p99_seconds The 99th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p99_seconds gauge node_nodejs_eventloop_lag_p99_seconds 5.11e-7 # HELP node_nodejs_active_resources Number of active resources that are currently keeping the event loop alive, grouped by async resource type. # TYPE node_nodejs_active_resources gauge node_nodejs_active_resources{type=\"PipeWrap\"} 3 node_nodejs_active_resources{type=\"TCPServerWrap\"} 1 node_nodejs_active_resources{type=\"TCPSocketWrap\"} 2 node_nodejs_active_resources{type=\"Immediate\"} 1 # HELP node_nodejs_active_resources_total Total number of active resources. # TYPE node_nodejs_active_resources_total gauge node_nodejs_active_resources_total 7 # HELP node_nodejs_active_handles Number of active libuv handles grouped by handle type. Every handle type is C++ class name. # TYPE node_nodejs_active_handles gauge node_nodejs_active_handles{type=\"Socket\"} 5 node_nodejs_active_handles{type=\"Server\"} 1 # HELP node_nodejs_active_handles_total Total number of active handles. # TYPE node_nodejs_active_handles_total gauge node_nodejs_active_handles_total 6 # HELP node_nodejs_active_requests Number of active libuv requests grouped by request type. Every request type is C++ class name. # TYPE node_nodejs_active_requests gauge # HELP node_nodejs_active_requests_total Total number of active requests. # TYPE node_nodejs_active_requests_total gauge node_nodejs_active_requests_total 0 # HELP node_nodejs_heap_size_total_bytes Process heap size from Node.js in bytes. # TYPE node_nodejs_heap_size_total_bytes gauge node_nodejs_heap_size_total_bytes 23187456 # HELP node_nodejs_heap_size_used_bytes Process heap size used from Node.js in bytes. # TYPE node_nodejs_heap_size_used_bytes gauge node_nodejs_heap_size_used_bytes 21475792 # HELP node_nodejs_external_memory_bytes Node.js external memory size in bytes. # TYPE node_nodejs_external_memory_bytes gauge node_nodejs_external_memory_bytes 2531363 # HELP node_nodejs_heap_space_size_total_bytes Process heap space size total from Node.js in bytes. # TYPE node_nodejs_heap_space_size_total_bytes gauge node_nodejs_heap_space_size_total_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"new\"} 1048576 node_nodejs_heap_space_size_total_bytes{space=\"old\"} 20062208 node_nodejs_heap_space_size_total_bytes{space=\"code\"} 1310720 node_nodejs_heap_space_size_total_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"new_large_object\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"large_object\"} 765952 node_nodejs_heap_space_size_total_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_heap_space_size_used_bytes Process heap space size used from Node.js in bytes. # TYPE node_nodejs_heap_space_size_used_bytes gauge node_nodejs_heap_space_size_used_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"new\"} 486384 node_nodejs_heap_space_size_used_bytes{space=\"old\"} 19039600 node_nodejs_heap_space_size_used_bytes{space=\"code\"} 1215760 node_nodejs_heap_space_size_used_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"new_large_object\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"large_object\"} 750816 node_nodejs_heap_space_size_used_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_heap_space_size_available_bytes Process heap space size available from Node.js in bytes. # TYPE node_nodejs_heap_space_size_available_bytes gauge node_nodejs_heap_space_size_available_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"new\"} 544496 node_nodejs_heap_space_size_available_bytes{space=\"old\"} 647640 node_nodejs_heap_space_size_available_bytes{space=\"code\"} 12784 node_nodejs_heap_space_size_available_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"new_large_object\"} 1048576 node_nodejs_heap_space_size_available_bytes{space=\"large_object\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_version_info Node.js version info. # TYPE node_nodejs_version_info gauge node_nodejs_version_info{version=\"v20.9.0\",major=\"20\",minor=\"9\",patch=\"0\"} 1 # HELP node_nodejs_gc_duration_seconds Garbage collection duration by kind, one of major, minor, incremental or weakcb. # TYPE node_nodejs_gc_duration_seconds histogram","title":"General Endpoints"},{"location":"api/Endpoints/General/#general-endpoints","text":"General endpoints are used to get information about the service.","title":"General Endpoints"},{"location":"api/Endpoints/General/#ping","text":"Returns a pong message. Request: curl -X GET \"http://localhost:9291/ping?format=beautiful\" Response { \"message\": \"pong\", \"time\": \"2023-11-28T23:13:09.741Z\" }","title":"Ping"},{"location":"api/Endpoints/General/#health","text":"Returns the health of the service. Request: curl -X GET \"http://localhost:9291/health?format=beautiful\" Response { \"uptime\": 3679.23219635, \"message\": \"OK\", \"time\": \"2023-11-28T23:13:43.827Z\" }","title":"Health"},{"location":"api/Endpoints/General/#version","text":"Returns the version of the service. Request: curl -X GET \"http://localhost:9291/version?format=beautiful\" Response { \"version\": \"0.8.49\" }","title":"Version"},{"location":"api/Endpoints/General/#metrics","text":"Returns the metrics of the service. Request: curl -X GET \"http://localhost:9291/metrics?format=beautiful\" Response # HELP node_process_cpu_user_seconds_total Total user CPU time spent in seconds. # TYPE node_process_cpu_user_seconds_total counter node_process_cpu_user_seconds_total 0.001831 # HELP node_process_cpu_system_seconds_total Total system CPU time spent in seconds. # TYPE node_process_cpu_system_seconds_total counter node_process_cpu_system_seconds_total 0 # HELP node_process_cpu_seconds_total Total user and system CPU time spent in seconds. # TYPE node_process_cpu_seconds_total counter node_process_cpu_seconds_total 0.001831 # HELP node_process_start_time_seconds Start time of the process since unix epoch in seconds. # TYPE node_process_start_time_seconds gauge node_process_start_time_seconds 1701209545 # HELP node_process_resident_memory_bytes Resident memory size in bytes. # TYPE node_process_resident_memory_bytes gauge node_process_resident_memory_bytes 74321920 # HELP node_process_virtual_memory_bytes Virtual memory size in bytes. # TYPE node_process_virtual_memory_bytes gauge node_process_virtual_memory_bytes 1142546432 # HELP node_process_heap_bytes Process heap size in bytes. # TYPE node_process_heap_bytes gauge node_process_heap_bytes 119537664 # HELP node_process_open_fds Number of open file descriptors. # TYPE node_process_open_fds gauge node_process_open_fds 63 # HELP node_process_max_fds Maximum number of open file descriptors. # TYPE node_process_max_fds gauge node_process_max_fds 1048576 # HELP node_nodejs_eventloop_lag_seconds Lag of event loop in seconds. # TYPE node_nodejs_eventloop_lag_seconds gauge node_nodejs_eventloop_lag_seconds 0 # HELP node_nodejs_eventloop_lag_min_seconds The minimum recorded event loop delay. # TYPE node_nodejs_eventloop_lag_min_seconds gauge node_nodejs_eventloop_lag_min_seconds 9223372036.854776 # HELP node_nodejs_eventloop_lag_max_seconds The maximum recorded event loop delay. # TYPE node_nodejs_eventloop_lag_max_seconds gauge node_nodejs_eventloop_lag_max_seconds 0 # HELP node_nodejs_eventloop_lag_mean_seconds The mean of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_mean_seconds gauge node_nodejs_eventloop_lag_mean_seconds Nan # HELP node_nodejs_eventloop_lag_stddev_seconds The standard deviation of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_stddev_seconds gauge node_nodejs_eventloop_lag_stddev_seconds Nan # HELP node_nodejs_eventloop_lag_p50_seconds The 50th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p50_seconds gauge node_nodejs_eventloop_lag_p50_seconds 5.11e-7 # HELP node_nodejs_eventloop_lag_p90_seconds The 90th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p90_seconds gauge node_nodejs_eventloop_lag_p90_seconds 5.11e-7 # HELP node_nodejs_eventloop_lag_p99_seconds The 99th percentile of the recorded event loop delays. # TYPE node_nodejs_eventloop_lag_p99_seconds gauge node_nodejs_eventloop_lag_p99_seconds 5.11e-7 # HELP node_nodejs_active_resources Number of active resources that are currently keeping the event loop alive, grouped by async resource type. # TYPE node_nodejs_active_resources gauge node_nodejs_active_resources{type=\"PipeWrap\"} 3 node_nodejs_active_resources{type=\"TCPServerWrap\"} 1 node_nodejs_active_resources{type=\"TCPSocketWrap\"} 2 node_nodejs_active_resources{type=\"Immediate\"} 1 # HELP node_nodejs_active_resources_total Total number of active resources. # TYPE node_nodejs_active_resources_total gauge node_nodejs_active_resources_total 7 # HELP node_nodejs_active_handles Number of active libuv handles grouped by handle type. Every handle type is C++ class name. # TYPE node_nodejs_active_handles gauge node_nodejs_active_handles{type=\"Socket\"} 5 node_nodejs_active_handles{type=\"Server\"} 1 # HELP node_nodejs_active_handles_total Total number of active handles. # TYPE node_nodejs_active_handles_total gauge node_nodejs_active_handles_total 6 # HELP node_nodejs_active_requests Number of active libuv requests grouped by request type. Every request type is C++ class name. # TYPE node_nodejs_active_requests gauge # HELP node_nodejs_active_requests_total Total number of active requests. # TYPE node_nodejs_active_requests_total gauge node_nodejs_active_requests_total 0 # HELP node_nodejs_heap_size_total_bytes Process heap size from Node.js in bytes. # TYPE node_nodejs_heap_size_total_bytes gauge node_nodejs_heap_size_total_bytes 23187456 # HELP node_nodejs_heap_size_used_bytes Process heap size used from Node.js in bytes. # TYPE node_nodejs_heap_size_used_bytes gauge node_nodejs_heap_size_used_bytes 21475792 # HELP node_nodejs_external_memory_bytes Node.js external memory size in bytes. # TYPE node_nodejs_external_memory_bytes gauge node_nodejs_external_memory_bytes 2531363 # HELP node_nodejs_heap_space_size_total_bytes Process heap space size total from Node.js in bytes. # TYPE node_nodejs_heap_space_size_total_bytes gauge node_nodejs_heap_space_size_total_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"new\"} 1048576 node_nodejs_heap_space_size_total_bytes{space=\"old\"} 20062208 node_nodejs_heap_space_size_total_bytes{space=\"code\"} 1310720 node_nodejs_heap_space_size_total_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"new_large_object\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"large_object\"} 765952 node_nodejs_heap_space_size_total_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_total_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_heap_space_size_used_bytes Process heap space size used from Node.js in bytes. # TYPE node_nodejs_heap_space_size_used_bytes gauge node_nodejs_heap_space_size_used_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"new\"} 486384 node_nodejs_heap_space_size_used_bytes{space=\"old\"} 19039600 node_nodejs_heap_space_size_used_bytes{space=\"code\"} 1215760 node_nodejs_heap_space_size_used_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"new_large_object\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"large_object\"} 750816 node_nodejs_heap_space_size_used_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_used_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_heap_space_size_available_bytes Process heap space size available from Node.js in bytes. # TYPE node_nodejs_heap_space_size_available_bytes gauge node_nodejs_heap_space_size_available_bytes{space=\"read_only\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"new\"} 544496 node_nodejs_heap_space_size_available_bytes{space=\"old\"} 647640 node_nodejs_heap_space_size_available_bytes{space=\"code\"} 12784 node_nodejs_heap_space_size_available_bytes{space=\"shared\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"new_large_object\"} 1048576 node_nodejs_heap_space_size_available_bytes{space=\"large_object\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"code_large_object\"} 0 node_nodejs_heap_space_size_available_bytes{space=\"shared_large_object\"} 0 # HELP node_nodejs_version_info Node.js version info. # TYPE node_nodejs_version_info gauge node_nodejs_version_info{version=\"v20.9.0\",major=\"20\",minor=\"9\",patch=\"0\"} 1 # HELP node_nodejs_gc_duration_seconds Garbage collection duration by kind, one of major, minor, incremental or weakcb. # TYPE node_nodejs_gc_duration_seconds histogram","title":"Metrics"},{"location":"api/Endpoints/Query/","text":"Queries Endpoints Metadata Return the metadata of the query. Request: curl -X POST \"http://localhost:9291/metadata?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 35 }, \"name\": \"select\", \"children\": [ { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 38 }, \"name\": \"select\", \"children\": [], \"type\": \"any\", \"entity\": \"Orders.details\", \"columns\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"[integer]\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o1\" } ], \"type\": \"any\", \"entity\": \"Orders\", \"columns\": [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"__id\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"id\", \"type\": \"integer\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o\" } Model Return the model of the query. Request: curl -X POST \"http://localhost:9291/model?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ] Parameters Return the parameters of the query. Request: curl -X POST \"http://localhost:9291/parameters?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ] Constraints Return the constraints of the query. Request: curl -X POST \"http://localhost:9291/constraints?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] } Plan Return the plan of the query, with the sentences to be executed. Request: curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"entity\": \"Orders\", \"dialect\": \"MySQL\", \"source\": \"default\", \"sentence\": \"SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS employeeId, o.OrderDate AS orderDate, o.RequiredDate AS requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId, o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address, o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS postalCode, o.ShipCountry AS country, o.OrderID AS `__id` FROM Orders o WHERE o.OrderID = ? \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"MySQL\", \"source\": \"default\", \"sentence\": \"SELECT o1.OrderID AS orderId, o1.ProductID AS productId, o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order Details` o1 WHERE o1.OrderID IN (?) \" } ] } Execute Execute the query. Request: curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\", \"data\": \"{\\\"id\\\": 10248}\" }' Response: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0 } ] } ]","title":"Queries Endpoints"},{"location":"api/Endpoints/Query/#queries-endpoints","text":"","title":"Queries Endpoints"},{"location":"api/Endpoints/Query/#metadata","text":"Return the metadata of the query. Request: curl -X POST \"http://localhost:9291/metadata?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 35 }, \"name\": \"select\", \"children\": [ { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 38 }, \"name\": \"select\", \"children\": [], \"type\": \"any\", \"entity\": \"Orders.details\", \"columns\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"[integer]\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o1\" } ], \"type\": \"any\", \"entity\": \"Orders\", \"columns\": [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"__id\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"id\", \"type\": \"integer\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o\" }","title":"Metadata"},{"location":"api/Endpoints/Query/#model","text":"Return the model of the query. Request: curl -X POST \"http://localhost:9291/model?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ]","title":"Model"},{"location":"api/Endpoints/Query/#parameters","text":"Return the parameters of the query. Request: curl -X POST \"http://localhost:9291/parameters?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ]","title":"Parameters"},{"location":"api/Endpoints/Query/#constraints","text":"Return the constraints of the query. Request: curl -X POST \"http://localhost:9291/constraints?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] }","title":"Constraints"},{"location":"api/Endpoints/Query/#plan","text":"Return the plan of the query, with the sentences to be executed. Request: curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\"}' Response: { \"entity\": \"Orders\", \"dialect\": \"MySQL\", \"source\": \"default\", \"sentence\": \"SELECT o.OrderID AS id, o.CustomerID AS customerId, o.EmployeeID AS employeeId, o.OrderDate AS orderDate, o.RequiredDate AS requiredDate, o.ShippedDate AS shippedDate, o.ShipVia AS shipViaId, o.Freight AS freight, o.ShipName AS name, o.ShipAddress AS address, o.ShipCity AS city, o.ShipRegion AS region, o.ShipPostalCode AS postalCode, o.ShipCountry AS country, o.OrderID AS `__id` FROM Orders o WHERE o.OrderID = ? \", \"children\": [ { \"entity\": \"Orders.details\", \"dialect\": \"MySQL\", \"source\": \"default\", \"sentence\": \"SELECT o1.OrderID AS orderId, o1.ProductID AS productId, o1.UnitPrice AS unitPrice, o1.Quantity AS quantity, o1.Discount AS discount, o1.OrderID AS LambdaOrmParentId FROM `Order Details` o1 WHERE o1.OrderID IN (?) \" } ] }","title":"Plan"},{"location":"api/Endpoints/Query/#execute","text":"Execute the query. Request: curl -X POST \"http://localhost:9291/execute?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Orders.filter(p=>p.id==id).include(p=>p.details)\", \"data\": \"{\\\"id\\\": 10248}\" }' Response: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0 } ] } ]","title":"Execute"},{"location":"api/Endpoints/Schema/","text":"Schema endpoints Version Returns the version of the schema. Request: curl -X GET \"http://localhost:9291/schema/version?format=beautiful\" Response { \"version\": \"1.0.0\" } Schema Returns the schema complete. Request: curl -X GET \"http://localhost:9291/schema?format=beautiful\" Response { \"version\": \"1.0.0\", \"domain\": { \"version\": \"1.0.0\", \"entities\": [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ], \"enums\": [] } } Domain Returns the domain of schema. Request: curl -X GET \"http://localhost:9291/domain?format=beautiful\" Response { \"version\": \"1.0.0\", \"entities\": [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ], \"enums\": [] } Entities Returns the entities of domain. Request: curl -X GET \"http://localhost:9291/entities?format=beautiful\" Response [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ] Entity Returns one entity. Request: curl -X GET \"http://localhost:9291/entities/Categories?format=beautiful\" Response { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } Enums Return the enums of domain. Request: curl -X GET \"http://localhost:9291/enums?format=beautiful\" Response [] Enum Return one enum. Request: curl -X GET \"http://localhost:9291/enums/Color?format=beautiful\" Sources Return the sources. Request: curl -X GET \"http://localhost:9291/sources?format=beautiful\" Response [ { \"name\": \"default\", \"dialect\": \"MySQL\" } ] Source Return one source. Request: curl -X GET \"http://localhost:9291/sources/default?format=beautiful\" Response [ { \"name\": \"default\", \"dialect\": \"MySQL\" } ] Mappings Return the mappings of schema. Request: curl -X GET \"http://localhost:9291/mappings?format=beautiful\" Response [ { \"name\": \"default\", \"entities\": [ { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Customers\", \"mapping\": \"Customers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CustomerID\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"ContactTitle\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Employees\", \"mapping\": \"Employees\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"EmployeeID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"mapping\": \"LastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"mapping\": \"FirstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"mapping\": \"Title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"mapping\": \"TitleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"mapping\": \"BirthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"mapping\": \"HireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"mapping\": \"HomePhone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"mapping\": \"ReportsTo\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Shippers\", \"mapping\": \"Shippers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ShipperID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Suppliers\", \"mapping\": \"Suppliers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"SupplierID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"mapping\": \"HomePage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Products\", \"mapping\": \"Products\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ProductID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"ProductName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"mapping\": \"SupplierID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"QuantityPerUnit\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"mapping\": \"UnitsInStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"mapping\": \"UnitsOnOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"mapping\": \"ReorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"mapping\": \"Discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders\", \"mapping\": \"Orders\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"OrderID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"mapping\": \"CustomerID\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"mapping\": \"EmployeeID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"mapping\": \"OrderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"mapping\": \"RequiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"mapping\": \"ShippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"mapping\": \"ShipVia\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"mapping\": \"Freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"mapping\": \"ShipName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"ShipAddress\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"ShipCity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"ShipRegion\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"ShipPostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"ShipCountry\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders.details\", \"mapping\": \"Order Details\", \"properties\": [ { \"name\": \"orderId\", \"mapping\": \"OrderID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"mapping\": \"ProductID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"Quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"mapping\": \"Discount\", \"type\": \"decimal\", \"required\": false } ], \"primaryKey\": [ \"orderId\", \"productId\" ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false } ] } ] Mapping Return one mapping. Request: curl -X GET \"http://localhost:9291/mappings/default?format=beautiful\" Response { \"name\": \"default\", \"entities\": [ { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Customers\", \"mapping\": \"Customers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CustomerID\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"ContactTitle\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Employees\", \"mapping\": \"Employees\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"EmployeeID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"mapping\": \"LastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"mapping\": \"FirstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"mapping\": \"Title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"mapping\": \"TitleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"mapping\": \"BirthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"mapping\": \"HireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"mapping\": \"HomePhone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"mapping\": \"ReportsTo\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Shippers\", \"mapping\": \"Shippers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ShipperID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Suppliers\", \"mapping\": \"Suppliers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"SupplierID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"mapping\": \"HomePage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Products\", \"mapping\": \"Products\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ProductID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"ProductName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"mapping\": \"SupplierID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"QuantityPerUnit\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"mapping\": \"UnitsInStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"mapping\": \"UnitsOnOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"mapping\": \"ReorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"mapping\": \"Discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders\", \"mapping\": \"Orders\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"OrderID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"mapping\": \"CustomerID\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"mapping\": \"EmployeeID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"mapping\": \"OrderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"mapping\": \"RequiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"mapping\": \"ShippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"mapping\": \"ShipVia\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"mapping\": \"Freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"mapping\": \"ShipName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"ShipAddress\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"ShipCity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"ShipRegion\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"ShipPostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"ShipCountry\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders.details\", \"mapping\": \"Order Details\", \"properties\": [ { \"name\": \"orderId\", \"mapping\": \"OrderID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"mapping\": \"ProductID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"Quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"mapping\": \"Discount\", \"type\": \"decimal\", \"required\": false } ], \"primaryKey\": [ \"orderId\", \"productId\" ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false } ] } Entity Mapping Return one entity mapping. Request: curl -X GET \"http://localhost:9291/mappings/default/Categories?format=beautiful\" Response { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false } Views Return all views. Request: curl -X GET \"http://localhost:9291/views?format=beautiful\" Response [ \"default\" ] Stages Return all stages. Request: curl -X GET \"http://localhost:9291/stages?format=beautiful\" Response [ { \"name\": \"default\", \"sources\": [ { \"name\": \"default\" } ] } ] Stage Return one stage. Request: curl -X GET \"http://localhost:9291/stages/default?format=beautiful\" Response { \"name\": \"default\", \"sources\": [ { \"name\": \"default\" } ] }","title":"Schema endpoints"},{"location":"api/Endpoints/Schema/#schema-endpoints","text":"","title":"Schema endpoints"},{"location":"api/Endpoints/Schema/#version","text":"Returns the version of the schema. Request: curl -X GET \"http://localhost:9291/schema/version?format=beautiful\" Response { \"version\": \"1.0.0\" }","title":"Version"},{"location":"api/Endpoints/Schema/#schema","text":"Returns the schema complete. Request: curl -X GET \"http://localhost:9291/schema?format=beautiful\" Response { \"version\": \"1.0.0\", \"domain\": { \"version\": \"1.0.0\", \"entities\": [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ], \"enums\": [] } }","title":"Schema"},{"location":"api/Endpoints/Schema/#domain","text":"Returns the domain of schema. Request: curl -X GET \"http://localhost:9291/domain?format=beautiful\" Response { \"version\": \"1.0.0\", \"entities\": [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ], \"enums\": [] }","title":"Domain"},{"location":"api/Endpoints/Schema/#entities","text":"Returns the entities of domain. Request: curl -X GET \"http://localhost:9291/entities?format=beautiful\" Response [ { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Customers\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"properties\": [ { \"name\": \"id\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Employees\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Shippers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Suppliers\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Products\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false }, { \"name\": \"Orders\", \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }, { \"name\": \"Orders.details\", \"primaryKey\": [ \"orderId\", \"productId\" ], \"properties\": [ { \"name\": \"orderId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"type\": \"decimal\", \"required\": false } ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false } ]","title":"Entities"},{"location":"api/Endpoints/Schema/#entity","text":"Returns one entity. Request: curl -X GET \"http://localhost:9291/entities/Categories?format=beautiful\" Response { \"name\": \"Categories\", \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"id\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false }","title":"Entity"},{"location":"api/Endpoints/Schema/#enums","text":"Return the enums of domain. Request: curl -X GET \"http://localhost:9291/enums?format=beautiful\" Response []","title":"Enums"},{"location":"api/Endpoints/Schema/#enum","text":"Return one enum. Request: curl -X GET \"http://localhost:9291/enums/Color?format=beautiful\"","title":"Enum"},{"location":"api/Endpoints/Schema/#sources","text":"Return the sources. Request: curl -X GET \"http://localhost:9291/sources?format=beautiful\" Response [ { \"name\": \"default\", \"dialect\": \"MySQL\" } ]","title":"Sources"},{"location":"api/Endpoints/Schema/#source","text":"Return one source. Request: curl -X GET \"http://localhost:9291/sources/default?format=beautiful\" Response [ { \"name\": \"default\", \"dialect\": \"MySQL\" } ]","title":"Source"},{"location":"api/Endpoints/Schema/#mappings","text":"Return the mappings of schema. Request: curl -X GET \"http://localhost:9291/mappings?format=beautiful\" Response [ { \"name\": \"default\", \"entities\": [ { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Customers\", \"mapping\": \"Customers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CustomerID\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"ContactTitle\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Employees\", \"mapping\": \"Employees\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"EmployeeID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"mapping\": \"LastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"mapping\": \"FirstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"mapping\": \"Title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"mapping\": \"TitleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"mapping\": \"BirthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"mapping\": \"HireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"mapping\": \"HomePhone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"mapping\": \"ReportsTo\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Shippers\", \"mapping\": \"Shippers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ShipperID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Suppliers\", \"mapping\": \"Suppliers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"SupplierID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"mapping\": \"HomePage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Products\", \"mapping\": \"Products\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ProductID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"ProductName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"mapping\": \"SupplierID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"QuantityPerUnit\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"mapping\": \"UnitsInStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"mapping\": \"UnitsOnOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"mapping\": \"ReorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"mapping\": \"Discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders\", \"mapping\": \"Orders\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"OrderID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"mapping\": \"CustomerID\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"mapping\": \"EmployeeID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"mapping\": \"OrderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"mapping\": \"RequiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"mapping\": \"ShippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"mapping\": \"ShipVia\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"mapping\": \"Freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"mapping\": \"ShipName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"ShipAddress\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"ShipCity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"ShipRegion\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"ShipPostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"ShipCountry\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders.details\", \"mapping\": \"Order Details\", \"properties\": [ { \"name\": \"orderId\", \"mapping\": \"OrderID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"mapping\": \"ProductID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"Quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"mapping\": \"Discount\", \"type\": \"decimal\", \"required\": false } ], \"primaryKey\": [ \"orderId\", \"productId\" ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false } ] } ]","title":"Mappings"},{"location":"api/Endpoints/Schema/#mapping","text":"Return one mapping. Request: curl -X GET \"http://localhost:9291/mappings/default?format=beautiful\" Response { \"name\": \"default\", \"entities\": [ { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Customers\", \"mapping\": \"Customers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CustomerID\", \"length\": 5, \"required\": true, \"type\": \"string\" }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"ContactTitle\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"name\", \"fields\": [ \"name\" ] } ], \"uniqueKey\": [], \"required\": [], \"relations\": [ { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"customerId\", \"target\": \"customer\" } ], \"dependents\": [ { \"entity\": \"Orders\", \"relation\": { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Employees\", \"mapping\": \"Employees\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"EmployeeID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"lastName\", \"mapping\": \"LastName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"firstName\", \"mapping\": \"FirstName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"title\", \"mapping\": \"Title\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"titleOfCourtesy\", \"mapping\": \"TitleOfCourtesy\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"birthDate\", \"mapping\": \"BirthDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"hireDate\", \"mapping\": \"HireDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"phone\", \"mapping\": \"HomePhone\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"reportsToId\", \"mapping\": \"ReportsTo\", \"type\": \"integer\", \"required\": false }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"lastName\", \"firstName\" ], \"relations\": [ { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orders\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders\", \"weak\": true, \"to\": \"employeeId\", \"target\": \"employee\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Employees\", \"relation\": { \"name\": \"reportsTo\", \"from\": \"reportsToId\", \"entity\": \"Employees\", \"to\": \"id\", \"type\": \"oneToMany\", \"weak\": false } }, { \"entity\": \"Orders\", \"relation\": { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Shippers\", \"mapping\": \"Shippers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ShipperID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [], \"dependents\": [], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Suppliers\", \"mapping\": \"Suppliers\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"SupplierID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CompanyName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"contact\", \"mapping\": \"ContactName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"phone\", \"mapping\": \"Phone\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"homepage\", \"mapping\": \"HomePage\", \"length\": 200, \"required\": false, \"type\": \"string\" }, { \"name\": \"address\", \"mapping\": \"Address\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"City\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"Region\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"PostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"Country\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"supplierId\", \"target\": \"supplier\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Products\", \"mapping\": \"Products\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"ProductID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"ProductName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"supplierId\", \"mapping\": \"SupplierID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"categoryId\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"QuantityPerUnit\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"price\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"inStock\", \"mapping\": \"UnitsInStock\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"onOrder\", \"mapping\": \"UnitsOnOrder\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"reorderLevel\", \"mapping\": \"ReorderLevel\", \"type\": \"decimal\", \"default\": 0, \"required\": false }, { \"name\": \"discontinued\", \"mapping\": \"Discontinued\", \"type\": \"boolean\", \"default\": false, \"required\": false } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\", \"supplierId\" ], \"relations\": [ { \"name\": \"supplier\", \"from\": \"supplierId\", \"entity\": \"Suppliers\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"orderDetails\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"productId\", \"target\": \"product\" } ], \"required\": [], \"indexes\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": true, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders\", \"mapping\": \"Orders\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"OrderID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"customerId\", \"mapping\": \"CustomerID\", \"required\": true, \"length\": 5, \"type\": \"string\" }, { \"name\": \"employeeId\", \"mapping\": \"EmployeeID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"orderDate\", \"mapping\": \"OrderDate\", \"type\": \"dateTime\", \"required\": false }, { \"name\": \"requiredDate\", \"mapping\": \"RequiredDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shippedDate\", \"mapping\": \"ShippedDate\", \"type\": \"date\", \"required\": false }, { \"name\": \"shipViaId\", \"mapping\": \"ShipVia\", \"type\": \"integer\", \"required\": false }, { \"name\": \"freight\", \"mapping\": \"Freight\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"name\", \"mapping\": \"ShipName\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"address\", \"mapping\": \"ShipAddress\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"city\", \"mapping\": \"ShipCity\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"region\", \"mapping\": \"ShipRegion\", \"required\": false, \"type\": \"string\", \"length\": 80 }, { \"name\": \"postalCode\", \"mapping\": \"ShipPostalCode\", \"length\": 20, \"required\": false, \"type\": \"string\" }, { \"name\": \"country\", \"mapping\": \"ShipCountry\", \"required\": false, \"type\": \"string\", \"length\": 80 } ], \"primaryKey\": [ \"id\" ], \"indexes\": [ { \"name\": \"orderDate\", \"fields\": [ \"orderDate\" ] }, { \"name\": \"shippedDate\", \"fields\": [ \"shippedDate\" ] } ], \"relations\": [ { \"name\": \"customer\", \"from\": \"customerId\", \"entity\": \"Customers\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"employee\", \"from\": \"employeeId\", \"entity\": \"Employees\", \"to\": \"id\", \"target\": \"orders\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"details\", \"type\": \"manyToOne\", \"composite\": true, \"from\": \"id\", \"entity\": \"Orders.details\", \"weak\": true, \"to\": \"orderId\", \"target\": \"order\" } ], \"uniqueKey\": [], \"required\": [], \"dependents\": [ { \"entity\": \"Orders.details\", \"relation\": { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }, { \"name\": \"Orders.details\", \"mapping\": \"Order Details\", \"properties\": [ { \"name\": \"orderId\", \"mapping\": \"OrderID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"productId\", \"mapping\": \"ProductID\", \"required\": true, \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"mapping\": \"UnitPrice\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"quantity\", \"mapping\": \"Quantity\", \"type\": \"decimal\", \"required\": false }, { \"name\": \"discount\", \"mapping\": \"Discount\", \"type\": \"decimal\", \"required\": false } ], \"primaryKey\": [ \"orderId\", \"productId\" ], \"relations\": [ { \"name\": \"order\", \"from\": \"orderId\", \"entity\": \"Orders\", \"to\": \"id\", \"target\": \"details\", \"type\": \"oneToMany\", \"weak\": false }, { \"name\": \"product\", \"from\": \"productId\", \"entity\": \"Products\", \"to\": \"id\", \"target\": \"orderDetails\", \"type\": \"oneToMany\", \"weak\": false } ], \"uniqueKey\": [], \"required\": [], \"indexes\": [], \"dependents\": [], \"constraints\": [], \"composite\": true, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false } ] }","title":"Mapping"},{"location":"api/Endpoints/Schema/#entity-mapping","text":"Return one entity mapping. Request: curl -X GET \"http://localhost:9291/mappings/default/Categories?format=beautiful\" Response { \"name\": \"Categories\", \"mapping\": \"Categories\", \"properties\": [ { \"name\": \"id\", \"mapping\": \"CategoryID\", \"type\": \"integer\", \"required\": false, \"autoIncrement\": true }, { \"name\": \"name\", \"mapping\": \"CategoryName\", \"required\": true, \"type\": \"string\", \"length\": 80 }, { \"name\": \"description\", \"mapping\": \"Description\", \"length\": 1000, \"required\": false, \"type\": \"string\" } ], \"primaryKey\": [ \"id\" ], \"uniqueKey\": [ \"name\" ], \"required\": [], \"indexes\": [], \"relations\": [ { \"name\": \"products\", \"type\": \"manyToOne\", \"composite\": false, \"from\": \"id\", \"entity\": \"Products\", \"weak\": true, \"to\": \"categoryId\", \"target\": \"category\" } ], \"dependents\": [ { \"entity\": \"Products\", \"relation\": { \"name\": \"category\", \"from\": \"categoryId\", \"entity\": \"Categories\", \"to\": \"id\", \"target\": \"products\", \"type\": \"oneToMany\", \"weak\": false } } ], \"constraints\": [], \"composite\": false, \"hadReadExps\": false, \"hadWriteExps\": false, \"hadReadValues\": false, \"hadWriteValues\": false, \"hadDefaults\": false, \"hadViewReadExp\": false, \"hadKeys\": false }","title":"Entity Mapping"},{"location":"api/Endpoints/Schema/#views","text":"Return all views. Request: curl -X GET \"http://localhost:9291/views?format=beautiful\" Response [ \"default\" ]","title":"Views"},{"location":"api/Endpoints/Schema/#stages","text":"Return all stages. Request: curl -X GET \"http://localhost:9291/stages?format=beautiful\" Response [ { \"name\": \"default\", \"sources\": [ { \"name\": \"default\" } ] } ]","title":"Stages"},{"location":"api/Endpoints/Schema/#stage","text":"Return one stage. Request: curl -X GET \"http://localhost:9291/stages/default?format=beautiful\" Response { \"name\": \"default\", \"sources\": [ { \"name\": \"default\" } ] }","title":"Stage"},{"location":"api/Endpoints/Stages/","text":"Stage endpoints Exists Check if the stage was created and the file that maintains the state exists within the data folder. Request: curl -X GET \"http://localhost:9291/stages/default/exists?format=beautiful\" Response { \"exists\": false } Export Returns the records of all the entities that belong to the stage Request: curl -X GET \"http://localhost:9291/stages/default/export?format=beautiful\" Import Import the records into the entities belonging to the stage Request: curl -X POST \"http://localhost:9291/stages/default/import\" -H \"Content-Type: application/json\" -d @data.json","title":"Stage endpoints"},{"location":"api/Endpoints/Stages/#stage-endpoints","text":"","title":"Stage endpoints"},{"location":"api/Endpoints/Stages/#exists","text":"Check if the stage was created and the file that maintains the state exists within the data folder. Request: curl -X GET \"http://localhost:9291/stages/default/exists?format=beautiful\" Response { \"exists\": false }","title":"Exists"},{"location":"api/Endpoints/Stages/#export","text":"Returns the records of all the entities that belong to the stage Request: curl -X GET \"http://localhost:9291/stages/default/export?format=beautiful\"","title":"Export"},{"location":"api/Endpoints/Stages/#import","text":"Import the records into the entities belonging to the stage Request: curl -X POST \"http://localhost:9291/stages/default/import\" -H \"Content-Type: application/json\" -d @data.json","title":"Import"},{"location":"api/Use/Configuration/","text":"Configuration Workspace The WORKSPACE environment variable must be defined with the path to the directory where the lambdaorm configuration file is located. Example of environment variable values: export WORKSPACE=./config/northwind Service Configuration The service configuration must be added to the infrastructure section of the lambdaorm configuration file. ... infrastructure: service: host: $HOST port: $PORT requestBodySize: $REQUEST_BODY_SIZE rateLimitWindowMs: $RATE_LIMIT_WINDOWS_MS rateLimitMax: $RATE_LIMIT_MAX Example of environment variable values: export HOST=http://localhost export PORT=9291 export REQUEST_BODY_SIZE=100mb export RATE_LIMIT_WINDOWS_MS=60000 export RATE_LIMIT_MAX=1000","title":"Configuration"},{"location":"api/Use/Configuration/#configuration","text":"","title":"Configuration"},{"location":"api/Use/Configuration/#workspace","text":"The WORKSPACE environment variable must be defined with the path to the directory where the lambdaorm configuration file is located. Example of environment variable values: export WORKSPACE=./config/northwind","title":"Workspace"},{"location":"api/Use/Configuration/#service-configuration","text":"The service configuration must be added to the infrastructure section of the lambdaorm configuration file. ... infrastructure: service: host: $HOST port: $PORT requestBodySize: $REQUEST_BODY_SIZE rateLimitWindowMs: $RATE_LIMIT_WINDOWS_MS rateLimitMax: $RATE_LIMIT_MAX Example of environment variable values: export HOST=http://localhost export PORT=9291 export REQUEST_BODY_SIZE=100mb export RATE_LIMIT_WINDOWS_MS=60000 export RATE_LIMIT_MAX=1000","title":"Service Configuration"},{"location":"api/Use/Kafka/","text":"Kafka Configuration In the case of using Kafka queues, the following configuration must be added to the infrastructure section of the lambdaorm configuration file. ... infrastructure: queue: config: $QUEUE_CONFIG consumers: - name: syncInsights config: groupId: group1 subscribe: topic: insights-sync fromBeginning: true Example of environment variable values: export QUEUE_CONFIG='{\"clientId\": \"collections\", \"brokers\": [\"localhost:9093\"]}' Send message In order to send a message to a Kafka queue, the kafka.send function must be used as shown below: application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: kafka.send(\"insights-sync\",[{query:query,data:data}])","title":"Kafka"},{"location":"api/Use/Kafka/#kafka","text":"","title":"Kafka"},{"location":"api/Use/Kafka/#configuration","text":"In the case of using Kafka queues, the following configuration must be added to the infrastructure section of the lambdaorm configuration file. ... infrastructure: queue: config: $QUEUE_CONFIG consumers: - name: syncInsights config: groupId: group1 subscribe: topic: insights-sync fromBeginning: true Example of environment variable values: export QUEUE_CONFIG='{\"clientId\": \"collections\", \"brokers\": [\"localhost:9093\"]}'","title":"Configuration"},{"location":"api/Use/Kafka/#send-message","text":"In order to send a message to a Kafka queue, the kafka.send function must be used as shown below: application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: kafka.send(\"insights-sync\",[{query:query,data:data}])","title":"Send message"},{"location":"api/Use/Queries/","text":"query on Schema All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr LambdaOrm functions In addition to the operations and functions defined in 3xpr lambdaorm extends the expression model with the following functions. Function Description toBase64(value:string):string Encode a string to base64 getBase64(value:string):string Decode a base64 string encrypt(value:string,key:string):string Encrypt a string with a key decrypt(value:string,key:string):string Decrypt a string with a key orm.execute(query:string,data:any,options:any):any Execute an query and return the result orm.plan(query:string,options:any):any Return the execution plan of the query orm.metadata(query:string):any Return the metadata of the query orm.model(query:string):any Return the model of the query orm.parameters(query:string):any Return the parameters of the query orm.constraints(query:string):any Return the constraints of the query Service functions In addition to the operations and functions defined in 3xpr and lambdaorm , lambdaOrm Service extends the expression model with the following functions. Function Description kafka.send(topic:string,messages:any[]):void Send a message to a kafka topic Example: application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: kafka.send(\"insights-sync\",[{query:query,data:data}])","title":"query on Schema"},{"location":"api/Use/Queries/#query-on-schema","text":"All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr","title":"query on Schema"},{"location":"api/Use/Queries/#lambdaorm-functions","text":"In addition to the operations and functions defined in 3xpr lambdaorm extends the expression model with the following functions. Function Description toBase64(value:string):string Encode a string to base64 getBase64(value:string):string Decode a base64 string encrypt(value:string,key:string):string Encrypt a string with a key decrypt(value:string,key:string):string Decrypt a string with a key orm.execute(query:string,data:any,options:any):any Execute an query and return the result orm.plan(query:string,options:any):any Return the execution plan of the query orm.metadata(query:string):any Return the metadata of the query orm.model(query:string):any Return the model of the query orm.parameters(query:string):any Return the parameters of the query orm.constraints(query:string):any Return the constraints of the query","title":"LambdaOrm functions"},{"location":"api/Use/Queries/#service-functions","text":"In addition to the operations and functions defined in 3xpr and lambdaorm , lambdaOrm Service extends the expression model with the following functions. Function Description kafka.send(topic:string,messages:any[]):void Send a message to a kafka topic Example: application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: kafka.send(\"insights-sync\",[{query:query,data:data}])","title":"Service functions"},{"location":"api/source/","text":"orm-service Classes GeneralController GeneralRoutes GeneralService QueryController QueryRoutes QueryService SchemaController SchemaRoutes SchemaService StageController StageRoutes StageService Interfaces ConsumerInfo Logger Metric Queue QueuedInfo QueueExecuteArgs ServiceConfig ServiceInfrastructureSchema ServiceSchema","title":"orm-service"},{"location":"api/source/#orm-service","text":"","title":"orm-service"},{"location":"api/source/#classes","text":"GeneralController GeneralRoutes GeneralService QueryController QueryRoutes QueryService SchemaController SchemaRoutes SchemaService StageController StageRoutes StageService","title":"Classes"},{"location":"api/source/#interfaces","text":"ConsumerInfo Logger Metric Queue QueuedInfo QueueExecuteArgs ServiceConfig ServiceInfrastructureSchema ServiceSchema","title":"Interfaces"},{"location":"api/source/classes/GeneralController/","text":"orm-service orm-service / GeneralController Class: GeneralController Defined in: src/infrastructure/controllers/generalController.ts:5 Extends Controller Constructors Constructor new GeneralController ( service , metric ): GeneralController Defined in: src/infrastructure/controllers/generalController.ts:6 Parameters service GeneralService metric Metric Returns GeneralController Overrides Controller.constructor Methods collectRequestParams() protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27 Parameters request Request Returns any Inherited from Controller.collectRequestParams handleRequest() protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50 Parameters request any response any serviceOperation any Returns Promise \\< void > Inherited from Controller.handleRequest health() health ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:14 Parameters request Request response Response Returns Promise \\< void > metrics() metrics ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:22 Parameters request Request response Response Returns Promise \\< void > ping() ping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:18 Parameters request Request response Response Returns Promise \\< void > sendError() protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18 Parameters response any error any Returns void Inherited from Controller.sendError sendResponse() protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3 Parameters response any payload? any Returns void Inherited from Controller.sendResponse version() version ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:10 Parameters request Request response Response Returns Promise \\< void >","title":"GeneralController"},{"location":"api/source/classes/GeneralController/#class-generalcontroller","text":"Defined in: src/infrastructure/controllers/generalController.ts:5","title":"Class: GeneralController"},{"location":"api/source/classes/GeneralController/#extends","text":"Controller","title":"Extends"},{"location":"api/source/classes/GeneralController/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/GeneralController/#constructor","text":"new GeneralController ( service , metric ): GeneralController Defined in: src/infrastructure/controllers/generalController.ts:6","title":"Constructor"},{"location":"api/source/classes/GeneralController/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#service","text":"GeneralService","title":"service"},{"location":"api/source/classes/GeneralController/#metric","text":"Metric","title":"metric"},{"location":"api/source/classes/GeneralController/#returns","text":"GeneralController","title":"Returns"},{"location":"api/source/classes/GeneralController/#overrides","text":"Controller.constructor","title":"Overrides"},{"location":"api/source/classes/GeneralController/#methods","text":"","title":"Methods"},{"location":"api/source/classes/GeneralController/#collectrequestparams","text":"protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27","title":"collectRequestParams()"},{"location":"api/source/classes/GeneralController/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request","text":"Request","title":"request"},{"location":"api/source/classes/GeneralController/#returns_1","text":"any","title":"Returns"},{"location":"api/source/classes/GeneralController/#inherited-from","text":"Controller.collectRequestParams","title":"Inherited from"},{"location":"api/source/classes/GeneralController/#handlerequest","text":"protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50","title":"handleRequest()"},{"location":"api/source/classes/GeneralController/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request_1","text":"any","title":"request"},{"location":"api/source/classes/GeneralController/#response","text":"any","title":"response"},{"location":"api/source/classes/GeneralController/#serviceoperation","text":"any","title":"serviceOperation"},{"location":"api/source/classes/GeneralController/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/GeneralController/#inherited-from_1","text":"Controller.handleRequest","title":"Inherited from"},{"location":"api/source/classes/GeneralController/#health","text":"health ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:14","title":"health()"},{"location":"api/source/classes/GeneralController/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request_2","text":"Request","title":"request"},{"location":"api/source/classes/GeneralController/#response_1","text":"Response","title":"response"},{"location":"api/source/classes/GeneralController/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/GeneralController/#metrics","text":"metrics ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:22","title":"metrics()"},{"location":"api/source/classes/GeneralController/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request_3","text":"Request","title":"request"},{"location":"api/source/classes/GeneralController/#response_2","text":"Response","title":"response"},{"location":"api/source/classes/GeneralController/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/GeneralController/#ping","text":"ping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:18","title":"ping()"},{"location":"api/source/classes/GeneralController/#parameters_5","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request_4","text":"Request","title":"request"},{"location":"api/source/classes/GeneralController/#response_3","text":"Response","title":"response"},{"location":"api/source/classes/GeneralController/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/GeneralController/#senderror","text":"protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18","title":"sendError()"},{"location":"api/source/classes/GeneralController/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#response_4","text":"any","title":"response"},{"location":"api/source/classes/GeneralController/#error","text":"any","title":"error"},{"location":"api/source/classes/GeneralController/#returns_6","text":"void","title":"Returns"},{"location":"api/source/classes/GeneralController/#inherited-from_2","text":"Controller.sendError","title":"Inherited from"},{"location":"api/source/classes/GeneralController/#sendresponse","text":"protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3","title":"sendResponse()"},{"location":"api/source/classes/GeneralController/#parameters_7","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#response_5","text":"any","title":"response"},{"location":"api/source/classes/GeneralController/#payload","text":"any","title":"payload?"},{"location":"api/source/classes/GeneralController/#returns_7","text":"void","title":"Returns"},{"location":"api/source/classes/GeneralController/#inherited-from_3","text":"Controller.sendResponse","title":"Inherited from"},{"location":"api/source/classes/GeneralController/#version","text":"version ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/generalController.ts:10","title":"version()"},{"location":"api/source/classes/GeneralController/#parameters_8","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralController/#request_5","text":"Request","title":"request"},{"location":"api/source/classes/GeneralController/#response_6","text":"Response","title":"response"},{"location":"api/source/classes/GeneralController/#returns_8","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/GeneralRoutes/","text":"orm-service orm-service / GeneralRoutes Class: GeneralRoutes Defined in: src/infrastructure/routes/generalRoutes.ts:5 Constructors Constructor new GeneralRoutes ( service , metric ): GeneralRoutes Defined in: src/infrastructure/routes/generalRoutes.ts:7 Parameters service GeneralService metric Metric Returns GeneralRoutes Methods getRoutes() getRoutes (): Router Defined in: src/infrastructure/routes/generalRoutes.ts:11 Returns Router","title":"GeneralRoutes"},{"location":"api/source/classes/GeneralRoutes/#class-generalroutes","text":"Defined in: src/infrastructure/routes/generalRoutes.ts:5","title":"Class: GeneralRoutes"},{"location":"api/source/classes/GeneralRoutes/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/GeneralRoutes/#constructor","text":"new GeneralRoutes ( service , metric ): GeneralRoutes Defined in: src/infrastructure/routes/generalRoutes.ts:7","title":"Constructor"},{"location":"api/source/classes/GeneralRoutes/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralRoutes/#service","text":"GeneralService","title":"service"},{"location":"api/source/classes/GeneralRoutes/#metric","text":"Metric","title":"metric"},{"location":"api/source/classes/GeneralRoutes/#returns","text":"GeneralRoutes","title":"Returns"},{"location":"api/source/classes/GeneralRoutes/#methods","text":"","title":"Methods"},{"location":"api/source/classes/GeneralRoutes/#getroutes","text":"getRoutes (): Router Defined in: src/infrastructure/routes/generalRoutes.ts:11","title":"getRoutes()"},{"location":"api/source/classes/GeneralRoutes/#returns_1","text":"Router","title":"Returns"},{"location":"api/source/classes/GeneralService/","text":"orm-service orm-service / GeneralService Class: GeneralService Defined in: src/application/services/generalService.ts:2 Constructors Constructor new GeneralService ( packageVersion , orm? ): GeneralService Defined in: src/application/services/generalService.ts:4 Parameters packageVersion string orm? IOrm Returns GeneralService Methods health() health (): Promise \\< any > Defined in: src/application/services/generalService.ts:10 Returns Promise \\< any > ping() ping (): Promise \\< any > Defined in: src/application/services/generalService.ts:28 Returns Promise \\< any > version() version (): Promise \\<{ version : string ; }> Defined in: src/application/services/generalService.ts:6 Returns Promise \\<{ version : string ; }>","title":"GeneralService"},{"location":"api/source/classes/GeneralService/#class-generalservice","text":"Defined in: src/application/services/generalService.ts:2","title":"Class: GeneralService"},{"location":"api/source/classes/GeneralService/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/GeneralService/#constructor","text":"new GeneralService ( packageVersion , orm? ): GeneralService Defined in: src/application/services/generalService.ts:4","title":"Constructor"},{"location":"api/source/classes/GeneralService/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/GeneralService/#packageversion","text":"string","title":"packageVersion"},{"location":"api/source/classes/GeneralService/#orm","text":"IOrm","title":"orm?"},{"location":"api/source/classes/GeneralService/#returns","text":"GeneralService","title":"Returns"},{"location":"api/source/classes/GeneralService/#methods","text":"","title":"Methods"},{"location":"api/source/classes/GeneralService/#health","text":"health (): Promise \\< any > Defined in: src/application/services/generalService.ts:10","title":"health()"},{"location":"api/source/classes/GeneralService/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"api/source/classes/GeneralService/#ping","text":"ping (): Promise \\< any > Defined in: src/application/services/generalService.ts:28","title":"ping()"},{"location":"api/source/classes/GeneralService/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"api/source/classes/GeneralService/#version","text":"version (): Promise \\<{ version : string ; }> Defined in: src/application/services/generalService.ts:6","title":"version()"},{"location":"api/source/classes/GeneralService/#returns_3","text":"Promise \\<{ version : string ; }>","title":"Returns"},{"location":"api/source/classes/QueryController/","text":"orm-service orm-service / QueryController Class: QueryController Defined in: src/infrastructure/controllers/queryController.ts:5 Extends Controller Constructors Constructor new QueryController ( service , queue? ): QueryController Defined in: src/infrastructure/controllers/queryController.ts:6 Parameters service QueryService queue? Queue Returns QueryController Overrides Controller.constructor Methods collectRequestParams() protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27 Parameters request Request Returns any Inherited from Controller.collectRequestParams constraints() constraints ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:10 Parameters request Request response Response Returns Promise \\< void > execute() execute ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:14 Parameters request Request response Response Returns Promise \\< void > executeQueued() executeQueued ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:18 Parameters request Request response Response Returns Promise \\< void > handleRequest() protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50 Parameters request any response any serviceOperation any Returns Promise \\< void > Inherited from Controller.handleRequest metadata() metadata ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:25 Parameters request Request response Response Returns Promise \\< void > model() model ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:29 Parameters request Request response Response Returns Promise \\< void > parameters() parameters ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:33 Parameters request Request response Response Returns Promise \\< void > plan() plan ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:37 Parameters request Request response Response Returns Promise \\< void > sendError() protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18 Parameters response any error any Returns void Inherited from Controller.sendError sendResponse() protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3 Parameters response any payload? any Returns void Inherited from Controller.sendResponse","title":"QueryController"},{"location":"api/source/classes/QueryController/#class-querycontroller","text":"Defined in: src/infrastructure/controllers/queryController.ts:5","title":"Class: QueryController"},{"location":"api/source/classes/QueryController/#extends","text":"Controller","title":"Extends"},{"location":"api/source/classes/QueryController/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/QueryController/#constructor","text":"new QueryController ( service , queue? ): QueryController Defined in: src/infrastructure/controllers/queryController.ts:6","title":"Constructor"},{"location":"api/source/classes/QueryController/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#service","text":"QueryService","title":"service"},{"location":"api/source/classes/QueryController/#queue","text":"Queue","title":"queue?"},{"location":"api/source/classes/QueryController/#returns","text":"QueryController","title":"Returns"},{"location":"api/source/classes/QueryController/#overrides","text":"Controller.constructor","title":"Overrides"},{"location":"api/source/classes/QueryController/#methods","text":"","title":"Methods"},{"location":"api/source/classes/QueryController/#collectrequestparams","text":"protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27","title":"collectRequestParams()"},{"location":"api/source/classes/QueryController/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#returns_1","text":"any","title":"Returns"},{"location":"api/source/classes/QueryController/#inherited-from","text":"Controller.collectRequestParams","title":"Inherited from"},{"location":"api/source/classes/QueryController/#constraints","text":"constraints ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:10","title":"constraints()"},{"location":"api/source/classes/QueryController/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_1","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#execute","text":"execute ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:14","title":"execute()"},{"location":"api/source/classes/QueryController/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_2","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_1","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#executequeued","text":"executeQueued ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:18","title":"executeQueued()"},{"location":"api/source/classes/QueryController/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_3","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_2","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#handlerequest","text":"protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50","title":"handleRequest()"},{"location":"api/source/classes/QueryController/#parameters_5","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_4","text":"any","title":"request"},{"location":"api/source/classes/QueryController/#response_3","text":"any","title":"response"},{"location":"api/source/classes/QueryController/#serviceoperation","text":"any","title":"serviceOperation"},{"location":"api/source/classes/QueryController/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#inherited-from_1","text":"Controller.handleRequest","title":"Inherited from"},{"location":"api/source/classes/QueryController/#metadata","text":"metadata ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:25","title":"metadata()"},{"location":"api/source/classes/QueryController/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_5","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_4","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#model","text":"model ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:29","title":"model()"},{"location":"api/source/classes/QueryController/#parameters_7","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_6","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_5","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_7","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#parameters_8","text":"parameters ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:33","title":"parameters()"},{"location":"api/source/classes/QueryController/#parameters_9","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_7","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_6","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_8","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#plan","text":"plan ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/queryController.ts:37","title":"plan()"},{"location":"api/source/classes/QueryController/#parameters_10","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#request_8","text":"Request","title":"request"},{"location":"api/source/classes/QueryController/#response_7","text":"Response","title":"response"},{"location":"api/source/classes/QueryController/#returns_9","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/QueryController/#senderror","text":"protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18","title":"sendError()"},{"location":"api/source/classes/QueryController/#parameters_11","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#response_8","text":"any","title":"response"},{"location":"api/source/classes/QueryController/#error","text":"any","title":"error"},{"location":"api/source/classes/QueryController/#returns_10","text":"void","title":"Returns"},{"location":"api/source/classes/QueryController/#inherited-from_2","text":"Controller.sendError","title":"Inherited from"},{"location":"api/source/classes/QueryController/#sendresponse","text":"protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3","title":"sendResponse()"},{"location":"api/source/classes/QueryController/#parameters_12","text":"","title":"Parameters"},{"location":"api/source/classes/QueryController/#response_9","text":"any","title":"response"},{"location":"api/source/classes/QueryController/#payload","text":"any","title":"payload?"},{"location":"api/source/classes/QueryController/#returns_11","text":"void","title":"Returns"},{"location":"api/source/classes/QueryController/#inherited-from_3","text":"Controller.sendResponse","title":"Inherited from"},{"location":"api/source/classes/QueryRoutes/","text":"orm-service orm-service / QueryRoutes Class: QueryRoutes Defined in: src/infrastructure/routes/queryRoutes.ts:5 Constructors Constructor new QueryRoutes ( service , queue? ): QueryRoutes Defined in: src/infrastructure/routes/queryRoutes.ts:7 Parameters service QueryService queue? Queue Returns QueryRoutes Methods getRoutes() getRoutes (): Router Defined in: src/infrastructure/routes/queryRoutes.ts:11 Returns Router","title":"QueryRoutes"},{"location":"api/source/classes/QueryRoutes/#class-queryroutes","text":"Defined in: src/infrastructure/routes/queryRoutes.ts:5","title":"Class: QueryRoutes"},{"location":"api/source/classes/QueryRoutes/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/QueryRoutes/#constructor","text":"new QueryRoutes ( service , queue? ): QueryRoutes Defined in: src/infrastructure/routes/queryRoutes.ts:7","title":"Constructor"},{"location":"api/source/classes/QueryRoutes/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/QueryRoutes/#service","text":"QueryService","title":"service"},{"location":"api/source/classes/QueryRoutes/#queue","text":"Queue","title":"queue?"},{"location":"api/source/classes/QueryRoutes/#returns","text":"QueryRoutes","title":"Returns"},{"location":"api/source/classes/QueryRoutes/#methods","text":"","title":"Methods"},{"location":"api/source/classes/QueryRoutes/#getroutes","text":"getRoutes (): Router Defined in: src/infrastructure/routes/queryRoutes.ts:11","title":"getRoutes()"},{"location":"api/source/classes/QueryRoutes/#returns_1","text":"Router","title":"Returns"},{"location":"api/source/classes/QueryService/","text":"orm-service orm-service / QueryService Class: QueryService Defined in: src/application/services/queryService.ts:2 Constructors Constructor new QueryService ( orm ): QueryService Defined in: src/application/services/queryService.ts:4 Parameters orm IOrm Returns QueryService Methods constraints() constraints ( __namedParameters ): Promise \\< MetadataConstraint > Defined in: src/application/services/queryService.ts:6 Parameters __namedParameters body { query : string ; } body.query string Returns Promise \\< MetadataConstraint > execute() execute ( __namedParameters ): Promise \\< any > Defined in: src/application/services/queryService.ts:26 Parameters __namedParameters body { data : any ; options? : QueryOptions ; query : string ; } body.data any body.options? QueryOptions body.query string Returns Promise \\< any > metadata() metadata ( __namedParameters ): Promise \\< Metadata > Defined in: src/application/services/queryService.ts:10 Parameters __namedParameters body { query : string ; } body.query string Returns Promise \\< Metadata > model() model ( __namedParameters ): Promise \\< MetadataModel []> Defined in: src/application/services/queryService.ts:14 Parameters __namedParameters body { query : string ; } body.query string Returns Promise \\< MetadataModel []> parameters() parameters ( __namedParameters ): Promise \\< MetadataParameter []> Defined in: src/application/services/queryService.ts:18 Parameters __namedParameters body { query : string ; } body.query string Returns Promise \\< MetadataParameter []> plan() plan ( __namedParameters ): Promise \\< QueryPlan > Defined in: src/application/services/queryService.ts:22 Parameters __namedParameters body { options? : QueryOptions ; query : string ; } body.options? QueryOptions body.query string Returns Promise \\< QueryPlan >","title":"QueryService"},{"location":"api/source/classes/QueryService/#class-queryservice","text":"Defined in: src/application/services/queryService.ts:2","title":"Class: QueryService"},{"location":"api/source/classes/QueryService/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/QueryService/#constructor","text":"new QueryService ( orm ): QueryService Defined in: src/application/services/queryService.ts:4","title":"Constructor"},{"location":"api/source/classes/QueryService/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#orm","text":"IOrm","title":"orm"},{"location":"api/source/classes/QueryService/#returns","text":"QueryService","title":"Returns"},{"location":"api/source/classes/QueryService/#methods","text":"","title":"Methods"},{"location":"api/source/classes/QueryService/#constraints","text":"constraints ( __namedParameters ): Promise \\< MetadataConstraint > Defined in: src/application/services/queryService.ts:6","title":"constraints()"},{"location":"api/source/classes/QueryService/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body","text":"{ query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodyquery","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"api/source/classes/QueryService/#execute","text":"execute ( __namedParameters ): Promise \\< any > Defined in: src/application/services/queryService.ts:26","title":"execute()"},{"location":"api/source/classes/QueryService/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters_1","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body_1","text":"{ data : any ; options? : QueryOptions ; query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodydata","text":"any","title":"body.data"},{"location":"api/source/classes/QueryService/#bodyoptions","text":"QueryOptions","title":"body.options?"},{"location":"api/source/classes/QueryService/#bodyquery_1","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"api/source/classes/QueryService/#metadata","text":"metadata ( __namedParameters ): Promise \\< Metadata > Defined in: src/application/services/queryService.ts:10","title":"metadata()"},{"location":"api/source/classes/QueryService/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters_2","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body_2","text":"{ query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodyquery_2","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"api/source/classes/QueryService/#model","text":"model ( __namedParameters ): Promise \\< MetadataModel []> Defined in: src/application/services/queryService.ts:14","title":"model()"},{"location":"api/source/classes/QueryService/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters_3","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body_3","text":"{ query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodyquery_3","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"api/source/classes/QueryService/#parameters_5","text":"parameters ( __namedParameters ): Promise \\< MetadataParameter []> Defined in: src/application/services/queryService.ts:18","title":"parameters()"},{"location":"api/source/classes/QueryService/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters_4","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body_4","text":"{ query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodyquery_4","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_5","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"api/source/classes/QueryService/#plan","text":"plan ( __namedParameters ): Promise \\< QueryPlan > Defined in: src/application/services/queryService.ts:22","title":"plan()"},{"location":"api/source/classes/QueryService/#parameters_7","text":"","title":"Parameters"},{"location":"api/source/classes/QueryService/#__namedparameters_5","text":"","title":"__namedParameters"},{"location":"api/source/classes/QueryService/#body_5","text":"{ options? : QueryOptions ; query : string ; }","title":"body"},{"location":"api/source/classes/QueryService/#bodyoptions_1","text":"QueryOptions","title":"body.options?"},{"location":"api/source/classes/QueryService/#bodyquery_5","text":"string","title":"body.query"},{"location":"api/source/classes/QueryService/#returns_6","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"api/source/classes/SchemaController/","text":"orm-service orm-service / SchemaController Class: SchemaController Defined in: src/infrastructure/controllers/schemaController.ts:5 Extends Controller Constructors Constructor new SchemaController ( service ): SchemaController Defined in: src/infrastructure/controllers/schemaController.ts:6 Parameters service SchemaService Returns SchemaController Overrides Controller.constructor Methods collectRequestParams() protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27 Parameters request Request Returns any Inherited from Controller.collectRequestParams domain() domain ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:18 Parameters request Request response Response Returns Promise \\< void > entities() entities ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:30 Parameters request Request response Response Returns Promise \\< void > entity() entity ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:34 Parameters request Request response Response Returns Promise \\< void > entityMapping() entityMapping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:38 Parameters request Request response Response Returns Promise \\< void > enum() enum ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:46 Parameters request Request response Response Returns Promise \\< void > enums() enums ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:42 Parameters request Request response Response Returns Promise \\< void > handleRequest() protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50 Parameters request any response any serviceOperation any Returns Promise \\< void > Inherited from Controller.handleRequest mapping() mapping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:54 Parameters request Request response Response Returns Promise \\< void > mappings() mappings ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:50 Parameters request Request response Response Returns Promise \\< void > schema() schema ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:14 Parameters request Request response Response Returns Promise \\< void > sendError() protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18 Parameters response any error any Returns void Inherited from Controller.sendError sendResponse() protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3 Parameters response any payload? any Returns void Inherited from Controller.sendResponse source() source ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:22 Parameters request Request response Response Returns Promise \\< void > sources() sources ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:26 Parameters request Request response Response Returns Promise \\< void > stage() stage ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:62 Parameters request Request response Response Returns Promise \\< void > stages() stages ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:58 Parameters request Request response Response Returns Promise \\< void > version() version ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:10 Parameters request Request response Response Returns Promise \\< void > views() views ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:66 Parameters request Request response Response Returns Promise \\< void >","title":"SchemaController"},{"location":"api/source/classes/SchemaController/#class-schemacontroller","text":"Defined in: src/infrastructure/controllers/schemaController.ts:5","title":"Class: SchemaController"},{"location":"api/source/classes/SchemaController/#extends","text":"Controller","title":"Extends"},{"location":"api/source/classes/SchemaController/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/SchemaController/#constructor","text":"new SchemaController ( service ): SchemaController Defined in: src/infrastructure/controllers/schemaController.ts:6","title":"Constructor"},{"location":"api/source/classes/SchemaController/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#service","text":"SchemaService","title":"service"},{"location":"api/source/classes/SchemaController/#returns","text":"SchemaController","title":"Returns"},{"location":"api/source/classes/SchemaController/#overrides","text":"Controller.constructor","title":"Overrides"},{"location":"api/source/classes/SchemaController/#methods","text":"","title":"Methods"},{"location":"api/source/classes/SchemaController/#collectrequestparams","text":"protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27","title":"collectRequestParams()"},{"location":"api/source/classes/SchemaController/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#returns_1","text":"any","title":"Returns"},{"location":"api/source/classes/SchemaController/#inherited-from","text":"Controller.collectRequestParams","title":"Inherited from"},{"location":"api/source/classes/SchemaController/#domain","text":"domain ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:18","title":"domain()"},{"location":"api/source/classes/SchemaController/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_1","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#entities","text":"entities ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:30","title":"entities()"},{"location":"api/source/classes/SchemaController/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_2","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_1","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#entity","text":"entity ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:34","title":"entity()"},{"location":"api/source/classes/SchemaController/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_3","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_2","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#entitymapping","text":"entityMapping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:38","title":"entityMapping()"},{"location":"api/source/classes/SchemaController/#parameters_5","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_4","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_3","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#enum","text":"enum ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:46","title":"enum()"},{"location":"api/source/classes/SchemaController/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_5","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_4","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#enums","text":"enums ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:42","title":"enums()"},{"location":"api/source/classes/SchemaController/#parameters_7","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_6","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_5","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_7","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#handlerequest","text":"protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50","title":"handleRequest()"},{"location":"api/source/classes/SchemaController/#parameters_8","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_7","text":"any","title":"request"},{"location":"api/source/classes/SchemaController/#response_6","text":"any","title":"response"},{"location":"api/source/classes/SchemaController/#serviceoperation","text":"any","title":"serviceOperation"},{"location":"api/source/classes/SchemaController/#returns_8","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#inherited-from_1","text":"Controller.handleRequest","title":"Inherited from"},{"location":"api/source/classes/SchemaController/#mapping","text":"mapping ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:54","title":"mapping()"},{"location":"api/source/classes/SchemaController/#parameters_9","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_8","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_7","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_9","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#mappings","text":"mappings ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:50","title":"mappings()"},{"location":"api/source/classes/SchemaController/#parameters_10","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_9","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_8","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_10","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#schema","text":"schema ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:14","title":"schema()"},{"location":"api/source/classes/SchemaController/#parameters_11","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_10","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_9","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_11","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#senderror","text":"protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18","title":"sendError()"},{"location":"api/source/classes/SchemaController/#parameters_12","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#response_10","text":"any","title":"response"},{"location":"api/source/classes/SchemaController/#error","text":"any","title":"error"},{"location":"api/source/classes/SchemaController/#returns_12","text":"void","title":"Returns"},{"location":"api/source/classes/SchemaController/#inherited-from_2","text":"Controller.sendError","title":"Inherited from"},{"location":"api/source/classes/SchemaController/#sendresponse","text":"protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3","title":"sendResponse()"},{"location":"api/source/classes/SchemaController/#parameters_13","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#response_11","text":"any","title":"response"},{"location":"api/source/classes/SchemaController/#payload","text":"any","title":"payload?"},{"location":"api/source/classes/SchemaController/#returns_13","text":"void","title":"Returns"},{"location":"api/source/classes/SchemaController/#inherited-from_3","text":"Controller.sendResponse","title":"Inherited from"},{"location":"api/source/classes/SchemaController/#source","text":"source ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:22","title":"source()"},{"location":"api/source/classes/SchemaController/#parameters_14","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_11","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_12","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_14","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#sources","text":"sources ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:26","title":"sources()"},{"location":"api/source/classes/SchemaController/#parameters_15","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_12","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_13","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_15","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#stage","text":"stage ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:62","title":"stage()"},{"location":"api/source/classes/SchemaController/#parameters_16","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_13","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_14","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_16","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#stages","text":"stages ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:58","title":"stages()"},{"location":"api/source/classes/SchemaController/#parameters_17","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_14","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_15","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_17","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#version","text":"version ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:10","title":"version()"},{"location":"api/source/classes/SchemaController/#parameters_18","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_15","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_16","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_18","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaController/#views","text":"views ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/schemaController.ts:66","title":"views()"},{"location":"api/source/classes/SchemaController/#parameters_19","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaController/#request_16","text":"Request","title":"request"},{"location":"api/source/classes/SchemaController/#response_17","text":"Response","title":"response"},{"location":"api/source/classes/SchemaController/#returns_19","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/SchemaRoutes/","text":"orm-service orm-service / SchemaRoutes Class: SchemaRoutes Defined in: src/infrastructure/routes/schemaRoutes.ts:5 Constructors Constructor new SchemaRoutes ( service ): SchemaRoutes Defined in: src/infrastructure/routes/schemaRoutes.ts:7 Parameters service SchemaService Returns SchemaRoutes Methods getRoutes() getRoutes (): Router Defined in: src/infrastructure/routes/schemaRoutes.ts:11 Returns Router","title":"SchemaRoutes"},{"location":"api/source/classes/SchemaRoutes/#class-schemaroutes","text":"Defined in: src/infrastructure/routes/schemaRoutes.ts:5","title":"Class: SchemaRoutes"},{"location":"api/source/classes/SchemaRoutes/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/SchemaRoutes/#constructor","text":"new SchemaRoutes ( service ): SchemaRoutes Defined in: src/infrastructure/routes/schemaRoutes.ts:7","title":"Constructor"},{"location":"api/source/classes/SchemaRoutes/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaRoutes/#service","text":"SchemaService","title":"service"},{"location":"api/source/classes/SchemaRoutes/#returns","text":"SchemaRoutes","title":"Returns"},{"location":"api/source/classes/SchemaRoutes/#methods","text":"","title":"Methods"},{"location":"api/source/classes/SchemaRoutes/#getroutes","text":"getRoutes (): Router Defined in: src/infrastructure/routes/schemaRoutes.ts:11","title":"getRoutes()"},{"location":"api/source/classes/SchemaRoutes/#returns_1","text":"Router","title":"Returns"},{"location":"api/source/classes/SchemaService/","text":"orm-service orm-service / SchemaService Class: SchemaService Defined in: src/application/services/schemaService.ts:2 Constructors Constructor new SchemaService ( orm ): SchemaService Defined in: src/application/services/schemaService.ts:4 Parameters orm IOrm Returns SchemaService Methods domain() domain (): Promise \\< DomainSchema > Defined in: src/application/services/schemaService.ts:10 Returns Promise \\< DomainSchema > entities() entities (): Promise \\< Entity []> Defined in: src/application/services/schemaService.ts:31 Returns Promise \\< Entity []> entity() entity ( __namedParameters ): Promise \\< undefined | Entity > Defined in: src/application/services/schemaService.ts:35 Parameters __namedParameters entity string Returns Promise \\< undefined | Entity > entityMapping() entityMapping ( __namedParameters ): Promise \\< undefined | EntityMapping > Defined in: src/application/services/schemaService.ts:55 Parameters __namedParameters entity string mapping string Returns Promise \\< undefined | EntityMapping > enum() enum ( __namedParameters ): Promise \\< undefined | Enum > Defined in: src/application/services/schemaService.ts:43 Parameters __namedParameters _enum string Returns Promise \\< undefined | Enum > enums() enums (): Promise \\< Enum []> Defined in: src/application/services/schemaService.ts:39 Returns Promise \\< Enum []> mapping() mapping ( __namedParameters ): Promise \\< undefined | Mapping > Defined in: src/application/services/schemaService.ts:51 Parameters __namedParameters mapping string Returns Promise \\< undefined | Mapping > mappings() mappings (): Promise \\< Mapping []> Defined in: src/application/services/schemaService.ts:47 Returns Promise \\< Mapping []> schema() schema (): Promise \\< Schema > Defined in: src/application/services/schemaService.ts:14 Returns Promise \\< Schema > source() source ( __namedParameters ): Promise \\<{ dialect : string ; name : string ; }> Defined in: src/application/services/schemaService.ts:27 Parameters __namedParameters source string Returns Promise \\<{ dialect : string ; name : string ; }> sources() sources (): Promise \\< object []> Defined in: src/application/services/schemaService.ts:23 Returns Promise \\< object []> stage() stage ( __namedParameters ): Promise \\< undefined | Stage > Defined in: src/application/services/schemaService.ts:63 Parameters __namedParameters stage string Returns Promise \\< undefined | Stage > stages() stages (): Promise \\< Stage []> Defined in: src/application/services/schemaService.ts:59 Returns Promise \\< Stage []> version() version (): Promise \\<{ version : string ; }> Defined in: src/application/services/schemaService.ts:6 Returns Promise \\<{ version : string ; }> views() views (): Promise \\< string []> Defined in: src/application/services/schemaService.ts:67 Returns Promise \\< string []>","title":"SchemaService"},{"location":"api/source/classes/SchemaService/#class-schemaservice","text":"Defined in: src/application/services/schemaService.ts:2","title":"Class: SchemaService"},{"location":"api/source/classes/SchemaService/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/SchemaService/#constructor","text":"new SchemaService ( orm ): SchemaService Defined in: src/application/services/schemaService.ts:4","title":"Constructor"},{"location":"api/source/classes/SchemaService/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#orm","text":"IOrm","title":"orm"},{"location":"api/source/classes/SchemaService/#returns","text":"SchemaService","title":"Returns"},{"location":"api/source/classes/SchemaService/#methods","text":"","title":"Methods"},{"location":"api/source/classes/SchemaService/#domain","text":"domain (): Promise \\< DomainSchema > Defined in: src/application/services/schemaService.ts:10","title":"domain()"},{"location":"api/source/classes/SchemaService/#returns_1","text":"Promise \\< DomainSchema >","title":"Returns"},{"location":"api/source/classes/SchemaService/#entities","text":"entities (): Promise \\< Entity []> Defined in: src/application/services/schemaService.ts:31","title":"entities()"},{"location":"api/source/classes/SchemaService/#returns_2","text":"Promise \\< Entity []>","title":"Returns"},{"location":"api/source/classes/SchemaService/#entity","text":"entity ( __namedParameters ): Promise \\< undefined | Entity > Defined in: src/application/services/schemaService.ts:35","title":"entity()"},{"location":"api/source/classes/SchemaService/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#entity_1","text":"string","title":"entity"},{"location":"api/source/classes/SchemaService/#returns_3","text":"Promise \\< undefined | Entity >","title":"Returns"},{"location":"api/source/classes/SchemaService/#entitymapping","text":"entityMapping ( __namedParameters ): Promise \\< undefined | EntityMapping > Defined in: src/application/services/schemaService.ts:55","title":"entityMapping()"},{"location":"api/source/classes/SchemaService/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters_1","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#entity_2","text":"string","title":"entity"},{"location":"api/source/classes/SchemaService/#mapping","text":"string","title":"mapping"},{"location":"api/source/classes/SchemaService/#returns_4","text":"Promise \\< undefined | EntityMapping >","title":"Returns"},{"location":"api/source/classes/SchemaService/#enum","text":"enum ( __namedParameters ): Promise \\< undefined | Enum > Defined in: src/application/services/schemaService.ts:43","title":"enum()"},{"location":"api/source/classes/SchemaService/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters_2","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#_enum","text":"string","title":"_enum"},{"location":"api/source/classes/SchemaService/#returns_5","text":"Promise \\< undefined | Enum >","title":"Returns"},{"location":"api/source/classes/SchemaService/#enums","text":"enums (): Promise \\< Enum []> Defined in: src/application/services/schemaService.ts:39","title":"enums()"},{"location":"api/source/classes/SchemaService/#returns_6","text":"Promise \\< Enum []>","title":"Returns"},{"location":"api/source/classes/SchemaService/#mapping_1","text":"mapping ( __namedParameters ): Promise \\< undefined | Mapping > Defined in: src/application/services/schemaService.ts:51","title":"mapping()"},{"location":"api/source/classes/SchemaService/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters_3","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#mapping_2","text":"string","title":"mapping"},{"location":"api/source/classes/SchemaService/#returns_7","text":"Promise \\< undefined | Mapping >","title":"Returns"},{"location":"api/source/classes/SchemaService/#mappings","text":"mappings (): Promise \\< Mapping []> Defined in: src/application/services/schemaService.ts:47","title":"mappings()"},{"location":"api/source/classes/SchemaService/#returns_8","text":"Promise \\< Mapping []>","title":"Returns"},{"location":"api/source/classes/SchemaService/#schema","text":"schema (): Promise \\< Schema > Defined in: src/application/services/schemaService.ts:14","title":"schema()"},{"location":"api/source/classes/SchemaService/#returns_9","text":"Promise \\< Schema >","title":"Returns"},{"location":"api/source/classes/SchemaService/#source","text":"source ( __namedParameters ): Promise \\<{ dialect : string ; name : string ; }> Defined in: src/application/services/schemaService.ts:27","title":"source()"},{"location":"api/source/classes/SchemaService/#parameters_5","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters_4","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#source_1","text":"string","title":"source"},{"location":"api/source/classes/SchemaService/#returns_10","text":"Promise \\<{ dialect : string ; name : string ; }>","title":"Returns"},{"location":"api/source/classes/SchemaService/#sources","text":"sources (): Promise \\< object []> Defined in: src/application/services/schemaService.ts:23","title":"sources()"},{"location":"api/source/classes/SchemaService/#returns_11","text":"Promise \\< object []>","title":"Returns"},{"location":"api/source/classes/SchemaService/#stage","text":"stage ( __namedParameters ): Promise \\< undefined | Stage > Defined in: src/application/services/schemaService.ts:63","title":"stage()"},{"location":"api/source/classes/SchemaService/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/SchemaService/#__namedparameters_5","text":"","title":"__namedParameters"},{"location":"api/source/classes/SchemaService/#stage_1","text":"string","title":"stage"},{"location":"api/source/classes/SchemaService/#returns_12","text":"Promise \\< undefined | Stage >","title":"Returns"},{"location":"api/source/classes/SchemaService/#stages","text":"stages (): Promise \\< Stage []> Defined in: src/application/services/schemaService.ts:59","title":"stages()"},{"location":"api/source/classes/SchemaService/#returns_13","text":"Promise \\< Stage []>","title":"Returns"},{"location":"api/source/classes/SchemaService/#version","text":"version (): Promise \\<{ version : string ; }> Defined in: src/application/services/schemaService.ts:6","title":"version()"},{"location":"api/source/classes/SchemaService/#returns_14","text":"Promise \\<{ version : string ; }>","title":"Returns"},{"location":"api/source/classes/SchemaService/#views","text":"views (): Promise \\< string []> Defined in: src/application/services/schemaService.ts:67","title":"views()"},{"location":"api/source/classes/SchemaService/#returns_15","text":"Promise \\< string []>","title":"Returns"},{"location":"api/source/classes/StageController/","text":"orm-service orm-service / StageController Class: StageController Defined in: src/infrastructure/controllers/stageController.ts:5 Extends Controller Constructors Constructor new StageController ( service ): StageController Defined in: src/infrastructure/controllers/stageController.ts:6 Parameters service StageService Returns StageController Overrides Controller.constructor Methods collectRequestParams() protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27 Parameters request Request Returns any Inherited from Controller.collectRequestParams exists() exists ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:14 Parameters request Request response Response Returns Promise \\< void > export() export ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:18 Parameters request Request response Response Returns Promise \\< void > handleRequest() protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50 Parameters request any response any serviceOperation any Returns Promise \\< void > Inherited from Controller.handleRequest import() import ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:22 Parameters request Request response Response Returns Promise \\< void > list() list ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:10 Parameters request Request response Response Returns Promise \\< void > sendError() protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18 Parameters response any error any Returns void Inherited from Controller.sendError sendResponse() protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3 Parameters response any payload? any Returns void Inherited from Controller.sendResponse","title":"StageController"},{"location":"api/source/classes/StageController/#class-stagecontroller","text":"Defined in: src/infrastructure/controllers/stageController.ts:5","title":"Class: StageController"},{"location":"api/source/classes/StageController/#extends","text":"Controller","title":"Extends"},{"location":"api/source/classes/StageController/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/StageController/#constructor","text":"new StageController ( service ): StageController Defined in: src/infrastructure/controllers/stageController.ts:6","title":"Constructor"},{"location":"api/source/classes/StageController/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#service","text":"StageService","title":"service"},{"location":"api/source/classes/StageController/#returns","text":"StageController","title":"Returns"},{"location":"api/source/classes/StageController/#overrides","text":"Controller.constructor","title":"Overrides"},{"location":"api/source/classes/StageController/#methods","text":"","title":"Methods"},{"location":"api/source/classes/StageController/#collectrequestparams","text":"protected collectRequestParams ( request ): any Defined in: src/infrastructure/controllers/Controller.ts:27","title":"collectRequestParams()"},{"location":"api/source/classes/StageController/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request","text":"Request","title":"request"},{"location":"api/source/classes/StageController/#returns_1","text":"any","title":"Returns"},{"location":"api/source/classes/StageController/#inherited-from","text":"Controller.collectRequestParams","title":"Inherited from"},{"location":"api/source/classes/StageController/#exists","text":"exists ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:14","title":"exists()"},{"location":"api/source/classes/StageController/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request_1","text":"Request","title":"request"},{"location":"api/source/classes/StageController/#response","text":"Response","title":"response"},{"location":"api/source/classes/StageController/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageController/#export","text":"export ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:18","title":"export()"},{"location":"api/source/classes/StageController/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request_2","text":"Request","title":"request"},{"location":"api/source/classes/StageController/#response_1","text":"Response","title":"response"},{"location":"api/source/classes/StageController/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageController/#handlerequest","text":"protected handleRequest ( request , response , serviceOperation ): Promise \\< void > Defined in: src/infrastructure/controllers/Controller.ts:50","title":"handleRequest()"},{"location":"api/source/classes/StageController/#parameters_4","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request_3","text":"any","title":"request"},{"location":"api/source/classes/StageController/#response_2","text":"any","title":"response"},{"location":"api/source/classes/StageController/#serviceoperation","text":"any","title":"serviceOperation"},{"location":"api/source/classes/StageController/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageController/#inherited-from_1","text":"Controller.handleRequest","title":"Inherited from"},{"location":"api/source/classes/StageController/#import","text":"import ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:22","title":"import()"},{"location":"api/source/classes/StageController/#parameters_5","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request_4","text":"Request","title":"request"},{"location":"api/source/classes/StageController/#response_3","text":"Response","title":"response"},{"location":"api/source/classes/StageController/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageController/#list","text":"list ( request , response ): Promise \\< void > Defined in: src/infrastructure/controllers/stageController.ts:10","title":"list()"},{"location":"api/source/classes/StageController/#parameters_6","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#request_5","text":"Request","title":"request"},{"location":"api/source/classes/StageController/#response_4","text":"Response","title":"response"},{"location":"api/source/classes/StageController/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageController/#senderror","text":"protected sendError ( response , error ): void Defined in: src/infrastructure/controllers/Controller.ts:18","title":"sendError()"},{"location":"api/source/classes/StageController/#parameters_7","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#response_5","text":"any","title":"response"},{"location":"api/source/classes/StageController/#error","text":"any","title":"error"},{"location":"api/source/classes/StageController/#returns_7","text":"void","title":"Returns"},{"location":"api/source/classes/StageController/#inherited-from_2","text":"Controller.sendError","title":"Inherited from"},{"location":"api/source/classes/StageController/#sendresponse","text":"protected sendResponse ( response , payload? ): void Defined in: src/infrastructure/controllers/Controller.ts:3","title":"sendResponse()"},{"location":"api/source/classes/StageController/#parameters_8","text":"","title":"Parameters"},{"location":"api/source/classes/StageController/#response_6","text":"any","title":"response"},{"location":"api/source/classes/StageController/#payload","text":"any","title":"payload?"},{"location":"api/source/classes/StageController/#returns_8","text":"void","title":"Returns"},{"location":"api/source/classes/StageController/#inherited-from_3","text":"Controller.sendResponse","title":"Inherited from"},{"location":"api/source/classes/StageRoutes/","text":"orm-service orm-service / StageRoutes Class: StageRoutes Defined in: src/infrastructure/routes/stageRoutes.ts:5 Constructors Constructor new StageRoutes ( service ): StageRoutes Defined in: src/infrastructure/routes/stageRoutes.ts:7 Parameters service StageService Returns StageRoutes Methods getRoutes() getRoutes (): Router Defined in: src/infrastructure/routes/stageRoutes.ts:11 Returns Router","title":"StageRoutes"},{"location":"api/source/classes/StageRoutes/#class-stageroutes","text":"Defined in: src/infrastructure/routes/stageRoutes.ts:5","title":"Class: StageRoutes"},{"location":"api/source/classes/StageRoutes/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/StageRoutes/#constructor","text":"new StageRoutes ( service ): StageRoutes Defined in: src/infrastructure/routes/stageRoutes.ts:7","title":"Constructor"},{"location":"api/source/classes/StageRoutes/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/StageRoutes/#service","text":"StageService","title":"service"},{"location":"api/source/classes/StageRoutes/#returns","text":"StageRoutes","title":"Returns"},{"location":"api/source/classes/StageRoutes/#methods","text":"","title":"Methods"},{"location":"api/source/classes/StageRoutes/#getroutes","text":"getRoutes (): Router Defined in: src/infrastructure/routes/stageRoutes.ts:11","title":"getRoutes()"},{"location":"api/source/classes/StageRoutes/#returns_1","text":"Router","title":"Returns"},{"location":"api/source/classes/StageService/","text":"orm-service orm-service / StageService Class: StageService Defined in: src/application/services/stageService.ts:2 Constructors Constructor new StageService ( orm ): StageService Defined in: src/application/services/stageService.ts:4 Parameters orm IOrm Returns StageService Methods exists() exists ( __namedParameters ): Promise \\< any > Defined in: src/application/services/stageService.ts:10 Parameters __namedParameters stage string Returns Promise \\< any > export() export ( __namedParameters ): Promise \\< SchemaData > Defined in: src/application/services/stageService.ts:14 Parameters __namedParameters stage string Returns Promise \\< SchemaData > import() import ( __namedParameters ): Promise \\< void > Defined in: src/application/services/stageService.ts:18 Parameters __namedParameters body any stage string Returns Promise \\< void > list() list (): Promise \\< string []> Defined in: src/application/services/stageService.ts:6 Returns Promise \\< string []>","title":"StageService"},{"location":"api/source/classes/StageService/#class-stageservice","text":"Defined in: src/application/services/stageService.ts:2","title":"Class: StageService"},{"location":"api/source/classes/StageService/#constructors","text":"","title":"Constructors"},{"location":"api/source/classes/StageService/#constructor","text":"new StageService ( orm ): StageService Defined in: src/application/services/stageService.ts:4","title":"Constructor"},{"location":"api/source/classes/StageService/#parameters","text":"","title":"Parameters"},{"location":"api/source/classes/StageService/#orm","text":"IOrm","title":"orm"},{"location":"api/source/classes/StageService/#returns","text":"StageService","title":"Returns"},{"location":"api/source/classes/StageService/#methods","text":"","title":"Methods"},{"location":"api/source/classes/StageService/#exists","text":"exists ( __namedParameters ): Promise \\< any > Defined in: src/application/services/stageService.ts:10","title":"exists()"},{"location":"api/source/classes/StageService/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/classes/StageService/#__namedparameters","text":"","title":"__namedParameters"},{"location":"api/source/classes/StageService/#stage","text":"string","title":"stage"},{"location":"api/source/classes/StageService/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"api/source/classes/StageService/#export","text":"export ( __namedParameters ): Promise \\< SchemaData > Defined in: src/application/services/stageService.ts:14","title":"export()"},{"location":"api/source/classes/StageService/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/classes/StageService/#__namedparameters_1","text":"","title":"__namedParameters"},{"location":"api/source/classes/StageService/#stage_1","text":"string","title":"stage"},{"location":"api/source/classes/StageService/#returns_2","text":"Promise \\< SchemaData >","title":"Returns"},{"location":"api/source/classes/StageService/#import","text":"import ( __namedParameters ): Promise \\< void > Defined in: src/application/services/stageService.ts:18","title":"import()"},{"location":"api/source/classes/StageService/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/classes/StageService/#__namedparameters_2","text":"","title":"__namedParameters"},{"location":"api/source/classes/StageService/#body","text":"any","title":"body"},{"location":"api/source/classes/StageService/#stage_2","text":"string","title":"stage"},{"location":"api/source/classes/StageService/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/classes/StageService/#list","text":"list (): Promise \\< string []> Defined in: src/application/services/stageService.ts:6","title":"list()"},{"location":"api/source/classes/StageService/#returns_4","text":"Promise \\< string []>","title":"Returns"},{"location":"api/source/interfaces/ConsumerInfo/","text":"orm-service orm-service / ConsumerInfo Interface: ConsumerInfo Defined in: src/domain/queuedInfo.ts:3 Properties config config : any Defined in: src/domain/queuedInfo.ts:4 execute execute : string Defined in: src/domain/queuedInfo.ts:6 subscribe subscribe : any Defined in: src/domain/queuedInfo.ts:5","title":"ConsumerInfo"},{"location":"api/source/interfaces/ConsumerInfo/#interface-consumerinfo","text":"Defined in: src/domain/queuedInfo.ts:3","title":"Interface: ConsumerInfo"},{"location":"api/source/interfaces/ConsumerInfo/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/ConsumerInfo/#config","text":"config : any Defined in: src/domain/queuedInfo.ts:4","title":"config"},{"location":"api/source/interfaces/ConsumerInfo/#execute","text":"execute : string Defined in: src/domain/queuedInfo.ts:6","title":"execute"},{"location":"api/source/interfaces/ConsumerInfo/#subscribe","text":"subscribe : any Defined in: src/domain/queuedInfo.ts:5","title":"subscribe"},{"location":"api/source/interfaces/Logger/","text":"orm-service orm-service / Logger Interface: Logger Defined in: src/application/ports/logger.ts:1 Methods error() error ( message ): Promise \\< void > Defined in: src/application/ports/logger.ts:2 Parameters message any Returns Promise \\< void > info() info ( message ): Promise \\< void > Defined in: src/application/ports/logger.ts:3 Parameters message string Returns Promise \\< void >","title":"Logger"},{"location":"api/source/interfaces/Logger/#interface-logger","text":"Defined in: src/application/ports/logger.ts:1","title":"Interface: Logger"},{"location":"api/source/interfaces/Logger/#methods","text":"","title":"Methods"},{"location":"api/source/interfaces/Logger/#error","text":"error ( message ): Promise \\< void > Defined in: src/application/ports/logger.ts:2","title":"error()"},{"location":"api/source/interfaces/Logger/#parameters","text":"","title":"Parameters"},{"location":"api/source/interfaces/Logger/#message","text":"any","title":"message"},{"location":"api/source/interfaces/Logger/#returns","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/Logger/#info","text":"info ( message ): Promise \\< void > Defined in: src/application/ports/logger.ts:3","title":"info()"},{"location":"api/source/interfaces/Logger/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/interfaces/Logger/#message_1","text":"string","title":"message"},{"location":"api/source/interfaces/Logger/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/Metric/","text":"orm-service orm-service / Metric Interface: Metric Defined in: src/application/ports/metric.ts:1 Methods after() after ( req , res , next ): void Defined in: src/application/ports/metric.ts:3 Parameters req any res any next any Returns void before() before ( req , res , next ): void Defined in: src/application/ports/metric.ts:2 Parameters req any res any next any Returns void metrics() metrics (): Promise \\< any > Defined in: src/application/ports/metric.ts:4 Returns Promise \\< any >","title":"Metric"},{"location":"api/source/interfaces/Metric/#interface-metric","text":"Defined in: src/application/ports/metric.ts:1","title":"Interface: Metric"},{"location":"api/source/interfaces/Metric/#methods","text":"","title":"Methods"},{"location":"api/source/interfaces/Metric/#after","text":"after ( req , res , next ): void Defined in: src/application/ports/metric.ts:3","title":"after()"},{"location":"api/source/interfaces/Metric/#parameters","text":"","title":"Parameters"},{"location":"api/source/interfaces/Metric/#req","text":"any","title":"req"},{"location":"api/source/interfaces/Metric/#res","text":"any","title":"res"},{"location":"api/source/interfaces/Metric/#next","text":"any","title":"next"},{"location":"api/source/interfaces/Metric/#returns","text":"void","title":"Returns"},{"location":"api/source/interfaces/Metric/#before","text":"before ( req , res , next ): void Defined in: src/application/ports/metric.ts:2","title":"before()"},{"location":"api/source/interfaces/Metric/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/interfaces/Metric/#req_1","text":"any","title":"req"},{"location":"api/source/interfaces/Metric/#res_1","text":"any","title":"res"},{"location":"api/source/interfaces/Metric/#next_1","text":"any","title":"next"},{"location":"api/source/interfaces/Metric/#returns_1","text":"void","title":"Returns"},{"location":"api/source/interfaces/Metric/#metrics","text":"metrics (): Promise \\< any > Defined in: src/application/ports/metric.ts:4","title":"metrics()"},{"location":"api/source/interfaces/Metric/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"api/source/interfaces/Queue/","text":"orm-service orm-service / Queue Interface: Queue Defined in: src/application/ports/queue.ts:3 Methods execute() execute ( args ): string Defined in: src/application/ports/queue.ts:6 Parameters args QueueExecuteArgs Returns string executeInBackground() executeInBackground ( queueId , args ): Promise \\< void > Defined in: src/application/ports/queue.ts:7 Parameters queueId string args QueueExecuteArgs Returns Promise \\< void > send() send ( topic , messages ): Promise \\< void > Defined in: src/application/ports/queue.ts:8 Parameters topic string messages any [] Returns Promise \\< void > start() start ( queuedInfo ): Promise \\< void > Defined in: src/application/ports/queue.ts:4 Parameters queuedInfo QueuedInfo Returns Promise \\< void > stop() stop (): Promise \\< void > Defined in: src/application/ports/queue.ts:5 Returns Promise \\< void >","title":"Queue"},{"location":"api/source/interfaces/Queue/#interface-queue","text":"Defined in: src/application/ports/queue.ts:3","title":"Interface: Queue"},{"location":"api/source/interfaces/Queue/#methods","text":"","title":"Methods"},{"location":"api/source/interfaces/Queue/#execute","text":"execute ( args ): string Defined in: src/application/ports/queue.ts:6","title":"execute()"},{"location":"api/source/interfaces/Queue/#parameters","text":"","title":"Parameters"},{"location":"api/source/interfaces/Queue/#args","text":"QueueExecuteArgs","title":"args"},{"location":"api/source/interfaces/Queue/#returns","text":"string","title":"Returns"},{"location":"api/source/interfaces/Queue/#executeinbackground","text":"executeInBackground ( queueId , args ): Promise \\< void > Defined in: src/application/ports/queue.ts:7","title":"executeInBackground()"},{"location":"api/source/interfaces/Queue/#parameters_1","text":"","title":"Parameters"},{"location":"api/source/interfaces/Queue/#queueid","text":"string","title":"queueId"},{"location":"api/source/interfaces/Queue/#args_1","text":"QueueExecuteArgs","title":"args"},{"location":"api/source/interfaces/Queue/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/Queue/#send","text":"send ( topic , messages ): Promise \\< void > Defined in: src/application/ports/queue.ts:8","title":"send()"},{"location":"api/source/interfaces/Queue/#parameters_2","text":"","title":"Parameters"},{"location":"api/source/interfaces/Queue/#topic","text":"string","title":"topic"},{"location":"api/source/interfaces/Queue/#messages","text":"any []","title":"messages"},{"location":"api/source/interfaces/Queue/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/Queue/#start","text":"start ( queuedInfo ): Promise \\< void > Defined in: src/application/ports/queue.ts:4","title":"start()"},{"location":"api/source/interfaces/Queue/#parameters_3","text":"","title":"Parameters"},{"location":"api/source/interfaces/Queue/#queuedinfo","text":"QueuedInfo","title":"queuedInfo"},{"location":"api/source/interfaces/Queue/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/Queue/#stop","text":"stop (): Promise \\< void > Defined in: src/application/ports/queue.ts:5","title":"stop()"},{"location":"api/source/interfaces/Queue/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"api/source/interfaces/QueueExecuteArgs/","text":"orm-service orm-service / QueueExecuteArgs Interface: QueueExecuteArgs Defined in: src/domain/queuedInfo.ts:13 Properties chunk? optional chunk : number Defined in: src/domain/queuedInfo.ts:17 data data : any Defined in: src/domain/queuedInfo.ts:16 options? optional options : QueryOptions Defined in: src/domain/queuedInfo.ts:18 query query : string Defined in: src/domain/queuedInfo.ts:15 topic topic : string Defined in: src/domain/queuedInfo.ts:14","title":"QueueExecuteArgs"},{"location":"api/source/interfaces/QueueExecuteArgs/#interface-queueexecuteargs","text":"Defined in: src/domain/queuedInfo.ts:13","title":"Interface: QueueExecuteArgs"},{"location":"api/source/interfaces/QueueExecuteArgs/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/QueueExecuteArgs/#chunk","text":"optional chunk : number Defined in: src/domain/queuedInfo.ts:17","title":"chunk?"},{"location":"api/source/interfaces/QueueExecuteArgs/#data","text":"data : any Defined in: src/domain/queuedInfo.ts:16","title":"data"},{"location":"api/source/interfaces/QueueExecuteArgs/#options","text":"optional options : QueryOptions Defined in: src/domain/queuedInfo.ts:18","title":"options?"},{"location":"api/source/interfaces/QueueExecuteArgs/#query","text":"query : string Defined in: src/domain/queuedInfo.ts:15","title":"query"},{"location":"api/source/interfaces/QueueExecuteArgs/#topic","text":"topic : string Defined in: src/domain/queuedInfo.ts:14","title":"topic"},{"location":"api/source/interfaces/QueuedInfo/","text":"orm-service orm-service / QueuedInfo Interface: QueuedInfo Defined in: src/domain/queuedInfo.ts:8 Properties config config : any Defined in: src/domain/queuedInfo.ts:9 consumers consumers : ConsumerInfo [] Defined in: src/domain/queuedInfo.ts:10","title":"QueuedInfo"},{"location":"api/source/interfaces/QueuedInfo/#interface-queuedinfo","text":"Defined in: src/domain/queuedInfo.ts:8","title":"Interface: QueuedInfo"},{"location":"api/source/interfaces/QueuedInfo/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/QueuedInfo/#config","text":"config : any Defined in: src/domain/queuedInfo.ts:9","title":"config"},{"location":"api/source/interfaces/QueuedInfo/#consumers","text":"consumers : ConsumerInfo [] Defined in: src/domain/queuedInfo.ts:10","title":"consumers"},{"location":"api/source/interfaces/ServiceConfig/","text":"orm-service orm-service / ServiceConfig Interface: ServiceConfig Defined in: src/domain/serviceSchema.ts:4 Properties host? optional host : string Defined in: src/domain/serviceSchema.ts:6 port? optional port : number Defined in: src/domain/serviceSchema.ts:5 rateLimitMax? optional rateLimitMax : string Defined in: src/domain/serviceSchema.ts:9 rateLimitWindowMs? optional rateLimitWindowMs : string Defined in: src/domain/serviceSchema.ts:8 requestBodySize? optional requestBodySize : string Defined in: src/domain/serviceSchema.ts:7","title":"ServiceConfig"},{"location":"api/source/interfaces/ServiceConfig/#interface-serviceconfig","text":"Defined in: src/domain/serviceSchema.ts:4","title":"Interface: ServiceConfig"},{"location":"api/source/interfaces/ServiceConfig/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/ServiceConfig/#host","text":"optional host : string Defined in: src/domain/serviceSchema.ts:6","title":"host?"},{"location":"api/source/interfaces/ServiceConfig/#port","text":"optional port : number Defined in: src/domain/serviceSchema.ts:5","title":"port?"},{"location":"api/source/interfaces/ServiceConfig/#ratelimitmax","text":"optional rateLimitMax : string Defined in: src/domain/serviceSchema.ts:9","title":"rateLimitMax?"},{"location":"api/source/interfaces/ServiceConfig/#ratelimitwindowms","text":"optional rateLimitWindowMs : string Defined in: src/domain/serviceSchema.ts:8","title":"rateLimitWindowMs?"},{"location":"api/source/interfaces/ServiceConfig/#requestbodysize","text":"optional requestBodySize : string Defined in: src/domain/serviceSchema.ts:7","title":"requestBodySize?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/","text":"orm-service orm-service / ServiceInfrastructureSchema Interface: ServiceInfrastructureSchema Defined in: src/domain/serviceSchema.ts:12 Extends InfrastructureSchema Properties mappings? optional mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:167 Inherited from InfrastructureSchema.mappings paths? optional paths : AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:166 Inherited from InfrastructureSchema.paths queue queue : QueuedInfo Defined in: src/domain/serviceSchema.ts:14 server? optional server : ServerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:171 Inherited from InfrastructureSchema.server service service : ServiceConfig Defined in: src/domain/serviceSchema.ts:13 sources? optional sources : Source [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:169 Inherited from InfrastructureSchema.sources stages? optional stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:170 Inherited from InfrastructureSchema.stages views? optional views : View [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:168 Inherited from InfrastructureSchema.views","title":"ServiceInfrastructureSchema"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#interface-serviceinfrastructureschema","text":"Defined in: src/domain/serviceSchema.ts:12","title":"Interface: ServiceInfrastructureSchema"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#extends","text":"InfrastructureSchema","title":"Extends"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#mappings","text":"optional mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:167","title":"mappings?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from","text":"InfrastructureSchema.mappings","title":"Inherited from"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#paths","text":"optional paths : AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:166","title":"paths?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from_1","text":"InfrastructureSchema.paths","title":"Inherited from"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#queue","text":"queue : QueuedInfo Defined in: src/domain/serviceSchema.ts:14","title":"queue"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#server","text":"optional server : ServerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:171","title":"server?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from_2","text":"InfrastructureSchema.server","title":"Inherited from"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#service","text":"service : ServiceConfig Defined in: src/domain/serviceSchema.ts:13","title":"service"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#sources","text":"optional sources : Source [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:169","title":"sources?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from_3","text":"InfrastructureSchema.sources","title":"Inherited from"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#stages","text":"optional stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:170","title":"stages?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from_4","text":"InfrastructureSchema.stages","title":"Inherited from"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#views","text":"optional views : View [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:168","title":"views?"},{"location":"api/source/interfaces/ServiceInfrastructureSchema/#inherited-from_5","text":"InfrastructureSchema.views","title":"Inherited from"},{"location":"api/source/interfaces/ServiceSchema/","text":"orm-service orm-service / ServiceSchema Interface: ServiceSchema Defined in: src/domain/serviceSchema.ts:17 Extends Schema Properties application? optional application : ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:182 Inherited from Schema.application domain domain : DomainSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:180 Inherited from Schema.domain infrastructure infrastructure : ServiceInfrastructureSchema Defined in: src/domain/serviceSchema.ts:18 Overrides Schema.infrastructure version version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:179 Inherited from Schema.version","title":"ServiceSchema"},{"location":"api/source/interfaces/ServiceSchema/#interface-serviceschema","text":"Defined in: src/domain/serviceSchema.ts:17","title":"Interface: ServiceSchema"},{"location":"api/source/interfaces/ServiceSchema/#extends","text":"Schema","title":"Extends"},{"location":"api/source/interfaces/ServiceSchema/#properties","text":"","title":"Properties"},{"location":"api/source/interfaces/ServiceSchema/#application","text":"optional application : ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:182","title":"application?"},{"location":"api/source/interfaces/ServiceSchema/#inherited-from","text":"Schema.application","title":"Inherited from"},{"location":"api/source/interfaces/ServiceSchema/#domain","text":"domain : DomainSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:180","title":"domain"},{"location":"api/source/interfaces/ServiceSchema/#inherited-from_1","text":"Schema.domain","title":"Inherited from"},{"location":"api/source/interfaces/ServiceSchema/#infrastructure","text":"infrastructure : ServiceInfrastructureSchema Defined in: src/domain/serviceSchema.ts:18","title":"infrastructure"},{"location":"api/source/interfaces/ServiceSchema/#overrides","text":"Schema.infrastructure","title":"Overrides"},{"location":"api/source/interfaces/ServiceSchema/#version","text":"version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:179","title":"version"},{"location":"api/source/interfaces/ServiceSchema/#inherited-from_2","text":"Schema.version","title":"Inherited from"},{"location":"cli/","text":"\u03bbORM CLI \u03bbORM CLI is a command line application to use \u03bbORM Installation Install the package globally to use the CLI commands to help you create and maintain projects npm install lambdaorm-cli -g CLI Command Description version Prints lambdaorm version this project uses. init Generates lambdaorm project structure. sync Synchronize database. import Import data from file to database. export Export data from a database. execute Execute an expression lambda. metadata Return metadata of query expression. parameters Return parameters of query expression. model Return model of query expression. plan Return plan execution of query expression. build add configuration, model and repositories according to the language. drop Removes all database objects but not the database. Usage Commands Infrastructure Commands Version Init Build DDL Commands Sync Drop Query Commands Execute Plan Metadata Parameters Model Constraints source Change log Labs You can access various labs at github.com/lambda-orm/lambdaorm-labs","title":"\u03bbORM CLI"},{"location":"cli/#orm-cli","text":"\u03bbORM CLI is a command line application to use \u03bbORM","title":"\u03bbORM CLI"},{"location":"cli/#installation","text":"Install the package globally to use the CLI commands to help you create and maintain projects npm install lambdaorm-cli -g","title":"Installation"},{"location":"cli/#cli","text":"Command Description version Prints lambdaorm version this project uses. init Generates lambdaorm project structure. sync Synchronize database. import Import data from file to database. export Export data from a database. execute Execute an expression lambda. metadata Return metadata of query expression. parameters Return parameters of query expression. model Return model of query expression. plan Return plan execution of query expression. build add configuration, model and repositories according to the language. drop Removes all database objects but not the database.","title":"CLI"},{"location":"cli/#usage","text":"Commands Infrastructure Commands Version Init Build DDL Commands Sync Drop Query Commands Execute Plan Metadata Parameters Model Constraints source Change log","title":"Usage"},{"location":"cli/#labs","text":"You can access various labs at github.com/lambda-orm/lambdaorm-labs","title":"Labs"},{"location":"cli/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. Versions 1.4.8 (2025-05-31) 1.4.7 (2025-05-31) 1.4.6 (2025-05-30) 1.4.5 (2024-06-01) 1.4.4 (2024-05-13) 1.4.3 (2024-05-11) 1.4.2 (2024-05-11) 1.4.1 (2024-05-09) 1.4.0 (2024-05-09) Features: show result in stages commands ( 3dd4e71 ), closes #0 1.3.10 (2024-05-08) 1.3.9 (2024-05-08) 1.3.8 (2024-05-08) 1.3.7 (2024-05-08) 1.3.6 (2024-05-07) 1.3.5 (2024-05-07) 1.3.4 (2024-05-04) 1.3.3 (2024-05-03) 1.3.2 (2024-05-02) 1.3.1 (2024-05-02) 1.3.0 (2024-05-01) Features: add match command ( 94ec9d1 ), closes #0 1.2.6 (2024-05-01) 1.2.5 (2024-05-01) 1.2.4 (2024-05-01) 1.2.3 (2024-05-01) 1.2.2 (2024-04-30) 1.2.1 (2024-04-29) 1.2.0 (2024-04-18) Features: add fetch, match, incorporate and introspect commands ( 900ce02 ), closes #0 add introspect and incorporate ( a6147ee ), closes #0 1.1.0 (2024-04-17) Features: adjust for update dependences ( 49f4585 ), closes #0 update lib local schema ( 28e2a3b ), closes #0 0.9.34 (2024-04-14) 0.9.33 (2024-01-01) Features: add schema command ( 5395a39 ), closes #223 0.9.32 (2023-12-28) 0.9.31 (2023-12-28) 0.9.30 (2023-12-27) Bug Fixes: parameters command ( 022d635 ), closes #223 0.9.29 (2023-12-27) Bug Fixes: plan: method without await ( ab0e697 ), closes #223 0.9.28 (2023-12-27) Bug Fixes: orm: solve rest adapter ( 38fc82c ), closes #223 0.9.27 (2023-12-27) 0.9.26 (2023-12-27) Bug Fixes: add url parameter in commands ( 10110f1 ), closes #224 0.9.25 (2023-12-26) Bug Fixes: solve init and build commands with client ( 0ad94fd ), closes #224 0.9.24 (2023-12-26) Bug Fixes: solve import ( 8cc5ecb ), closes #224 0.9.23 (2023-12-26) Features: refactoring cli ( c3b9b54 ), closes #224 reorganize ( 660ef5f ), closes #223 0.9.22 (2023-12-17) Features: add usage on readme ( 0fbf2e6 ), closes #201 0.9.21 (2023-12-16) Features: dependencies: update lambdaorm dependence ( c1cb788 ), closes #201 0.9.20 (2023-12-16) Features: update dependencies ( 84fc365 ), closes #201 0.9.19 (2023-12-16) 0.9.18 (2023-12-02) 0.9.17 (2023-12-01) 0.9.16 (2023-12-01) Bug Fixes: solve plan command ( 770da35 ), closes #201 0.9.15 (2023-11-30) Bug Fixes: commands: duplicate execute name command ( abfd6c6 ), closes #201 0.9.14 (2023-11-30) 0.9.13 (2023-11-29) Features: complete wiki and readme ( dc472e0 ), closes #169 0.9.12 (2023-11-29) Features: complete wiki and readme ( d4bb448 ), closes #169 0.9.11 (2023-11-28) Bug Fixes: build: ignore build composite entity ( e3b402f ), closes #201 build: solve entities name with dot ( 9933620 ), closes #201 0.9.10 (2023-11-28) Features: deps: update lambdaorm dependencie ( 0f48305 ), closes #201 0.9.9 (2023-11-26) 0.9.8 (2023-11-26) 0.9.7 (2023-11-26) 0.9.6 (2023-11-26) 0.9.5 (2023-11-23) Features: refactorize init and build command and remove update command ( d682324 ), closes #201 0.9.4 (2023-11-22) Bug Fixes: solve data path ( 60f2f1d ), closes #201 0.9.3 (2023-11-22) Bug Fixes: solve domain path ( 767930c ), closes #201 0.9.2 (2023-11-22) 0.9.1 (2023-11-22) 0.8.12 (2023-11-22) 0.8.11 (2023-11-22) 0.8.10 (2023-11-21) 0.8.9 (2023-11-21) Bug Fixes: lab: remove client-node lab ( a160a7d ), closes #202 0.8.8 (2023-11-21) 0.8.7 (2023-11-21) 0.8.6 (2023-11-21) 0.8.5 (2023-11-21) 0.8.4 (2023-11-21) Features: build: refactorize update and build model ( 77e2297 ), closes #202 build: refactorize update and build model ( 8aabe01 ), closes #202 0.8.3 (2023-11-15) 0.8.2 (2023-11-15) 0.8.1 (2023-11-15) Features: syntax: remove creation of syntax and update model ( 4c4c6a8 ), closes #189 0.7.10 (2023-11-09) Features: dependencies: add dependabot ( 4f68120 ), closes #176 0.7.9 (2023-11-09) Features: changelog: define header changelog ( 7fd4333 ), closes #176 release: refactoring github workflow ( 2789d9c ), closes #176 0.7.8 (2023-11-06) Features: adjust release workflow ( d3940ab ), closes #176 0.7.7 (2023-11-05)","title":"Changelog"},{"location":"cli/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file.","title":"Changelog"},{"location":"cli/CHANGELOG/#versions","text":"","title":"Versions"},{"location":"cli/CHANGELOG/#148-2025-05-31","text":"","title":"1.4.8 (2025-05-31)"},{"location":"cli/CHANGELOG/#147-2025-05-31","text":"","title":"1.4.7 (2025-05-31)"},{"location":"cli/CHANGELOG/#146-2025-05-30","text":"","title":"1.4.6 (2025-05-30)"},{"location":"cli/CHANGELOG/#145-2024-06-01","text":"","title":"1.4.5 (2024-06-01)"},{"location":"cli/CHANGELOG/#144-2024-05-13","text":"","title":"1.4.4 (2024-05-13)"},{"location":"cli/CHANGELOG/#143-2024-05-11","text":"","title":"1.4.3 (2024-05-11)"},{"location":"cli/CHANGELOG/#142-2024-05-11","text":"","title":"1.4.2 (2024-05-11)"},{"location":"cli/CHANGELOG/#141-2024-05-09","text":"","title":"1.4.1 (2024-05-09)"},{"location":"cli/CHANGELOG/#140-2024-05-09","text":"Features: show result in stages commands ( 3dd4e71 ), closes #0","title":"1.4.0 (2024-05-09)"},{"location":"cli/CHANGELOG/#1310-2024-05-08","text":"","title":"1.3.10 (2024-05-08)"},{"location":"cli/CHANGELOG/#139-2024-05-08","text":"","title":"1.3.9 (2024-05-08)"},{"location":"cli/CHANGELOG/#138-2024-05-08","text":"","title":"1.3.8 (2024-05-08)"},{"location":"cli/CHANGELOG/#137-2024-05-08","text":"","title":"1.3.7 (2024-05-08)"},{"location":"cli/CHANGELOG/#136-2024-05-07","text":"","title":"1.3.6 (2024-05-07)"},{"location":"cli/CHANGELOG/#135-2024-05-07","text":"","title":"1.3.5 (2024-05-07)"},{"location":"cli/CHANGELOG/#134-2024-05-04","text":"","title":"1.3.4 (2024-05-04)"},{"location":"cli/CHANGELOG/#133-2024-05-03","text":"","title":"1.3.3 (2024-05-03)"},{"location":"cli/CHANGELOG/#132-2024-05-02","text":"","title":"1.3.2 (2024-05-02)"},{"location":"cli/CHANGELOG/#131-2024-05-02","text":"","title":"1.3.1 (2024-05-02)"},{"location":"cli/CHANGELOG/#130-2024-05-01","text":"Features: add match command ( 94ec9d1 ), closes #0","title":"1.3.0 (2024-05-01)"},{"location":"cli/CHANGELOG/#126-2024-05-01","text":"","title":"1.2.6 (2024-05-01)"},{"location":"cli/CHANGELOG/#125-2024-05-01","text":"","title":"1.2.5 (2024-05-01)"},{"location":"cli/CHANGELOG/#124-2024-05-01","text":"","title":"1.2.4 (2024-05-01)"},{"location":"cli/CHANGELOG/#123-2024-05-01","text":"","title":"1.2.3 (2024-05-01)"},{"location":"cli/CHANGELOG/#122-2024-04-30","text":"","title":"1.2.2 (2024-04-30)"},{"location":"cli/CHANGELOG/#121-2024-04-29","text":"","title":"1.2.1 (2024-04-29)"},{"location":"cli/CHANGELOG/#120-2024-04-18","text":"Features: add fetch, match, incorporate and introspect commands ( 900ce02 ), closes #0 add introspect and incorporate ( a6147ee ), closes #0","title":"1.2.0 (2024-04-18)"},{"location":"cli/CHANGELOG/#110-2024-04-17","text":"Features: adjust for update dependences ( 49f4585 ), closes #0 update lib local schema ( 28e2a3b ), closes #0","title":"1.1.0 (2024-04-17)"},{"location":"cli/CHANGELOG/#0934-2024-04-14","text":"","title":"0.9.34 (2024-04-14)"},{"location":"cli/CHANGELOG/#0933-2024-01-01","text":"Features: add schema command ( 5395a39 ), closes #223","title":"0.9.33 (2024-01-01)"},{"location":"cli/CHANGELOG/#0932-2023-12-28","text":"","title":"0.9.32 (2023-12-28)"},{"location":"cli/CHANGELOG/#0931-2023-12-28","text":"","title":"0.9.31 (2023-12-28)"},{"location":"cli/CHANGELOG/#0930-2023-12-27","text":"Bug Fixes: parameters command ( 022d635 ), closes #223","title":"0.9.30 (2023-12-27)"},{"location":"cli/CHANGELOG/#0929-2023-12-27","text":"Bug Fixes: plan: method without await ( ab0e697 ), closes #223","title":"0.9.29 (2023-12-27)"},{"location":"cli/CHANGELOG/#0928-2023-12-27","text":"Bug Fixes: orm: solve rest adapter ( 38fc82c ), closes #223","title":"0.9.28 (2023-12-27)"},{"location":"cli/CHANGELOG/#0927-2023-12-27","text":"","title":"0.9.27 (2023-12-27)"},{"location":"cli/CHANGELOG/#0926-2023-12-27","text":"Bug Fixes: add url parameter in commands ( 10110f1 ), closes #224","title":"0.9.26 (2023-12-27)"},{"location":"cli/CHANGELOG/#0925-2023-12-26","text":"Bug Fixes: solve init and build commands with client ( 0ad94fd ), closes #224","title":"0.9.25 (2023-12-26)"},{"location":"cli/CHANGELOG/#0924-2023-12-26","text":"Bug Fixes: solve import ( 8cc5ecb ), closes #224","title":"0.9.24 (2023-12-26)"},{"location":"cli/CHANGELOG/#0923-2023-12-26","text":"Features: refactoring cli ( c3b9b54 ), closes #224 reorganize ( 660ef5f ), closes #223","title":"0.9.23 (2023-12-26)"},{"location":"cli/CHANGELOG/#0922-2023-12-17","text":"Features: add usage on readme ( 0fbf2e6 ), closes #201","title":"0.9.22 (2023-12-17)"},{"location":"cli/CHANGELOG/#0921-2023-12-16","text":"Features: dependencies: update lambdaorm dependence ( c1cb788 ), closes #201","title":"0.9.21 (2023-12-16)"},{"location":"cli/CHANGELOG/#0920-2023-12-16","text":"Features: update dependencies ( 84fc365 ), closes #201","title":"0.9.20 (2023-12-16)"},{"location":"cli/CHANGELOG/#0919-2023-12-16","text":"","title":"0.9.19 (2023-12-16)"},{"location":"cli/CHANGELOG/#0918-2023-12-02","text":"","title":"0.9.18 (2023-12-02)"},{"location":"cli/CHANGELOG/#0917-2023-12-01","text":"","title":"0.9.17 (2023-12-01)"},{"location":"cli/CHANGELOG/#0916-2023-12-01","text":"Bug Fixes: solve plan command ( 770da35 ), closes #201","title":"0.9.16 (2023-12-01)"},{"location":"cli/CHANGELOG/#0915-2023-11-30","text":"Bug Fixes: commands: duplicate execute name command ( abfd6c6 ), closes #201","title":"0.9.15 (2023-11-30)"},{"location":"cli/CHANGELOG/#0914-2023-11-30","text":"","title":"0.9.14 (2023-11-30)"},{"location":"cli/CHANGELOG/#0913-2023-11-29","text":"Features: complete wiki and readme ( dc472e0 ), closes #169","title":"0.9.13 (2023-11-29)"},{"location":"cli/CHANGELOG/#0912-2023-11-29","text":"Features: complete wiki and readme ( d4bb448 ), closes #169","title":"0.9.12 (2023-11-29)"},{"location":"cli/CHANGELOG/#0911-2023-11-28","text":"Bug Fixes: build: ignore build composite entity ( e3b402f ), closes #201 build: solve entities name with dot ( 9933620 ), closes #201","title":"0.9.11 (2023-11-28)"},{"location":"cli/CHANGELOG/#0910-2023-11-28","text":"Features: deps: update lambdaorm dependencie ( 0f48305 ), closes #201","title":"0.9.10 (2023-11-28)"},{"location":"cli/CHANGELOG/#099-2023-11-26","text":"","title":"0.9.9 (2023-11-26)"},{"location":"cli/CHANGELOG/#098-2023-11-26","text":"","title":"0.9.8 (2023-11-26)"},{"location":"cli/CHANGELOG/#097-2023-11-26","text":"","title":"0.9.7 (2023-11-26)"},{"location":"cli/CHANGELOG/#096-2023-11-26","text":"","title":"0.9.6 (2023-11-26)"},{"location":"cli/CHANGELOG/#095-2023-11-23","text":"Features: refactorize init and build command and remove update command ( d682324 ), closes #201","title":"0.9.5 (2023-11-23)"},{"location":"cli/CHANGELOG/#094-2023-11-22","text":"Bug Fixes: solve data path ( 60f2f1d ), closes #201","title":"0.9.4 (2023-11-22)"},{"location":"cli/CHANGELOG/#093-2023-11-22","text":"Bug Fixes: solve domain path ( 767930c ), closes #201","title":"0.9.3 (2023-11-22)"},{"location":"cli/CHANGELOG/#092-2023-11-22","text":"","title":"0.9.2 (2023-11-22)"},{"location":"cli/CHANGELOG/#091-2023-11-22","text":"","title":"0.9.1 (2023-11-22)"},{"location":"cli/CHANGELOG/#0812-2023-11-22","text":"","title":"0.8.12 (2023-11-22)"},{"location":"cli/CHANGELOG/#0811-2023-11-22","text":"","title":"0.8.11 (2023-11-22)"},{"location":"cli/CHANGELOG/#0810-2023-11-21","text":"","title":"0.8.10 (2023-11-21)"},{"location":"cli/CHANGELOG/#089-2023-11-21","text":"Bug Fixes: lab: remove client-node lab ( a160a7d ), closes #202","title":"0.8.9 (2023-11-21)"},{"location":"cli/CHANGELOG/#088-2023-11-21","text":"","title":"0.8.8 (2023-11-21)"},{"location":"cli/CHANGELOG/#087-2023-11-21","text":"","title":"0.8.7 (2023-11-21)"},{"location":"cli/CHANGELOG/#086-2023-11-21","text":"","title":"0.8.6 (2023-11-21)"},{"location":"cli/CHANGELOG/#085-2023-11-21","text":"","title":"0.8.5 (2023-11-21)"},{"location":"cli/CHANGELOG/#084-2023-11-21","text":"Features: build: refactorize update and build model ( 77e2297 ), closes #202 build: refactorize update and build model ( 8aabe01 ), closes #202","title":"0.8.4 (2023-11-21)"},{"location":"cli/CHANGELOG/#083-2023-11-15","text":"","title":"0.8.3 (2023-11-15)"},{"location":"cli/CHANGELOG/#082-2023-11-15","text":"","title":"0.8.2 (2023-11-15)"},{"location":"cli/CHANGELOG/#081-2023-11-15","text":"Features: syntax: remove creation of syntax and update model ( 4c4c6a8 ), closes #189","title":"0.8.1 (2023-11-15)"},{"location":"cli/CHANGELOG/#0710-2023-11-09","text":"Features: dependencies: add dependabot ( 4f68120 ), closes #176","title":"0.7.10 (2023-11-09)"},{"location":"cli/CHANGELOG/#079-2023-11-09","text":"Features: changelog: define header changelog ( 7fd4333 ), closes #176 release: refactoring github workflow ( 2789d9c ), closes #176","title":"0.7.9 (2023-11-09)"},{"location":"cli/CHANGELOG/#078-2023-11-06","text":"Features: adjust release workflow ( d3940ab ), closes #176","title":"0.7.8 (2023-11-06)"},{"location":"cli/CHANGELOG/#077-2023-11-05","text":"","title":"0.7.7 (2023-11-05)"},{"location":"cli/Version/","text":"Version Prints lambdaorm version this project uses. Example lambdaorm version Result: Global lambdaorm cli version: 0.9.11 Local lambdaorm version: 0.8.85","title":"Version"},{"location":"cli/Version/#version","text":"Prints lambdaorm version this project uses.","title":"Version"},{"location":"cli/Version/#example","text":"lambdaorm version Result: Global lambdaorm cli version: 0.9.11 Local lambdaorm version: 0.8.85","title":"Example"},{"location":"cli/Commands/Build/","text":"Build build model, repositories. Params parameter short describe workspace -w Project path. url -u When working with a client you must pass the url of the service language -l Develop language. model -m Build model. repositories -r Build repositories. all -a Build model and repositories. src-path -s Relative source code path in workspace. data-path -d Relative data path in workspace. domain-path -o Relative domain path in source code path. Example lambdaorm build -w lab/countries","title":"Build"},{"location":"cli/Commands/Build/#build","text":"build model, repositories.","title":"Build"},{"location":"cli/Commands/Build/#params","text":"parameter short describe workspace -w Project path. url -u When working with a client you must pass the url of the service language -l Develop language. model -m Build model. repositories -r Build repositories. all -a Build model and repositories. src-path -s Relative source code path in workspace. data-path -d Relative data path in workspace. domain-path -o Relative domain path in source code path.","title":"Params"},{"location":"cli/Commands/Build/#example","text":"lambdaorm build -w lab/countries","title":"Example"},{"location":"cli/Commands/Constraints/","text":"Constraints Return constraints associated with the query expression. Params parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Example lambdaorm constraints -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] }","title":"Constraints"},{"location":"cli/Commands/Constraints/#constraints","text":"Return constraints associated with the query expression.","title":"Constraints"},{"location":"cli/Commands/Constraints/#params","text":"parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Constraints/#example","text":"lambdaorm constraints -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: { \"entity\": \"Orders\", \"constraints\": [], \"children\": [ { \"entity\": \"Orders.details\", \"constraints\": [] } ] }","title":"Example"},{"location":"cli/Commands/Drop/","text":"Drop Removes all database objects but not the database. Params parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. output -o Generates the queries but does not apply force -f If there is an error in a statement, continue executing the next statements url -u When working with a client you must pass the url of the service Example lambdaorm drop -w lab/countries -e lab/countries/.env","title":"Drop"},{"location":"cli/Commands/Drop/#drop","text":"Removes all database objects but not the database.","title":"Drop"},{"location":"cli/Commands/Drop/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. output -o Generates the queries but does not apply force -f If there is an error in a statement, continue executing the next statements url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Drop/#example","text":"lambdaorm drop -w lab/countries -e lab/countries/.env","title":"Example"},{"location":"cli/Commands/Execute/","text":"Execute Execute an query expression. Params parameter short describe workspace -w project path. stage -s Name of stage query -q Query expression data -d Data used to execute expression envfile -e Read in a file of environment variables. output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Examples BulkInsert lambdaorm execute -w lab/countries -e lab/countries/.env -q Countries.bulkInsert().include(p => p.states) -d ./lab/countries/countries.json Query lambdaorm execute -e \".env\" -o beautiful -q \"Products.distinct(p => ({ quantity: p.quantity, category: p.category.name })).sort(p => p.category).page(1,3)\" Result: [ { \"quantity\": \"10 boxes x 20 bags\", \"category\": \"Beverages\" }, { \"quantity\": \"24 - 12 oz bottles\", \"category\": \"Beverages\" }, { \"quantity\": \"12 - 355 ml cans\", \"category\": \"Beverages\" } ]","title":"Execute"},{"location":"cli/Commands/Execute/#execute","text":"Execute an query expression.","title":"Execute"},{"location":"cli/Commands/Execute/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage query -q Query expression data -d Data used to execute expression envfile -e Read in a file of environment variables. output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Execute/#examples","text":"","title":"Examples"},{"location":"cli/Commands/Execute/#bulkinsert","text":"lambdaorm execute -w lab/countries -e lab/countries/.env -q Countries.bulkInsert().include(p => p.states) -d ./lab/countries/countries.json","title":"BulkInsert"},{"location":"cli/Commands/Execute/#query","text":"lambdaorm execute -e \".env\" -o beautiful -q \"Products.distinct(p => ({ quantity: p.quantity, category: p.category.name })).sort(p => p.category).page(1,3)\" Result: [ { \"quantity\": \"10 boxes x 20 bags\", \"category\": \"Beverages\" }, { \"quantity\": \"24 - 12 oz bottles\", \"category\": \"Beverages\" }, { \"quantity\": \"12 - 355 ml cans\", \"category\": \"Beverages\" } ]","title":"Query"},{"location":"cli/Commands/Export/","text":"Export Export data from a database. Params parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. target -t Destination file with export data. url -u When working with a client you must pass the url of the service Example lambdaorm export -w lab/countries -e lab/countries/.env -t ./lab/countries/data","title":"Export"},{"location":"cli/Commands/Export/#export","text":"Export data from a database.","title":"Export"},{"location":"cli/Commands/Export/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. target -t Destination file with export data. url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Export/#example","text":"lambdaorm export -w lab/countries -e lab/countries/.env -t ./lab/countries/data","title":"Example"},{"location":"cli/Commands/Import/","text":"Import Import data from file to database. Params parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. data -d Data file to import. url -u When working with a client you must pass the url of the service Example lambdaorm import -w lab/countries -e lab/countries/.env -d ./lab/countries/data/default-export.json","title":"Import"},{"location":"cli/Commands/Import/#import","text":"Import data from file to database.","title":"Import"},{"location":"cli/Commands/Import/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. data -d Data file to import. url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Import/#example","text":"lambdaorm import -w lab/countries -e lab/countries/.env -d ./lab/countries/data/default-export.json","title":"Example"},{"location":"cli/Commands/Init/","text":"Init Generates lambdaorm project structure. Params parameter short describe workspace -w project path. source -s Name of data source. dialect -d Database type you\\'ll use in your project. connection -c string connection to database url -u When working with a client you must pass the url of the service Example lambdaorm init -w lab/countries","title":"Init"},{"location":"cli/Commands/Init/#init","text":"Generates lambdaorm project structure.","title":"Init"},{"location":"cli/Commands/Init/#params","text":"parameter short describe workspace -w project path. source -s Name of data source. dialect -d Database type you\\'ll use in your project. connection -c string connection to database url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Init/#example","text":"lambdaorm init -w lab/countries","title":"Example"},{"location":"cli/Commands/Metadata/","text":"Metadata Return metadata associated with the query expression. Params parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Example lambdaorm metadata -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 35 }, \"name\": \"select\", \"children\": [ { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 38 }, \"name\": \"select\", \"children\": [], \"type\": \"any\", \"entity\": \"Orders.details\", \"columns\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"[integer]\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o1\" } ], \"type\": \"any\", \"entity\": \"Orders\", \"columns\": [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"__id\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"id\", \"type\": \"integer\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o\" }","title":"Metadata"},{"location":"cli/Commands/Metadata/#metadata","text":"Return metadata associated with the query expression.","title":"Metadata"},{"location":"cli/Commands/Metadata/#params","text":"parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Metadata/#example","text":"lambdaorm metadata -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 35 }, \"name\": \"select\", \"children\": [ { \"classtype\": \"Sentence\", \"pos\": { \"ln\": 0, \"col\": 38 }, \"name\": \"select\", \"children\": [], \"type\": \"any\", \"entity\": \"Orders.details\", \"columns\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"[integer]\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o1\" } ], \"type\": \"any\", \"entity\": \"Orders\", \"columns\": [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"__id\", \"type\": \"integer\" } ], \"parameters\": [ { \"name\": \"id\", \"type\": \"integer\" } ], \"constraints\": [], \"values\": [], \"defaults\": [], \"clause\": \"select\", \"alias\": \"o\" }","title":"Example"},{"location":"cli/Commands/Model/","text":"Model Return model that will be returned in the query execution. Params parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Example lambdaorm model -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ]","title":"Model"},{"location":"cli/Commands/Model/#model","text":"Return model that will be returned in the query execution.","title":"Model"},{"location":"cli/Commands/Model/#params","text":"parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Model/#example","text":"lambdaorm model -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"customerId\", \"type\": \"string\" }, { \"name\": \"employeeId\", \"type\": \"integer\" }, { \"name\": \"orderDate\", \"type\": \"dateTime\" }, { \"name\": \"requiredDate\", \"type\": \"date\" }, { \"name\": \"shippedDate\", \"type\": \"date\" }, { \"name\": \"shipViaId\", \"type\": \"integer\" }, { \"name\": \"freight\", \"type\": \"decimal\" }, { \"name\": \"name\", \"type\": \"string\" }, { \"name\": \"address\", \"type\": \"string\" }, { \"name\": \"city\", \"type\": \"string\" }, { \"name\": \"region\", \"type\": \"string\" }, { \"name\": \"postalCode\", \"type\": \"string\" }, { \"name\": \"country\", \"type\": \"string\" }, { \"name\": \"details\", \"type\": \"Orders.details[]\", \"children\": [ { \"name\": \"orderId\", \"type\": \"integer\" }, { \"name\": \"productId\", \"type\": \"integer\" }, { \"name\": \"unitPrice\", \"type\": \"decimal\" }, { \"name\": \"quantity\", \"type\": \"decimal\" }, { \"name\": \"discount\", \"type\": \"decimal\" }, { \"name\": \"LambdaOrmParentId\", \"type\": \"integer\" } ] } ]","title":"Example"},{"location":"cli/Commands/Parameters/","text":"Parameters Return parameters associated with the query expression. Params parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Example lambdaorm parameters -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ]","title":"Parameters"},{"location":"cli/Commands/Parameters/#parameters","text":"Return parameters associated with the query expression.","title":"Parameters"},{"location":"cli/Commands/Parameters/#params","text":"parameter short describe workspace -w project path. query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Parameters/#example","text":"lambdaorm parameters -o beautiful -q \"Orders.filter(p=>p.id==id).include(p=>p.details)\" Result: [ { \"name\": \"id\", \"type\": \"integer\" }, { \"name\": \"details\", \"type\": \"Orders.details\", \"children\": [ { \"name\": \"LambdaOrmParentId\", \"type\": \"any\" } ] } ]","title":"Example"},{"location":"cli/Commands/Plan/","text":"Plan Return plan execution of query expression. Params parameter short describe workspace -w project path. stage -s Name of stage query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service Example lambdaorm plan -o beautiful -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).page(1,2)\" Result: { \"entity\": \"Orders\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$match\\\" : { \\\"CustomerID\\\":{{customerId}} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"id\\\":\\\"$_id\\\", \\\"customerId\\\":\\\"$CustomerID\\\", \\\"employeeId\\\":\\\"$EmployeeID\\\", \\\"orderDate\\\":\\\"$OrderDate\\\", \\\"requiredDate\\\":\\\"$RequiredDate\\\", \\\"shippedDate\\\":\\\"$ShippedDate\\\", \\\"shipViaId\\\":\\\"$ShipVia\\\", \\\"freight\\\":\\\"$Freight\\\", \\\"name\\\":\\\"$ShipName\\\", \\\"address\\\":\\\"$ShipAddress\\\", \\\"city\\\":\\\"$ShipCity\\\", \\\"region\\\":\\\"$ShipRegion\\\", \\\"postalCode\\\":\\\"$ShipPostalCode\\\", \\\"country\\\":\\\"$ShipCountry\\\", \\\"__customerId\\\":\\\"$CustomerID\\\", \\\"__id\\\":\\\"$_id\\\" ,\\\"details\\\": { \\\"$map\\\":{ \\\"input\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\", \\\"in\\\": { \\\"quantity\\\":\\\"$$this.Quantity\\\", \\\"unitPrice\\\":\\\"$$this.UnitPrice\\\", \\\"__productId\\\":\\\"$$this.ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$$this.OrderID\\\" } }} }} , { \\\"$sort\\\" :{ \\\"_id\\\":1 } } , { \\\"$skip\\\" : 0 }, { \\\"$limit\\\" : 2 } , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Crm\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" }, { \"entity\": \"Orders.details\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$unwind\\\" : \\\"$\\\\\\\"Order Details\\\\\\\"\\\" }, { \\\"$replaceRoot\\\": { \\\"newRoot\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\" } }, { \\\"$match\\\" : { \\\"OrderID\\\":{ \\\"$in\\\" :[{{LambdaOrmParentId}}]} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"quantity\\\":\\\"$Quantity\\\", \\\"unitPrice\\\":\\\"$UnitPrice\\\", \\\"__productId\\\":\\\"$ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$OrderID\\\" }} , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT p.ProductName AS name, p.CategoryID AS `__categoryId`, p.ProductID AS LambdaOrmParentId FROM Products p WHERE p.ProductID IN (?) \", \"children\": [ { \"entity\": \"Categories\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT c1.CategoryName AS name, c1.CategoryID AS LambdaOrmParentId FROM Categories c1 WHERE c1.CategoryID IN (?) \" } ] } ] } ] }","title":"Plan"},{"location":"cli/Commands/Plan/#plan","text":"Return plan execution of query expression.","title":"Plan"},{"location":"cli/Commands/Plan/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage query -q Query expression output -o Generates an output according to the following possible values [json url -u When working with a client you must pass the url of the service","title":"Params"},{"location":"cli/Commands/Plan/#example","text":"lambdaorm plan -o beautiful -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).page(1,2)\" Result: { \"entity\": \"Orders\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$match\\\" : { \\\"CustomerID\\\":{{customerId}} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"id\\\":\\\"$_id\\\", \\\"customerId\\\":\\\"$CustomerID\\\", \\\"employeeId\\\":\\\"$EmployeeID\\\", \\\"orderDate\\\":\\\"$OrderDate\\\", \\\"requiredDate\\\":\\\"$RequiredDate\\\", \\\"shippedDate\\\":\\\"$ShippedDate\\\", \\\"shipViaId\\\":\\\"$ShipVia\\\", \\\"freight\\\":\\\"$Freight\\\", \\\"name\\\":\\\"$ShipName\\\", \\\"address\\\":\\\"$ShipAddress\\\", \\\"city\\\":\\\"$ShipCity\\\", \\\"region\\\":\\\"$ShipRegion\\\", \\\"postalCode\\\":\\\"$ShipPostalCode\\\", \\\"country\\\":\\\"$ShipCountry\\\", \\\"__customerId\\\":\\\"$CustomerID\\\", \\\"__id\\\":\\\"$_id\\\" ,\\\"details\\\": { \\\"$map\\\":{ \\\"input\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\", \\\"in\\\": { \\\"quantity\\\":\\\"$$this.Quantity\\\", \\\"unitPrice\\\":\\\"$$this.UnitPrice\\\", \\\"__productId\\\":\\\"$$this.ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$$this.OrderID\\\" } }} }} , { \\\"$sort\\\" :{ \\\"_id\\\":1 } } , { \\\"$skip\\\" : 0 }, { \\\"$limit\\\" : 2 } , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Customers\", \"dialect\": \"PostgreSQL\", \"source\": \"Crm\", \"sentence\": \"SELECT c.CompanyName AS \\\"name\\\", c.CustomerID AS \\\"LambdaOrmParentId\\\" FROM Customers c WHERE c.CustomerID IN ($1) \" }, { \"entity\": \"Orders.details\", \"dialect\": \"MongoDB\", \"source\": \"Ordering\", \"sentence\": \"[{ \\\"$unwind\\\" : \\\"$\\\\\\\"Order Details\\\\\\\"\\\" }, { \\\"$replaceRoot\\\": { \\\"newRoot\\\": \\\"$\\\\\\\"Order Details\\\\\\\"\\\" } }, { \\\"$match\\\" : { \\\"OrderID\\\":{ \\\"$in\\\" :[{{LambdaOrmParentId}}]} } }, { \\\"$project\\\" :{ \\\"_id\\\": 0 , \\\"quantity\\\":\\\"$Quantity\\\", \\\"unitPrice\\\":\\\"$UnitPrice\\\", \\\"__productId\\\":\\\"$ProductID\\\", \\\"LambdaOrmParentId\\\":\\\"$OrderID\\\" }} , { \\\"$project\\\": { \\\"_id\\\": 0 } }]\", \"children\": [ { \"entity\": \"Products\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT p.ProductName AS name, p.CategoryID AS `__categoryId`, p.ProductID AS LambdaOrmParentId FROM Products p WHERE p.ProductID IN (?) \", \"children\": [ { \"entity\": \"Categories\", \"dialect\": \"MySQL\", \"source\": \"Catalog\", \"sentence\": \"SELECT c1.CategoryName AS name, c1.CategoryID AS LambdaOrmParentId FROM Categories c1 WHERE c1.CategoryID IN (?) \" } ] } ] } ] }","title":"Example"},{"location":"cli/Commands/Sync/","text":"Sync Synchronize database/s. Params parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. output -o Generates the queries but does not apply. Example lambdaorm sync -w lab/countries -e lab/countries/.env","title":"Sync"},{"location":"cli/Commands/Sync/#sync","text":"Synchronize database/s.","title":"Sync"},{"location":"cli/Commands/Sync/#params","text":"parameter short describe workspace -w project path. stage -s Name of stage envfile -e Read in a file of environment variables. output -o Generates the queries but does not apply.","title":"Params"},{"location":"cli/Commands/Sync/#example","text":"lambdaorm sync -w lab/countries -e lab/countries/.env","title":"Example"},{"location":"cli/source/","text":"Lambda ORM Lambda ORM Classes BuildCommand ConstraintsCommand DropCommand ExecuteCommand ExportCommand ImportCommand IncorporateCommand InitCommand IntrospectCommand MetadataCommand ModelCommand ParametersCommand PlanCommand PullCommand PushCommand SchemaCommand VersionCommand","title":"Index"},{"location":"cli/source/#lambda-orm","text":"","title":"Lambda ORM"},{"location":"cli/source/#classes","text":"BuildCommand ConstraintsCommand DropCommand ExecuteCommand ExportCommand ImportCommand IncorporateCommand InitCommand IntrospectCommand MetadataCommand ModelCommand ParametersCommand PlanCommand PullCommand PushCommand SchemaCommand VersionCommand","title":"Classes"},{"location":"cli/source/classes/BuildCommand/","text":"Lambda ORM Lambda ORM / BuildCommand Class: BuildCommand Defined in: src/lib/infrastructure/command/build.ts:6 Implements CommandModule Constructors Constructor new BuildCommand (): BuildCommand Returns BuildCommand Properties command command : string = 'build' Defined in: src/lib/infrastructure/command/build.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'build model, repositories' Defined in: src/lib/infrastructure/command/build.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/build.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/build.ts:47 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"BuildCommand"},{"location":"cli/source/classes/BuildCommand/#class-buildcommand","text":"Defined in: src/lib/infrastructure/command/build.ts:6","title":"Class: BuildCommand"},{"location":"cli/source/classes/BuildCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/BuildCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/BuildCommand/#constructor","text":"new BuildCommand (): BuildCommand","title":"Constructor"},{"location":"cli/source/classes/BuildCommand/#returns","text":"BuildCommand","title":"Returns"},{"location":"cli/source/classes/BuildCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/BuildCommand/#command","text":"command : string = 'build' Defined in: src/lib/infrastructure/command/build.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/BuildCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/BuildCommand/#describe","text":"describe : string = 'build model, repositories' Defined in: src/lib/infrastructure/command/build.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/BuildCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/BuildCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/BuildCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/build.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/BuildCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/BuildCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/BuildCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/BuildCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/BuildCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/build.ts:47 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/BuildCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/BuildCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/BuildCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/BuildCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/BuildCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/BuildCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ConstraintsCommand/","text":"Lambda ORM Lambda ORM / ConstraintsCommand Class: ConstraintsCommand Defined in: src/lib/infrastructure/command/constraints.ts:7 Implements CommandModule Constructors Constructor new ConstraintsCommand (): ConstraintsCommand Returns ConstraintsCommand Properties command command : string = 'constraints' Defined in: src/lib/infrastructure/command/constraints.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return constraints associated with the query' Defined in: src/lib/infrastructure/command/constraints.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/constraints.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/constraints.ts:35 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ConstraintsCommand"},{"location":"cli/source/classes/ConstraintsCommand/#class-constraintscommand","text":"Defined in: src/lib/infrastructure/command/constraints.ts:7","title":"Class: ConstraintsCommand"},{"location":"cli/source/classes/ConstraintsCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ConstraintsCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ConstraintsCommand/#constructor","text":"new ConstraintsCommand (): ConstraintsCommand","title":"Constructor"},{"location":"cli/source/classes/ConstraintsCommand/#returns","text":"ConstraintsCommand","title":"Returns"},{"location":"cli/source/classes/ConstraintsCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ConstraintsCommand/#command","text":"command : string = 'constraints' Defined in: src/lib/infrastructure/command/constraints.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ConstraintsCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ConstraintsCommand/#describe","text":"describe : string = 'Return constraints associated with the query' Defined in: src/lib/infrastructure/command/constraints.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ConstraintsCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ConstraintsCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ConstraintsCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/constraints.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ConstraintsCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ConstraintsCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ConstraintsCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ConstraintsCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ConstraintsCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/constraints.ts:35 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ConstraintsCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ConstraintsCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ConstraintsCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ConstraintsCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ConstraintsCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ConstraintsCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/DropCommand/","text":"Lambda ORM Lambda ORM / DropCommand Class: DropCommand Defined in: src/lib/infrastructure/command/drop.ts:7 Implements CommandModule Constructors Constructor new DropCommand (): DropCommand Returns DropCommand Properties command command : string = 'drop' Defined in: src/lib/infrastructure/command/drop.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Removes all database objects but not the database.' Defined in: src/lib/infrastructure/command/drop.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/drop.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/drop.ts:43 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"DropCommand"},{"location":"cli/source/classes/DropCommand/#class-dropcommand","text":"Defined in: src/lib/infrastructure/command/drop.ts:7","title":"Class: DropCommand"},{"location":"cli/source/classes/DropCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/DropCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/DropCommand/#constructor","text":"new DropCommand (): DropCommand","title":"Constructor"},{"location":"cli/source/classes/DropCommand/#returns","text":"DropCommand","title":"Returns"},{"location":"cli/source/classes/DropCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/DropCommand/#command","text":"command : string = 'drop' Defined in: src/lib/infrastructure/command/drop.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/DropCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/DropCommand/#describe","text":"describe : string = 'Removes all database objects but not the database.' Defined in: src/lib/infrastructure/command/drop.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/DropCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/DropCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/DropCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/drop.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/DropCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/DropCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/DropCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/DropCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/DropCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/drop.ts:43 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/DropCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/DropCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/DropCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/DropCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/DropCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/DropCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ExecuteCommand/","text":"Lambda ORM Lambda ORM / ExecuteCommand Class: ExecuteCommand Defined in: src/lib/infrastructure/command/execute.ts:7 Implements CommandModule Constructors Constructor new ExecuteCommand (): ExecuteCommand Returns ExecuteCommand Properties command command : string = 'execute' Defined in: src/lib/infrastructure/command/execute.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Execute an query' Defined in: src/lib/infrastructure/command/execute.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/execute.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/execute.ts:43 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ExecuteCommand"},{"location":"cli/source/classes/ExecuteCommand/#class-executecommand","text":"Defined in: src/lib/infrastructure/command/execute.ts:7","title":"Class: ExecuteCommand"},{"location":"cli/source/classes/ExecuteCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ExecuteCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ExecuteCommand/#constructor","text":"new ExecuteCommand (): ExecuteCommand","title":"Constructor"},{"location":"cli/source/classes/ExecuteCommand/#returns","text":"ExecuteCommand","title":"Returns"},{"location":"cli/source/classes/ExecuteCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ExecuteCommand/#command","text":"command : string = 'execute' Defined in: src/lib/infrastructure/command/execute.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ExecuteCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ExecuteCommand/#describe","text":"describe : string = 'Execute an query' Defined in: src/lib/infrastructure/command/execute.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ExecuteCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ExecuteCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ExecuteCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/execute.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ExecuteCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ExecuteCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ExecuteCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ExecuteCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ExecuteCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/execute.ts:43 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ExecuteCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ExecuteCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ExecuteCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ExecuteCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ExecuteCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ExecuteCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ExportCommand/","text":"Lambda ORM Lambda ORM / ExportCommand Class: ExportCommand Defined in: src/lib/infrastructure/command/export.ts:7 Implements CommandModule Constructors Constructor new ExportCommand (): ExportCommand Returns ExportCommand Properties command command : string = 'export' Defined in: src/lib/infrastructure/command/export.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Export data from a database' Defined in: src/lib/infrastructure/command/export.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/export.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/export.ts:38 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ExportCommand"},{"location":"cli/source/classes/ExportCommand/#class-exportcommand","text":"Defined in: src/lib/infrastructure/command/export.ts:7","title":"Class: ExportCommand"},{"location":"cli/source/classes/ExportCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ExportCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ExportCommand/#constructor","text":"new ExportCommand (): ExportCommand","title":"Constructor"},{"location":"cli/source/classes/ExportCommand/#returns","text":"ExportCommand","title":"Returns"},{"location":"cli/source/classes/ExportCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ExportCommand/#command","text":"command : string = 'export' Defined in: src/lib/infrastructure/command/export.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ExportCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ExportCommand/#describe","text":"describe : string = 'Export data from a database' Defined in: src/lib/infrastructure/command/export.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ExportCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ExportCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ExportCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/export.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ExportCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ExportCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ExportCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ExportCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ExportCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/export.ts:38 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ExportCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ExportCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ExportCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ExportCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ExportCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ExportCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ImportCommand/","text":"Lambda ORM Lambda ORM / ImportCommand Class: ImportCommand Defined in: src/lib/infrastructure/command/import.ts:7 Implements CommandModule Constructors Constructor new ImportCommand (): ImportCommand Returns ImportCommand Properties command command : string = 'import' Defined in: src/lib/infrastructure/command/import.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Import data from file to database' Defined in: src/lib/infrastructure/command/import.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/import.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/import.ts:35 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ImportCommand"},{"location":"cli/source/classes/ImportCommand/#class-importcommand","text":"Defined in: src/lib/infrastructure/command/import.ts:7","title":"Class: ImportCommand"},{"location":"cli/source/classes/ImportCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ImportCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ImportCommand/#constructor","text":"new ImportCommand (): ImportCommand","title":"Constructor"},{"location":"cli/source/classes/ImportCommand/#returns","text":"ImportCommand","title":"Returns"},{"location":"cli/source/classes/ImportCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ImportCommand/#command","text":"command : string = 'import' Defined in: src/lib/infrastructure/command/import.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ImportCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ImportCommand/#describe","text":"describe : string = 'Import data from file to database' Defined in: src/lib/infrastructure/command/import.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ImportCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ImportCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ImportCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/import.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ImportCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ImportCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ImportCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ImportCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ImportCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/import.ts:35 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ImportCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ImportCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ImportCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ImportCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ImportCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ImportCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/IncorporateCommand/","text":"Lambda ORM Lambda ORM / IncorporateCommand Class: IncorporateCommand Defined in: src/lib/infrastructure/command/incorporate.ts:6 Implements CommandModule Constructors Constructor new IncorporateCommand (): IncorporateCommand Returns IncorporateCommand Properties command command : string = 'incorporate' Defined in: src/lib/infrastructure/command/incorporate.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Update schema and push source and import data.' Defined in: src/lib/infrastructure/command/incorporate.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/incorporate.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/incorporate.ts:38 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"IncorporateCommand"},{"location":"cli/source/classes/IncorporateCommand/#class-incorporatecommand","text":"Defined in: src/lib/infrastructure/command/incorporate.ts:6","title":"Class: IncorporateCommand"},{"location":"cli/source/classes/IncorporateCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/IncorporateCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/IncorporateCommand/#constructor","text":"new IncorporateCommand (): IncorporateCommand","title":"Constructor"},{"location":"cli/source/classes/IncorporateCommand/#returns","text":"IncorporateCommand","title":"Returns"},{"location":"cli/source/classes/IncorporateCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/IncorporateCommand/#command","text":"command : string = 'incorporate' Defined in: src/lib/infrastructure/command/incorporate.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/IncorporateCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/IncorporateCommand/#describe","text":"describe : string = 'Update schema and push source and import data.' Defined in: src/lib/infrastructure/command/incorporate.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/IncorporateCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/IncorporateCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/IncorporateCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/incorporate.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/IncorporateCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/IncorporateCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/IncorporateCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/IncorporateCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/IncorporateCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/incorporate.ts:38 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/IncorporateCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/IncorporateCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/IncorporateCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/IncorporateCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/IncorporateCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/IncorporateCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/InitCommand/","text":"Lambda ORM Lambda ORM / InitCommand Class: InitCommand Defined in: src/lib/infrastructure/command/init.ts:5 Implements CommandModule Constructors Constructor new InitCommand (): InitCommand Returns InitCommand Properties command command : string = 'init' Defined in: src/lib/infrastructure/command/init.ts:6 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Generates lambdaorm project structure.' Defined in: src/lib/infrastructure/command/init.ts:7 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/init.ts:9 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/init.ts:38 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"InitCommand"},{"location":"cli/source/classes/InitCommand/#class-initcommand","text":"Defined in: src/lib/infrastructure/command/init.ts:5","title":"Class: InitCommand"},{"location":"cli/source/classes/InitCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/InitCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/InitCommand/#constructor","text":"new InitCommand (): InitCommand","title":"Constructor"},{"location":"cli/source/classes/InitCommand/#returns","text":"InitCommand","title":"Returns"},{"location":"cli/source/classes/InitCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/InitCommand/#command","text":"command : string = 'init' Defined in: src/lib/infrastructure/command/init.ts:6 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/InitCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/InitCommand/#describe","text":"describe : string = 'Generates lambdaorm project structure.' Defined in: src/lib/infrastructure/command/init.ts:7 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/InitCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/InitCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/InitCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/init.ts:9 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/InitCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/InitCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/InitCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/InitCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/InitCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/init.ts:38 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/InitCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/InitCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/InitCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/InitCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/InitCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/InitCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/IntrospectCommand/","text":"Lambda ORM Lambda ORM / IntrospectCommand Class: IntrospectCommand Defined in: src/lib/infrastructure/command/introspect.ts:6 Implements CommandModule Constructors Constructor new IntrospectCommand (): IntrospectCommand Returns IntrospectCommand Properties command command : string = 'introspect' Defined in: src/lib/infrastructure/command/introspect.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Read and analyze data and update schemas' Defined in: src/lib/infrastructure/command/introspect.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/introspect.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/introspect.ts:38 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"IntrospectCommand"},{"location":"cli/source/classes/IntrospectCommand/#class-introspectcommand","text":"Defined in: src/lib/infrastructure/command/introspect.ts:6","title":"Class: IntrospectCommand"},{"location":"cli/source/classes/IntrospectCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/IntrospectCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/IntrospectCommand/#constructor","text":"new IntrospectCommand (): IntrospectCommand","title":"Constructor"},{"location":"cli/source/classes/IntrospectCommand/#returns","text":"IntrospectCommand","title":"Returns"},{"location":"cli/source/classes/IntrospectCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/IntrospectCommand/#command","text":"command : string = 'introspect' Defined in: src/lib/infrastructure/command/introspect.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/IntrospectCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/IntrospectCommand/#describe","text":"describe : string = 'Read and analyze data and update schemas' Defined in: src/lib/infrastructure/command/introspect.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/IntrospectCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/IntrospectCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/IntrospectCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/introspect.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/IntrospectCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/IntrospectCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/IntrospectCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/IntrospectCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/IntrospectCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/introspect.ts:38 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/IntrospectCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/IntrospectCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/IntrospectCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/IntrospectCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/IntrospectCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/IntrospectCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/MetadataCommand/","text":"Lambda ORM Lambda ORM / MetadataCommand Class: MetadataCommand Defined in: src/lib/infrastructure/command/metadata.ts:7 Implements CommandModule Constructors Constructor new MetadataCommand (): MetadataCommand Returns MetadataCommand Properties command command : string = 'metadata' Defined in: src/lib/infrastructure/command/metadata.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return metadata associated with the query' Defined in: src/lib/infrastructure/command/metadata.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/metadata.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/metadata.ts:35 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"MetadataCommand"},{"location":"cli/source/classes/MetadataCommand/#class-metadatacommand","text":"Defined in: src/lib/infrastructure/command/metadata.ts:7","title":"Class: MetadataCommand"},{"location":"cli/source/classes/MetadataCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/MetadataCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/MetadataCommand/#constructor","text":"new MetadataCommand (): MetadataCommand","title":"Constructor"},{"location":"cli/source/classes/MetadataCommand/#returns","text":"MetadataCommand","title":"Returns"},{"location":"cli/source/classes/MetadataCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/MetadataCommand/#command","text":"command : string = 'metadata' Defined in: src/lib/infrastructure/command/metadata.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/MetadataCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/MetadataCommand/#describe","text":"describe : string = 'Return metadata associated with the query' Defined in: src/lib/infrastructure/command/metadata.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/MetadataCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/MetadataCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/MetadataCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/metadata.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/MetadataCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/MetadataCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/MetadataCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/MetadataCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/MetadataCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/metadata.ts:35 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/MetadataCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/MetadataCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/MetadataCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/MetadataCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/MetadataCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/MetadataCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ModelCommand/","text":"Lambda ORM Lambda ORM / ModelCommand Class: ModelCommand Defined in: src/lib/infrastructure/command/model.ts:7 Implements CommandModule Constructors Constructor new ModelCommand (): ModelCommand Returns ModelCommand Properties command command : string = 'model' Defined in: src/lib/infrastructure/command/model.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return model that will be returned in the query execution' Defined in: src/lib/infrastructure/command/model.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/model.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/model.ts:35 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ModelCommand"},{"location":"cli/source/classes/ModelCommand/#class-modelcommand","text":"Defined in: src/lib/infrastructure/command/model.ts:7","title":"Class: ModelCommand"},{"location":"cli/source/classes/ModelCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ModelCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ModelCommand/#constructor","text":"new ModelCommand (): ModelCommand","title":"Constructor"},{"location":"cli/source/classes/ModelCommand/#returns","text":"ModelCommand","title":"Returns"},{"location":"cli/source/classes/ModelCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ModelCommand/#command","text":"command : string = 'model' Defined in: src/lib/infrastructure/command/model.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ModelCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ModelCommand/#describe","text":"describe : string = 'Return model that will be returned in the query execution' Defined in: src/lib/infrastructure/command/model.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ModelCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ModelCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ModelCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/model.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ModelCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ModelCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ModelCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ModelCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ModelCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/model.ts:35 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ModelCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ModelCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ModelCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ModelCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ModelCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ModelCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/ParametersCommand/","text":"Lambda ORM Lambda ORM / ParametersCommand Class: ParametersCommand Defined in: src/lib/infrastructure/command/parameters.ts:7 Implements CommandModule Constructors Constructor new ParametersCommand (): ParametersCommand Returns ParametersCommand Properties command command : string = 'parameters' Defined in: src/lib/infrastructure/command/parameters.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return parameters associated with the query' Defined in: src/lib/infrastructure/command/parameters.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/parameters.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/parameters.ts:35 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"ParametersCommand"},{"location":"cli/source/classes/ParametersCommand/#class-parameterscommand","text":"Defined in: src/lib/infrastructure/command/parameters.ts:7","title":"Class: ParametersCommand"},{"location":"cli/source/classes/ParametersCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/ParametersCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/ParametersCommand/#constructor","text":"new ParametersCommand (): ParametersCommand","title":"Constructor"},{"location":"cli/source/classes/ParametersCommand/#returns","text":"ParametersCommand","title":"Returns"},{"location":"cli/source/classes/ParametersCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/ParametersCommand/#command","text":"command : string = 'parameters' Defined in: src/lib/infrastructure/command/parameters.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/ParametersCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/ParametersCommand/#describe","text":"describe : string = 'Return parameters associated with the query' Defined in: src/lib/infrastructure/command/parameters.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/ParametersCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/ParametersCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/ParametersCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/parameters.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/ParametersCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/ParametersCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/ParametersCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/ParametersCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/ParametersCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/parameters.ts:35 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/ParametersCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/ParametersCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/ParametersCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/ParametersCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/ParametersCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/ParametersCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/PlanCommand/","text":"Lambda ORM Lambda ORM / PlanCommand Class: PlanCommand Defined in: src/lib/infrastructure/command/plan.ts:7 Implements CommandModule Constructors Constructor new PlanCommand (): PlanCommand Returns PlanCommand Properties command command : string = 'plan' Defined in: src/lib/infrastructure/command/plan.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return plan execution of query' Defined in: src/lib/infrastructure/command/plan.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/plan.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/plan.ts:39 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"PlanCommand"},{"location":"cli/source/classes/PlanCommand/#class-plancommand","text":"Defined in: src/lib/infrastructure/command/plan.ts:7","title":"Class: PlanCommand"},{"location":"cli/source/classes/PlanCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/PlanCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/PlanCommand/#constructor","text":"new PlanCommand (): PlanCommand","title":"Constructor"},{"location":"cli/source/classes/PlanCommand/#returns","text":"PlanCommand","title":"Returns"},{"location":"cli/source/classes/PlanCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/PlanCommand/#command","text":"command : string = 'plan' Defined in: src/lib/infrastructure/command/plan.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/PlanCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/PlanCommand/#describe","text":"describe : string = 'Return plan execution of query' Defined in: src/lib/infrastructure/command/plan.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/PlanCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/PlanCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/PlanCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object & object > Defined in: src/lib/infrastructure/command/plan.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/PlanCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/PlanCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/PlanCommand/#returns_1","text":"Argv \\< object & object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/PlanCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/PlanCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/plan.ts:39 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/PlanCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/PlanCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/PlanCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/PlanCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/PlanCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/PlanCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/PullCommand/","text":"Lambda ORM Lambda ORM / PullCommand Class: PullCommand Defined in: src/lib/infrastructure/command/pull.ts:6 Implements CommandModule Constructors Constructor new PullCommand (): PullCommand Returns PullCommand Properties command command : string = 'pull' Defined in: src/lib/infrastructure/command/pull.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Pull the stage with the sources' Defined in: src/lib/infrastructure/command/pull.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object > Defined in: src/lib/infrastructure/command/pull.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/pull.ts:30 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"PullCommand"},{"location":"cli/source/classes/PullCommand/#class-pullcommand","text":"Defined in: src/lib/infrastructure/command/pull.ts:6","title":"Class: PullCommand"},{"location":"cli/source/classes/PullCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/PullCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/PullCommand/#constructor","text":"new PullCommand (): PullCommand","title":"Constructor"},{"location":"cli/source/classes/PullCommand/#returns","text":"PullCommand","title":"Returns"},{"location":"cli/source/classes/PullCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/PullCommand/#command","text":"command : string = 'pull' Defined in: src/lib/infrastructure/command/pull.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/PullCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/PullCommand/#describe","text":"describe : string = 'Pull the stage with the sources' Defined in: src/lib/infrastructure/command/pull.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/PullCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/PullCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/PullCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object > Defined in: src/lib/infrastructure/command/pull.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/PullCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/PullCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/PullCommand/#returns_1","text":"Argv \\< object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/PullCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/PullCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/pull.ts:30 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/PullCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/PullCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/PullCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/PullCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/PullCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/PullCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/PushCommand/","text":"Lambda ORM Lambda ORM / PushCommand Class: PushCommand Defined in: src/lib/infrastructure/command/push.ts:7 Implements CommandModule Constructors Constructor new PushCommand (): PushCommand Returns PushCommand Properties command command : string = 'push' Defined in: src/lib/infrastructure/command/push.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Synchronize database/s.' Defined in: src/lib/infrastructure/command/push.ts:9 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/push.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/push.ts:34 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"PushCommand"},{"location":"cli/source/classes/PushCommand/#class-pushcommand","text":"Defined in: src/lib/infrastructure/command/push.ts:7","title":"Class: PushCommand"},{"location":"cli/source/classes/PushCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/PushCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/PushCommand/#constructor","text":"new PushCommand (): PushCommand","title":"Constructor"},{"location":"cli/source/classes/PushCommand/#returns","text":"PushCommand","title":"Returns"},{"location":"cli/source/classes/PushCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/PushCommand/#command","text":"command : string = 'push' Defined in: src/lib/infrastructure/command/push.ts:8 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/PushCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/PushCommand/#describe","text":"describe : string = 'Synchronize database/s.' Defined in: src/lib/infrastructure/command/push.ts:9 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/PushCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/PushCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/PushCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/push.ts:11 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/PushCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/PushCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/PushCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/PushCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/PushCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/push.ts:34 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/PushCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/PushCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/PushCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/PushCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/PushCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/PushCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/SchemaCommand/","text":"Lambda ORM Lambda ORM / SchemaCommand Class: SchemaCommand Defined in: src/lib/infrastructure/command/schema.ts:6 Implements CommandModule Constructors Constructor new SchemaCommand (): SchemaCommand Returns SchemaCommand Properties command command : string = 'schema' Defined in: src/lib/infrastructure/command/schema.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Return schema information' Defined in: src/lib/infrastructure/command/schema.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/schema.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object & object & object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/schema.ts:34 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"SchemaCommand"},{"location":"cli/source/classes/SchemaCommand/#class-schemacommand","text":"Defined in: src/lib/infrastructure/command/schema.ts:6","title":"Class: SchemaCommand"},{"location":"cli/source/classes/SchemaCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/SchemaCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/SchemaCommand/#constructor","text":"new SchemaCommand (): SchemaCommand","title":"Constructor"},{"location":"cli/source/classes/SchemaCommand/#returns","text":"SchemaCommand","title":"Returns"},{"location":"cli/source/classes/SchemaCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/SchemaCommand/#command","text":"command : string = 'schema' Defined in: src/lib/infrastructure/command/schema.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/SchemaCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/SchemaCommand/#describe","text":"describe : string = 'Return schema information' Defined in: src/lib/infrastructure/command/schema.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/SchemaCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/SchemaCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/SchemaCommand/#builder","text":"builder ( args ): Argv \\< object & object & object & object & object > Defined in: src/lib/infrastructure/command/schema.ts:10 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/SchemaCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/SchemaCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/SchemaCommand/#returns_1","text":"Argv \\< object & object & object & object & object >","title":"Returns"},{"location":"cli/source/classes/SchemaCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/SchemaCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/schema.ts:34 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/SchemaCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/SchemaCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/SchemaCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/SchemaCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/SchemaCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/SchemaCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"cli/source/classes/VersionCommand/","text":"Lambda ORM Lambda ORM / VersionCommand Class: VersionCommand Defined in: src/lib/infrastructure/command/version.ts:6 Implements CommandModule Constructors Constructor new VersionCommand (): VersionCommand Returns VersionCommand Properties command command : string = 'version' Defined in: src/lib/infrastructure/command/version.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args Implementation of CommandModule.command describe describe : string = 'Prints lambdaorm version this project uses.' Defined in: src/lib/infrastructure/command/version.ts:8 string used as the description for the command in help text, use false for a hidden command Implementation of CommandModule.describe Methods builder() builder ( args ): Argv \\< object & object > Defined in: src/lib/infrastructure/command/version.ts:9 object declaring the options the command accepts, or a function accepting and returning a yargs instance Parameters args Argv Returns Argv \\< object & object > Implementation of CommandModule.builder handler() handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/version.ts:21 a function which will be passed the parsed argv. Parameters args _ ( string | number )[] Non-option arguments $0 string The script name or node command Returns Promise \\< void > Implementation of CommandModule.handler","title":"VersionCommand"},{"location":"cli/source/classes/VersionCommand/#class-versioncommand","text":"Defined in: src/lib/infrastructure/command/version.ts:6","title":"Class: VersionCommand"},{"location":"cli/source/classes/VersionCommand/#implements","text":"CommandModule","title":"Implements"},{"location":"cli/source/classes/VersionCommand/#constructors","text":"","title":"Constructors"},{"location":"cli/source/classes/VersionCommand/#constructor","text":"new VersionCommand (): VersionCommand","title":"Constructor"},{"location":"cli/source/classes/VersionCommand/#returns","text":"VersionCommand","title":"Returns"},{"location":"cli/source/classes/VersionCommand/#properties","text":"","title":"Properties"},{"location":"cli/source/classes/VersionCommand/#command","text":"command : string = 'version' Defined in: src/lib/infrastructure/command/version.ts:7 string (or array of strings) that executes this command when given on the command line, first string may contain positional args","title":"command"},{"location":"cli/source/classes/VersionCommand/#implementation-of","text":"CommandModule.command","title":"Implementation of"},{"location":"cli/source/classes/VersionCommand/#describe","text":"describe : string = 'Prints lambdaorm version this project uses.' Defined in: src/lib/infrastructure/command/version.ts:8 string used as the description for the command in help text, use false for a hidden command","title":"describe"},{"location":"cli/source/classes/VersionCommand/#implementation-of_1","text":"CommandModule.describe","title":"Implementation of"},{"location":"cli/source/classes/VersionCommand/#methods","text":"","title":"Methods"},{"location":"cli/source/classes/VersionCommand/#builder","text":"builder ( args ): Argv \\< object & object > Defined in: src/lib/infrastructure/command/version.ts:9 object declaring the options the command accepts, or a function accepting and returning a yargs instance","title":"builder()"},{"location":"cli/source/classes/VersionCommand/#parameters","text":"","title":"Parameters"},{"location":"cli/source/classes/VersionCommand/#args","text":"Argv","title":"args"},{"location":"cli/source/classes/VersionCommand/#returns_1","text":"Argv \\< object & object >","title":"Returns"},{"location":"cli/source/classes/VersionCommand/#implementation-of_2","text":"CommandModule.builder","title":"Implementation of"},{"location":"cli/source/classes/VersionCommand/#handler","text":"handler ( args ): Promise \\< void > Defined in: src/lib/infrastructure/command/version.ts:21 a function which will be passed the parsed argv.","title":"handler()"},{"location":"cli/source/classes/VersionCommand/#parameters_1","text":"","title":"Parameters"},{"location":"cli/source/classes/VersionCommand/#args_1","text":"","title":"args"},{"location":"cli/source/classes/VersionCommand/#_","text":"( string | number )[] Non-option arguments","title":"_"},{"location":"cli/source/classes/VersionCommand/#0","text":"string The script name or node command","title":"$0"},{"location":"cli/source/classes/VersionCommand/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"cli/source/classes/VersionCommand/#implementation-of_3","text":"CommandModule.handler","title":"Implementation of"},{"location":"queries/BulkInsert/","text":"BulkInsert BulkInsert is a database operation that allows inserting multiple records into a table at once, rather than inserting them one by one. This operation is particularly useful when dealing with large datasets or when performance optimization is needed. Advantages of BulkInsert: Improved Performance : BulkInsert significantly reduces the number of round trips between the application and the database, resulting in improved performance. Instead of executing multiple individual insert statements, a single bulk insert statement is executed, which reduces overhead and latency. Reduced Database Load : By minimizing the number of database transactions, BulkInsert helps in reducing the load on the database server, which can improve overall system performance, especially in high-traffic environments. Atomicity : BulkInsert operations are typically atomic, meaning that either all records are inserted successfully, or none are. This ensures data integrity and consistency in the database. Simplicity : Using BulkInsert simplifies the application code by reducing the number of database interactions required. This leads to cleaner and more maintainable code. Scalability : BulkInsert is well-suited for handling large datasets, making it scalable for applications that need to process and insert a significant amount of data efficiently. Overall, BulkInsert is a powerful database operation that can significantly improve the performance and efficiency of data insertion tasks in applications dealing with large volumes of data. BulkInsert in one entity Lambda: // Bulk insert operation for Categories entity Categories.bulkInsert() SQL Result: -- Bulk insertion into Categories table with provided values INSERT INTO Categories(CategoryName,Description) VALUES ? BulkInsert with include related entity Lambda: // Bulk insert operation for Orders entity and including details Orders.bulkInsert().include(p => p.details) SQL Result: -- Bulk insertion into Orders table with provided values INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES ? -- Bulk insertion into Order Details table with provided values INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES ? Code example import { orm } from '../../lib' import { Categories } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const categories = [ { name: 'Beverages4', description: 'Soft drinks, coffees, teas, beers, and ales', id: 12 }, { name: 'Condiments4', description: 'Sweet and savory sauces, relishes, spreads, and seasonings', id: 13 } ] // Define a query for bulk insert operation for categories const query = () => Categories.bulkInsert() // Execute the query using the ORM, passing the query function and the categories data const result = await orm.execute(query, categories) // return ids of records inserted console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"BulkInsert"},{"location":"queries/BulkInsert/#bulkinsert","text":"BulkInsert is a database operation that allows inserting multiple records into a table at once, rather than inserting them one by one. This operation is particularly useful when dealing with large datasets or when performance optimization is needed.","title":"BulkInsert"},{"location":"queries/BulkInsert/#advantages-of-bulkinsert","text":"Improved Performance : BulkInsert significantly reduces the number of round trips between the application and the database, resulting in improved performance. Instead of executing multiple individual insert statements, a single bulk insert statement is executed, which reduces overhead and latency. Reduced Database Load : By minimizing the number of database transactions, BulkInsert helps in reducing the load on the database server, which can improve overall system performance, especially in high-traffic environments. Atomicity : BulkInsert operations are typically atomic, meaning that either all records are inserted successfully, or none are. This ensures data integrity and consistency in the database. Simplicity : Using BulkInsert simplifies the application code by reducing the number of database interactions required. This leads to cleaner and more maintainable code. Scalability : BulkInsert is well-suited for handling large datasets, making it scalable for applications that need to process and insert a significant amount of data efficiently. Overall, BulkInsert is a powerful database operation that can significantly improve the performance and efficiency of data insertion tasks in applications dealing with large volumes of data.","title":"Advantages of BulkInsert:"},{"location":"queries/BulkInsert/#bulkinsert-in-one-entity","text":"Lambda: // Bulk insert operation for Categories entity Categories.bulkInsert() SQL Result: -- Bulk insertion into Categories table with provided values INSERT INTO Categories(CategoryName,Description) VALUES ?","title":"BulkInsert in one entity"},{"location":"queries/BulkInsert/#bulkinsert-with-include-related-entity","text":"Lambda: // Bulk insert operation for Orders entity and including details Orders.bulkInsert().include(p => p.details) SQL Result: -- Bulk insertion into Orders table with provided values INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES ? -- Bulk insertion into Order Details table with provided values INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES ?","title":"BulkInsert with include related entity"},{"location":"queries/BulkInsert/#code-example","text":"import { orm } from '../../lib' import { Categories } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const categories = [ { name: 'Beverages4', description: 'Soft drinks, coffees, teas, beers, and ales', id: 12 }, { name: 'Condiments4', description: 'Sweet and savory sauces, relishes, spreads, and seasonings', id: 13 } ] // Define a query for bulk insert operation for categories const query = () => Categories.bulkInsert() // Execute the query using the ORM, passing the query function and the categories data const result = await orm.execute(query, categories) // return ids of records inserted console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/Delete/","text":"Delete Delete record for filter Lambda: // Deleting records from OrderDetails where orderId matches the provided id OrderDetails.delete().filter(p => p.orderId === id) SQL Result: -- Deleting records from Order Details where OrderID matches the provided id DELETE o FROM `Order Details` AS o WHERE o.OrderID = ? Delete with default filter In the case that delete() is used and no filter is specified, it is assumed that it will be filtered by the primary key Lambda: // Deleting records from OrderDetails filtered by the primary key (OrderID) OrderDetails.delete() SQL Result: -- Deleting records from Order Details where OrderID matches the primary key DELETE o FROM `Order Details` AS o WHERE o.OrderID = ? Delete all records If you want to delete all the records of an entity, you should use deleteAll instead of delete. This is done to avoid deleting all records by mistake. Lambda: // Deleting all records from OrderDetails OrderDetails.deleteAll() SQL Result: -- Deleting all records from Order Details DELETE o FROM `Order Details` AS o Delete entity an related entity Lambda: // Deleting orders and their details Orders.delete().include(p => p.details) SQL Result: -- Deleting orders where OrderID matches the provided id DELETE o FROM Orders AS o WHERE o.OrderID = ? -- Deleting order details where OrderID and ProductID match the provided ids DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?) Code example import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { id: 1, customerId: 'ALFKI', employeeId: 6, orderDate: '1997-08-24T22:00:00.000Z', requiredDate: '1997-09-21T22:00:00.000Z', shippedDate: '1997-09-01T22:00:00.000Z', shipViaId: 1, freight: '29.4600', name: 'Alfreds Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 1, productId: 28, unitPrice: '45.6000', quantity: '15.0000', discount: '0.0000' }, { orderId: 1, productId: 39, unitPrice: '18.0000', quantity: '21.0000', discount: '0.0000' } ] } // Defining a query to delete orders and include details const query = () => Orders.delete().include(p => p.details) // Executing the query using the ORM with the specified order parameter await orm.execute(query, order) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Delete"},{"location":"queries/Delete/#delete","text":"","title":"Delete"},{"location":"queries/Delete/#delete-record-for-filter","text":"Lambda: // Deleting records from OrderDetails where orderId matches the provided id OrderDetails.delete().filter(p => p.orderId === id) SQL Result: -- Deleting records from Order Details where OrderID matches the provided id DELETE o FROM `Order Details` AS o WHERE o.OrderID = ?","title":"Delete record for filter"},{"location":"queries/Delete/#delete-with-default-filter","text":"In the case that delete() is used and no filter is specified, it is assumed that it will be filtered by the primary key Lambda: // Deleting records from OrderDetails filtered by the primary key (OrderID) OrderDetails.delete() SQL Result: -- Deleting records from Order Details where OrderID matches the primary key DELETE o FROM `Order Details` AS o WHERE o.OrderID = ?","title":"Delete with default filter"},{"location":"queries/Delete/#delete-all-records","text":"If you want to delete all the records of an entity, you should use deleteAll instead of delete. This is done to avoid deleting all records by mistake. Lambda: // Deleting all records from OrderDetails OrderDetails.deleteAll() SQL Result: -- Deleting all records from Order Details DELETE o FROM `Order Details` AS o","title":"Delete all records"},{"location":"queries/Delete/#delete-entity-an-related-entity","text":"Lambda: // Deleting orders and their details Orders.delete().include(p => p.details) SQL Result: -- Deleting orders where OrderID matches the provided id DELETE o FROM Orders AS o WHERE o.OrderID = ? -- Deleting order details where OrderID and ProductID match the provided ids DELETE o1 FROM `Order Details` AS o1 WHERE (o1.OrderID = ? AND o1.ProductID = ?)","title":"Delete entity an related entity"},{"location":"queries/Delete/#code-example","text":"import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { id: 1, customerId: 'ALFKI', employeeId: 6, orderDate: '1997-08-24T22:00:00.000Z', requiredDate: '1997-09-21T22:00:00.000Z', shippedDate: '1997-09-01T22:00:00.000Z', shipViaId: 1, freight: '29.4600', name: 'Alfreds Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 1, productId: 28, unitPrice: '45.6000', quantity: '15.0000', discount: '0.0000' }, { orderId: 1, productId: 39, unitPrice: '18.0000', quantity: '21.0000', discount: '0.0000' } ] } // Defining a query to delete orders and include details const query = () => Orders.delete().include(p => p.details) // Executing the query using the ORM with the specified order parameter await orm.execute(query, order) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/Expression/","text":"Lambda expressions The lambda expressions are written based on the programming language itself, referring to the business model, completely abstracting from the database language and its structure. Lambda: // Select states where the first character of the name is 'A' States.filter(p => upper(substring(p.name, 0, 1)) == \"A\") // Map each selected state to an object with country and state properties .map(p => { country: p.country.name, state: p.name }) // Sort the results first by country in ascending order and then by state in descending order .sort(p => [p.country, desc(p.state)]) // Paginate the results to show the first page of 10 records .page(1, 10) SQL Result: -- Select the country name and state name SELECT c.NAME AS country, s.NAME AS \"state\" -- From the states table with alias 's' FROM TBL_STATES s -- Inner join with the countries table with alias 'c' on the country ID INNER JOIN TBL_COUNTRIES c ON c.ID = o.CountryID -- Filter states where the first character of the name is 'A' WHERE UPPER(SUBSTR(s.NAME, 0, 1)) = 'A' -- Order the results first by country name in ascending order and then by state name in descending order ORDER BY country, \"state\" DESC -- Apply pagination to skip the first row and fetch the next 10 rows OFFSET 1 ROWS FETCH NEXT 10 ROWS ONLY Advantage: Use of the same programming language. It is not necessary to learn a new language. Easy to write and understand expressions. Use of the intellisense offered by the IDE to write the expressions. Avoid syntax errors. Query Expressions: Method Description SQL Equivalent filter To filter the records. WHERE examples having To filter on groupings. HAVING examples map To specify the fields to return. SELECT examples distinct to specify the fields to return by sending duplicate records. examples first returns the first record SELECT + ORDER BY + LIMIT examples last returns the last record SELECT + ORDER BY DESC + LIMIT examples sort To specify the order in which the records are returned. ORDER BY examples page To paginate. LIMIT (MySQL) examples include To get records of related entities examples insert To insert records INSERT examples update To update records always including a filter UPDATE with WHERE examples updateAll to be able to update all the records of an entity UPDATE without WHERE examples delete To delete records always including a filter DELETE with WHERE examples deleteAll To be able to delete all records of an entity DELETE without WHERE examples bulkInsert to insert records in bulk INSERT examples There are no methods for the INNER JOIN clause since it is deduced when navigating through the relations of a property. There are no methods for the GROUP BY clause since this is deduced when grouping methods are used. Operators The operators used are the same as those of javascript. Category Operators Arithmetic -, +, , /, *, //, % more info Bitwise ~,&,^,<<,>> more info Comparison ==, ===, !=, !==, >, <, >=, <= more info Logical !, && more info Array [] more info Functions Category functions Numeric abs, ceil, cos, exp, ln, log, remainder, round, sign, sin, tan, trunc... more info String chr, lower, lpad, ltrim, replace, rpad, rtrim, substr, trim, upper, concat... more info Datetime curtime, today, now, time, date, dateTime, year, month, day, weekday, hours... more info Convert toString, toJson, toNumber more info Nullable nvl, nvl2, isNull, isNotNull more info General as, distinct more info Sort asc, desc more info Condition between, includes more info Group avg, count, first, last, max, min, sum more info Metadata user, source more info","title":"Lambda expressions"},{"location":"queries/Expression/#lambda-expressions","text":"The lambda expressions are written based on the programming language itself, referring to the business model, completely abstracting from the database language and its structure. Lambda: // Select states where the first character of the name is 'A' States.filter(p => upper(substring(p.name, 0, 1)) == \"A\") // Map each selected state to an object with country and state properties .map(p => { country: p.country.name, state: p.name }) // Sort the results first by country in ascending order and then by state in descending order .sort(p => [p.country, desc(p.state)]) // Paginate the results to show the first page of 10 records .page(1, 10) SQL Result: -- Select the country name and state name SELECT c.NAME AS country, s.NAME AS \"state\" -- From the states table with alias 's' FROM TBL_STATES s -- Inner join with the countries table with alias 'c' on the country ID INNER JOIN TBL_COUNTRIES c ON c.ID = o.CountryID -- Filter states where the first character of the name is 'A' WHERE UPPER(SUBSTR(s.NAME, 0, 1)) = 'A' -- Order the results first by country name in ascending order and then by state name in descending order ORDER BY country, \"state\" DESC -- Apply pagination to skip the first row and fetch the next 10 rows OFFSET 1 ROWS FETCH NEXT 10 ROWS ONLY","title":"Lambda expressions"},{"location":"queries/Expression/#advantage","text":"Use of the same programming language. It is not necessary to learn a new language. Easy to write and understand expressions. Use of the intellisense offered by the IDE to write the expressions. Avoid syntax errors.","title":"Advantage:"},{"location":"queries/Expression/#query-expressions","text":"Method Description SQL Equivalent filter To filter the records. WHERE examples having To filter on groupings. HAVING examples map To specify the fields to return. SELECT examples distinct to specify the fields to return by sending duplicate records. examples first returns the first record SELECT + ORDER BY + LIMIT examples last returns the last record SELECT + ORDER BY DESC + LIMIT examples sort To specify the order in which the records are returned. ORDER BY examples page To paginate. LIMIT (MySQL) examples include To get records of related entities examples insert To insert records INSERT examples update To update records always including a filter UPDATE with WHERE examples updateAll to be able to update all the records of an entity UPDATE without WHERE examples delete To delete records always including a filter DELETE with WHERE examples deleteAll To be able to delete all records of an entity DELETE without WHERE examples bulkInsert to insert records in bulk INSERT examples There are no methods for the INNER JOIN clause since it is deduced when navigating through the relations of a property. There are no methods for the GROUP BY clause since this is deduced when grouping methods are used.","title":"Query Expressions:"},{"location":"queries/Expression/#operators","text":"The operators used are the same as those of javascript. Category Operators Arithmetic -, +, , /, *, //, % more info Bitwise ~,&,^,<<,>> more info Comparison ==, ===, !=, !==, >, <, >=, <= more info Logical !, && more info Array [] more info","title":"Operators"},{"location":"queries/Expression/#functions","text":"Category functions Numeric abs, ceil, cos, exp, ln, log, remainder, round, sign, sin, tan, trunc... more info String chr, lower, lpad, ltrim, replace, rpad, rtrim, substr, trim, upper, concat... more info Datetime curtime, today, now, time, date, dateTime, year, month, day, weekday, hours... more info Convert toString, toJson, toNumber more info Nullable nvl, nvl2, isNull, isNotNull more info General as, distinct more info Sort asc, desc more info Condition between, includes more info Group avg, count, first, last, max, min, sum more info Metadata user, source more info","title":"Functions"},{"location":"queries/Grouping/","text":"Grouping In the case of grouping, it is not necessary to define it explicitly, since it is deduced when one of the grouping functions is used. \\ The fields by which they are grouped are deduced by which they are contained with some of the grouping functions. Grouping Functions Function Description avg Calculates the average of the specified columns in a set of rows count Calculating the number of rows in a set. first Returns the first value of the selected column last Returns the last value of the selected column. max Calculating the maximum. min Calculating the minimum. sum Calculating the sum. Grouping by sum with order and filter Filters order details based on customer name Maps the results to get the order date and the total calculated as the sum of (quantity * unit price) Orders the results in descending order by total Lambda: OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) SQL Result: -- Selects order date and calculates the sum of (quantity * unit price) as 'total' -- Performs inner join with Orders and Customers table to get additional customer information -- Filters the results based on customer company name -- Groups the results by order date -- Orders the results in descending order by total SELECT o1.OrderDate AS `order`, SUM(o.Quantity * o.UnitPrice) AS `total` FROM `Order Details` o INNER JOIN Orders o1 ON o1.OrderID = o.OrderID INNER JOIN Customers c ON c.CustomerID = o1.CustomerID WHERE c.CompanyName = ? GROUP BY o1.OrderDate ORDER BY `total` desc Grouping and Having Filters products based on price and supplier country, or stock quantity Filters the results based on maximum price Maps the results to get the product category and maximum price Sorts the results in descending order by maximum price Lambda: Products .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) SQL Result: -- Selects product category and calculates the maximum price as 'largestPrice' -- Performs inner join with Suppliers and Categories tables to get additional product information -- Filters the results based on price and supplier country, or stock quantity -- Groups the results by product category -- Filters the results based on maximum price -- Orders the results in descending order by maximum price SELECT c.CategoryName AS `category`, MAX(p.UnitPrice) AS `largestPrice` FROM Products p INNER JOIN Suppliers s ON s.SupplierID = p.SupplierID INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE ((p.UnitPrice > 5 AND s.Country = ?) OR p.UnitsInStock < 3) GROUP BY c.CategoryName HAVING MAX(p.UnitPrice) > 50 ORDER BY `largestPrice` desc Code example import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts a country parameter // Filtering products based on price and supplier country, or stock quantity // Filtering the results based on maximum price // Mapping the results to get the product category and maximum price // Sorting the results in descending order by maximum price const query = (country:string) => Products .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) const result = await orm.execute(query, {country:'ARG'}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Grouping"},{"location":"queries/Grouping/#grouping","text":"In the case of grouping, it is not necessary to define it explicitly, since it is deduced when one of the grouping functions is used. \\ The fields by which they are grouped are deduced by which they are contained with some of the grouping functions.","title":"Grouping"},{"location":"queries/Grouping/#grouping-functions","text":"Function Description avg Calculates the average of the specified columns in a set of rows count Calculating the number of rows in a set. first Returns the first value of the selected column last Returns the last value of the selected column. max Calculating the maximum. min Calculating the minimum. sum Calculating the sum.","title":"Grouping Functions"},{"location":"queries/Grouping/#grouping-by-sum-with-order-and-filter","text":"Filters order details based on customer name Maps the results to get the order date and the total calculated as the sum of (quantity * unit price) Orders the results in descending order by total Lambda: OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) SQL Result: -- Selects order date and calculates the sum of (quantity * unit price) as 'total' -- Performs inner join with Orders and Customers table to get additional customer information -- Filters the results based on customer company name -- Groups the results by order date -- Orders the results in descending order by total SELECT o1.OrderDate AS `order`, SUM(o.Quantity * o.UnitPrice) AS `total` FROM `Order Details` o INNER JOIN Orders o1 ON o1.OrderID = o.OrderID INNER JOIN Customers c ON c.CustomerID = o1.CustomerID WHERE c.CompanyName = ? GROUP BY o1.OrderDate ORDER BY `total` desc","title":"Grouping by sum with order and filter"},{"location":"queries/Grouping/#grouping-and-having","text":"Filters products based on price and supplier country, or stock quantity Filters the results based on maximum price Maps the results to get the product category and maximum price Sorts the results in descending order by maximum price Lambda: Products .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) SQL Result: -- Selects product category and calculates the maximum price as 'largestPrice' -- Performs inner join with Suppliers and Categories tables to get additional product information -- Filters the results based on price and supplier country, or stock quantity -- Groups the results by product category -- Filters the results based on maximum price -- Orders the results in descending order by maximum price SELECT c.CategoryName AS `category`, MAX(p.UnitPrice) AS `largestPrice` FROM Products p INNER JOIN Suppliers s ON s.SupplierID = p.SupplierID INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE ((p.UnitPrice > 5 AND s.Country = ?) OR p.UnitsInStock < 3) GROUP BY c.CategoryName HAVING MAX(p.UnitPrice) > 50 ORDER BY `largestPrice` desc","title":"Grouping and Having"},{"location":"queries/Grouping/#code-example","text":"import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts a country parameter // Filtering products based on price and supplier country, or stock quantity // Filtering the results based on maximum price // Mapping the results to get the product category and maximum price // Sorting the results in descending order by maximum price const query = (country:string) => Products .filter(p => (p.price > 5 && p.supplier.country == country) || (p.inStock < 3)) .having(p => max(p.price) > 50) .map(p => ({ category: p.category.name, largestPrice: max(p.price) })) .sort(p => desc(p.largestPrice)) const result = await orm.execute(query, {country:'ARG'}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/Include/","text":"Include \u03bbORM includes the include method to load related entities, both for OneToMany, manyToOne, and oneToOne relationships. We can also apply filters or bring us some fields from related entities. For each include, a statement is executed that fetches all the necessary records, then the objects with relationships are assembled in memory. In this way, multiple executions are avoided, considerably improving performance. Includes can be used in selects, inserts, updates, deletes, and bulkInserts. Include relation OneToMany In this example the data of an Order and the customer is obtained Lambda: // Filters orders based on ID matching the provided parameter and includes customer details Orders.filter(p => p.id == id).include(p => p.customer) SQL Result: -- Selects order details from the Orders table where the OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects customer details from the Customers table where the CustomerID matches the provided parameter -- The CustomerID is expected to be in the result set of the previous query SELECT c.CustomerID AS `id`, c.CompanyName AS `name`, c.ContactName AS `contact`, c.ContactTitle AS `phone`, c.Address AS `address`, c.City AS `city`, c.Region AS `region`, c.PostalCode AS `postalCode`, c.Country AS `country` FROM Customers c WHERE c.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ] Include relation OneToMany and manyToOne In this example, the data of an Order, the customer and the details of the related Order are obtained. Lambda: // Filters orders based on the provided ID and includes details and customers Orders.filter(p => p.id == id).include(p => [p.details,p.customer]) SQL Result: -- Selects order details from the Orders table where OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects order details from the Order Details table where OrderID is in the result set of the previous query SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects customer details from the Customers table where CustomerID is in the result set of the previous query -- CustomerID is expected to be in the result set of the previous query SELECT c.CustomerID AS `id`, c.CompanyName AS `name`, c.ContactName AS `contact`, c.ContactTitle AS `phone`, c.Address AS `address`, c.City AS `city`, c.Region AS `region`, c.PostalCode AS `postalCode`, c.Country AS `country` FROM Customers c WHERE c.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0 } ], \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ] Nested includes In this example, in the relationship with Orders detail, its relationship with Product is brought and in turn for each product its relationship with Category is brought. Lambda: // Filters orders based on the provided ID and includes details (with product and category) and customers Orders .filter(p => p.id == id) .include(p => [p.details.include(q => q.product.include(r => r.category)), p.customer]) SQL Result: -- Selects order details from the Orders table where OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects order details from the Order Details table where OrderID is in the result set of the previous query SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects product details from the Products table where ProductID is in the result set of the previous query -- ProductID is expected to be in the result set of the previous query SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p WHERE p.ProductID IN (?) -- Selects category details from the Categories table where CategoryID is in the result set of the previous query -- CategoryID is expected to be in the result set of the previous query SELECT c.CategoryID AS `id`, c.CategoryName AS `name`, c.Description AS `description` FROM Categories c WHERE c.CategoryID IN (?) -- Selects customer details from the Customers table where CustomerID is in the result set of the previous query -- CustomerID is expected to be in the result set of the previous query SELECT c1.CustomerID AS `id`, c1.CompanyName AS `name`, c1.ContactName AS `contact`, c1.ContactTitle AS `phone`, c1.Address AS `address`, c1.City AS `city`, c1.Region AS `region`, c1.PostalCode AS `postalCode`, c1.Country AS `country` FROM Customers c1 WHERE c1.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0, \"product\": { \"id\": 11, \"name\": \"Queso Cabrales\", \"supplierId\": 5, \"categoryId\": 4, \"quantity\": \"1 kg pkg.\", \"price\": 21, \"inStock\": 22, \"onOrder\": 30, \"reorderLevel\": 30, \"discontinued\": false, \"category\": { \"id\": 4, \"name\": \"Dairy Products\", \"description\": \"Cheeses\" } } }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0, \"product\": { \"id\": 42, \"name\": \"Singaporean Hokkien Fried Mee\", \"supplierId\": 20, \"categoryId\": 5, \"quantity\": \"32 - 1 kg pkgs.\", \"price\": 14, \"inStock\": 26, \"onOrder\": 0, \"reorderLevel\": 0, \"discontinued\": true, \"category\": { \"id\": 5, \"name\": \"Grains/Cereals\", \"description\": \"Breads, crackers, pasta, and cereal\" } } }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0, \"product\": { \"id\": 72, \"name\": \"Mozzarella di Giovanni\", \"supplierId\": 14, \"categoryId\": 4, \"quantity\": \"24 - 200 g pkgs.\", \"price\": 34.8, \"inStock\": 14, \"onOrder\": 0, \"reorderLevel\": 0, \"discontinued\": false, \"category\": { \"id\": 4, \"name\": \"Dairy Products\", \"description\": \"Cheeses\" } } } ], \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ] includes with some fields In this example some fields are brought from the main entity as well as from the included entities. This allows us to create queries that return only the data we need. Lambda: // Filters orders based on the provided ID and includes customer details, order details (with product category), and order date Orders.filter(p => p.id === id) .include(p => [ // Includes customer name and concatenated address p.customer.map(p => ( { name:p.name, address:concat(p.address,', ',p.city,' (', p.postalCode,') ', p.country) })), // Includes order details with product names and quantities p.details.include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice])]) // Maps to retrieve order dates .map(p => p.orderDate) SQL Result: -- Selects order dates from the Orders table where OrderID matches the provided parameter -- Parameterized query: OrderID is replaced with the provided parameter SELECT o.OrderDate AS `orderDate` FROM Orders o WHERE o.OrderID = ? -- Selects customer company name and concatenated address from the Customers table where CustomerID is in the result set of the previous query -- Parameterized query: CustomerID is replaced with the result set of the previous query SELECT c.CompanyName AS `name`, CONCAT(c.Address,', ',c.City,' (',c.PostalCode,') ',c.Country) AS `address` FROM Customers c WHERE c.CustomerID IN (?) -- Selects order details (quantity and unit price) from the Order Details table where OrderID is in the result set of the previous query -- Parameterized query: OrderID is replaced with the result set of the previous query SELECT o1.Quantity AS `quantity`, o1.UnitPrice AS `unitPrice` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects product names from the Products table where ProductID is in the result set of the previous query -- Parameterized query: ProductID is replaced with the result set of the previous query SELECT p.ProductName AS `name` FROM Products p WHERE p.ProductID IN (?) -- Parameterized query: ProductID is replaced with the result set of the previous query -- Parameterized query: CategoryID is replaced with the result set of the previous query SELECT c1.CategoryName AS `name` FROM Categories c1 WHERE c1.CategoryID IN (?) Data Result: [ [ { \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"customer\": { \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l'Abbaye, Reims (51100) France\" }, \"details\": [ { \"quantity\": 12, \"unitPrice\": 14, \"product\": { \"name\": \"Queso Cabrales\", \"category\": { \"name\": \"Dairy Products\" } } }, { \"quantity\": 10, \"unitPrice\": 9.8, \"product\": { \"name\": \"Singaporean Hokkien Fried Mee\", \"category\": { \"name\": \"Grains/Cereals\" } } }, { \"quantity\": 5, \"unitPrice\": 34.8, \"product\": { \"name\": \"Mozzarella di Giovanni\", \"category\": { \"name\": \"Dairy Products\" } } } ] } ] ] Code example import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts an order ID parameter // Filtering orders based on ID matching the provided parameter // Including related entities such as customer details and order details // Including customer details // Including order details with product information const query = (id:number) => Orders .filter(p => p.id === id) .include(p => [ p.customer.map(p => ( { name:p.name, address:concat(p.address,', ',p.city,' (', p.postalCode,') ', p.country) })), p.details.include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice])]) .map(p => p.orderDate) // Executing the query with an order ID parameter of 830 const result = await orm.execute(query, {id: 830}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Include"},{"location":"queries/Include/#include","text":"\u03bbORM includes the include method to load related entities, both for OneToMany, manyToOne, and oneToOne relationships. We can also apply filters or bring us some fields from related entities. For each include, a statement is executed that fetches all the necessary records, then the objects with relationships are assembled in memory. In this way, multiple executions are avoided, considerably improving performance. Includes can be used in selects, inserts, updates, deletes, and bulkInserts.","title":"Include"},{"location":"queries/Include/#include-relation-onetomany","text":"In this example the data of an Order and the customer is obtained Lambda: // Filters orders based on ID matching the provided parameter and includes customer details Orders.filter(p => p.id == id).include(p => p.customer) SQL Result: -- Selects order details from the Orders table where the OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects customer details from the Customers table where the CustomerID matches the provided parameter -- The CustomerID is expected to be in the result set of the previous query SELECT c.CustomerID AS `id`, c.CompanyName AS `name`, c.ContactName AS `contact`, c.ContactTitle AS `phone`, c.Address AS `address`, c.City AS `city`, c.Region AS `region`, c.PostalCode AS `postalCode`, c.Country AS `country` FROM Customers c WHERE c.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ]","title":"Include relation OneToMany"},{"location":"queries/Include/#include-relation-onetomany-and-manytoone","text":"In this example, the data of an Order, the customer and the details of the related Order are obtained. Lambda: // Filters orders based on the provided ID and includes details and customers Orders.filter(p => p.id == id).include(p => [p.details,p.customer]) SQL Result: -- Selects order details from the Orders table where OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects order details from the Order Details table where OrderID is in the result set of the previous query SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects customer details from the Customers table where CustomerID is in the result set of the previous query -- CustomerID is expected to be in the result set of the previous query SELECT c.CustomerID AS `id`, c.CompanyName AS `name`, c.ContactName AS `contact`, c.ContactTitle AS `phone`, c.Address AS `address`, c.City AS `city`, c.Region AS `region`, c.PostalCode AS `postalCode`, c.Country AS `country` FROM Customers c WHERE c.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0 }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0 } ], \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ]","title":"Include relation OneToMany and manyToOne"},{"location":"queries/Include/#nested-includes","text":"In this example, in the relationship with Orders detail, its relationship with Product is brought and in turn for each product its relationship with Category is brought. Lambda: // Filters orders based on the provided ID and includes details (with product and category) and customers Orders .filter(p => p.id == id) .include(p => [p.details.include(q => q.product.include(r => r.category)), p.customer]) SQL Result: -- Selects order details from the Orders table where OrderID matches the provided parameter SELECT o.OrderID AS `id`, o.CustomerID AS `customerId`, o.EmployeeID AS `employeeId`, o.OrderDate AS `orderDate`, o.RequiredDate AS `requiredDate`, o.ShippedDate AS `shippedDate`, o.ShipVia AS `shipViaId`, o.Freight AS `freight`, o.ShipName AS `name`, o.ShipAddress AS `address`, o.ShipCity AS `city`, o.ShipRegion AS `region`, o.ShipPostalCode AS `postalCode`, o.ShipCountry AS `country` FROM Orders o WHERE o.OrderID = ? -- Selects order details from the Order Details table where OrderID is in the result set of the previous query SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects product details from the Products table where ProductID is in the result set of the previous query -- ProductID is expected to be in the result set of the previous query SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p WHERE p.ProductID IN (?) -- Selects category details from the Categories table where CategoryID is in the result set of the previous query -- CategoryID is expected to be in the result set of the previous query SELECT c.CategoryID AS `id`, c.CategoryName AS `name`, c.Description AS `description` FROM Categories c WHERE c.CategoryID IN (?) -- Selects customer details from the Customers table where CustomerID is in the result set of the previous query -- CustomerID is expected to be in the result set of the previous query SELECT c1.CustomerID AS `id`, c1.CompanyName AS `name`, c1.ContactName AS `contact`, c1.ContactTitle AS `phone`, c1.Address AS `address`, c1.City AS `city`, c1.Region AS `region`, c1.PostalCode AS `postalCode`, c1.Country AS `country` FROM Customers c1 WHERE c1.CustomerID IN (?) Data Result: [ { \"id\": 10248, \"customerId\": \"VINET\", \"employeeId\": 5, \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"requiredDate\": \"1996-07-31T22:00:00.000Z\", \"shippedDate\": \"1996-07-15T22:00:00.000Z\", \"shipViaId\": 3, \"freight\": 32.38, \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l-Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\", \"details\": [ { \"orderId\": 10248, \"productId\": 11, \"unitPrice\": 14, \"quantity\": 12, \"discount\": 0, \"product\": { \"id\": 11, \"name\": \"Queso Cabrales\", \"supplierId\": 5, \"categoryId\": 4, \"quantity\": \"1 kg pkg.\", \"price\": 21, \"inStock\": 22, \"onOrder\": 30, \"reorderLevel\": 30, \"discontinued\": false, \"category\": { \"id\": 4, \"name\": \"Dairy Products\", \"description\": \"Cheeses\" } } }, { \"orderId\": 10248, \"productId\": 42, \"unitPrice\": 9.8, \"quantity\": 10, \"discount\": 0, \"product\": { \"id\": 42, \"name\": \"Singaporean Hokkien Fried Mee\", \"supplierId\": 20, \"categoryId\": 5, \"quantity\": \"32 - 1 kg pkgs.\", \"price\": 14, \"inStock\": 26, \"onOrder\": 0, \"reorderLevel\": 0, \"discontinued\": true, \"category\": { \"id\": 5, \"name\": \"Grains/Cereals\", \"description\": \"Breads, crackers, pasta, and cereal\" } } }, { \"orderId\": 10248, \"productId\": 72, \"unitPrice\": 34.8, \"quantity\": 5, \"discount\": 0, \"product\": { \"id\": 72, \"name\": \"Mozzarella di Giovanni\", \"supplierId\": 14, \"categoryId\": 4, \"quantity\": \"24 - 200 g pkgs.\", \"price\": 34.8, \"inStock\": 14, \"onOrder\": 0, \"reorderLevel\": 0, \"discontinued\": false, \"category\": { \"id\": 4, \"name\": \"Dairy Products\", \"description\": \"Cheeses\" } } } ], \"customer\": { \"id\": \"VINET\", \"name\": \"Vins et alcools Chevalier\", \"contact\": \"Paul Henriot\", \"phone\": \"Accounting Manager\", \"address\": \"59 rue de l'Abbaye\", \"city\": \"Reims\", \"region\": null, \"postalCode\": \"51100\", \"country\": \"France\" } } ]","title":"Nested includes"},{"location":"queries/Include/#includes-with-some-fields","text":"In this example some fields are brought from the main entity as well as from the included entities. This allows us to create queries that return only the data we need. Lambda: // Filters orders based on the provided ID and includes customer details, order details (with product category), and order date Orders.filter(p => p.id === id) .include(p => [ // Includes customer name and concatenated address p.customer.map(p => ( { name:p.name, address:concat(p.address,', ',p.city,' (', p.postalCode,') ', p.country) })), // Includes order details with product names and quantities p.details.include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice])]) // Maps to retrieve order dates .map(p => p.orderDate) SQL Result: -- Selects order dates from the Orders table where OrderID matches the provided parameter -- Parameterized query: OrderID is replaced with the provided parameter SELECT o.OrderDate AS `orderDate` FROM Orders o WHERE o.OrderID = ? -- Selects customer company name and concatenated address from the Customers table where CustomerID is in the result set of the previous query -- Parameterized query: CustomerID is replaced with the result set of the previous query SELECT c.CompanyName AS `name`, CONCAT(c.Address,', ',c.City,' (',c.PostalCode,') ',c.Country) AS `address` FROM Customers c WHERE c.CustomerID IN (?) -- Selects order details (quantity and unit price) from the Order Details table where OrderID is in the result set of the previous query -- Parameterized query: OrderID is replaced with the result set of the previous query SELECT o1.Quantity AS `quantity`, o1.UnitPrice AS `unitPrice` FROM `Order Details` o1 WHERE o1.OrderID IN (?) -- Selects product names from the Products table where ProductID is in the result set of the previous query -- Parameterized query: ProductID is replaced with the result set of the previous query SELECT p.ProductName AS `name` FROM Products p WHERE p.ProductID IN (?) -- Parameterized query: ProductID is replaced with the result set of the previous query -- Parameterized query: CategoryID is replaced with the result set of the previous query SELECT c1.CategoryName AS `name` FROM Categories c1 WHERE c1.CategoryID IN (?) Data Result: [ [ { \"orderDate\": \"1996-07-03T22:00:00.000Z\", \"customer\": { \"name\": \"Vins et alcools Chevalier\", \"address\": \"59 rue de l'Abbaye, Reims (51100) France\" }, \"details\": [ { \"quantity\": 12, \"unitPrice\": 14, \"product\": { \"name\": \"Queso Cabrales\", \"category\": { \"name\": \"Dairy Products\" } } }, { \"quantity\": 10, \"unitPrice\": 9.8, \"product\": { \"name\": \"Singaporean Hokkien Fried Mee\", \"category\": { \"name\": \"Grains/Cereals\" } } }, { \"quantity\": 5, \"unitPrice\": 34.8, \"product\": { \"name\": \"Mozzarella di Giovanni\", \"category\": { \"name\": \"Dairy Products\" } } } ] } ] ]","title":"includes with some fields"},{"location":"queries/Include/#code-example","text":"import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts an order ID parameter // Filtering orders based on ID matching the provided parameter // Including related entities such as customer details and order details // Including customer details // Including order details with product information const query = (id:number) => Orders .filter(p => p.id === id) .include(p => [ p.customer.map(p => ( { name:p.name, address:concat(p.address,', ',p.city,' (', p.postalCode,') ', p.country) })), p.details.include(p => p.product .include(p => p.category.map(p => p.name)) .map(p => p.name)) .map(p => [p.quantity, p.unitPrice])]) .map(p => p.orderDate) // Executing the query with an order ID parameter of 830 const result = await orm.execute(query, {id: 830}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/Insert/","text":"Insert Since the queries are based on both the expression and the definition in the schema, in the case of wanting to insert all the fields it is not necessary to define them since it is assumed if none are defined. The mapping to the source(s) is resolved according to the mapping configuration associated with each source in the schema. Insert Simple In the case that the fields to be inserted are not specified, it is assumed that an object with all fields will be passed. Lambda: // Inserting into Categories table without specifying fields Categories.insert() SQL Result: -- Inserting into Categories table with CategoryName and Description fields INSERT INTO Categories(CategoryName,Description) VALUES(?,?) Insert specific In this case, only the fields that are specified will be inserted Lambda: // Inserting into Categories table with only the name field specified Categories.insert({ name: name }) SQL Result: -- Inserting into Categories table with CategoryName field specified INSERT INTO Categories(CategoryName) VALUES(?) Insert with include In the case that we need to insert an object which in turn has a relation, we can insert the set using include. Lambda: // Inserting into Orders table and including details Orders.insert().include(p => p.details) SQL Result: -- Inserting into Orders table with all required fields INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- Inserting into Order Details table with all required fields INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES(?,?,?,?,?) Code example import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { customerId: 'VINET', employeeId: 5, orderDate: '1996-07-03T22:00:00.000Z', requiredDate: '1996-07-31T22:00:00.000Z', shippedDate: '1996-07-15T22:00:00.000Z', shipViaId: 3, freight: 32.38, name: 'Vins et alcools Chevalier', address: '59 rue de l-Abbaye', city: 'Reims', postalCode: '51100', country: 'France', details: [ { productId: 11, unitPrice: 14, quantity: 12, discount: 10, orderId: 833 }, { productId: 42, unitPrice: 9.8, quantity: 10, discount: 10, orderId: 833 } ] } // Defining a query to insert into Orders and include details const query = () => Orders.insert().include(p => p.details) // Executing the query using the ORM with the specified order parameter const result = await orm.execute(query, order) // return ID of order created console.log(JSON.stringify(result)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Insert"},{"location":"queries/Insert/#insert","text":"Since the queries are based on both the expression and the definition in the schema, in the case of wanting to insert all the fields it is not necessary to define them since it is assumed if none are defined. The mapping to the source(s) is resolved according to the mapping configuration associated with each source in the schema.","title":"Insert"},{"location":"queries/Insert/#insert-simple","text":"In the case that the fields to be inserted are not specified, it is assumed that an object with all fields will be passed. Lambda: // Inserting into Categories table without specifying fields Categories.insert() SQL Result: -- Inserting into Categories table with CategoryName and Description fields INSERT INTO Categories(CategoryName,Description) VALUES(?,?)","title":"Insert Simple"},{"location":"queries/Insert/#insert-specific","text":"In this case, only the fields that are specified will be inserted Lambda: // Inserting into Categories table with only the name field specified Categories.insert({ name: name }) SQL Result: -- Inserting into Categories table with CategoryName field specified INSERT INTO Categories(CategoryName) VALUES(?)","title":"Insert specific"},{"location":"queries/Insert/#insert-with-include","text":"In the case that we need to insert an object which in turn has a relation, we can insert the set using include. Lambda: // Inserting into Orders table and including details Orders.insert().include(p => p.details) SQL Result: -- Inserting into Orders table with all required fields INSERT INTO Orders(CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- Inserting into Order Details table with all required fields INSERT INTO `Order Details`(OrderID,ProductID,UnitPrice,Quantity,Discount) VALUES(?,?,?,?,?)","title":"Insert with include"},{"location":"queries/Insert/#code-example","text":"import { orm } from '../../lib' import { Orders } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const order = { customerId: 'VINET', employeeId: 5, orderDate: '1996-07-03T22:00:00.000Z', requiredDate: '1996-07-31T22:00:00.000Z', shippedDate: '1996-07-15T22:00:00.000Z', shipViaId: 3, freight: 32.38, name: 'Vins et alcools Chevalier', address: '59 rue de l-Abbaye', city: 'Reims', postalCode: '51100', country: 'France', details: [ { productId: 11, unitPrice: 14, quantity: 12, discount: 10, orderId: 833 }, { productId: 42, unitPrice: 9.8, quantity: 10, discount: 10, orderId: 833 } ] } // Defining a query to insert into Orders and include details const query = () => Orders.insert().include(p => p.details) // Executing the query using the ORM with the specified order parameter const result = await orm.execute(query, order) // return ID of order created console.log(JSON.stringify(result)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/Join/","text":"Join Join statements are implicit when they add fields through their relationships. Join simple Retrieves the product name and its category through a relationship. Lambda: Products.map(p => ({ name: p.name, category: p.category.name })) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID Join with distinct and sort Retrieves distinct values of quantity per unit and category, sorted by category. Lambda: Products .distinct(p => ({ quantity: p.quantity, category: p.category.name })) .sort(p => p.category) SQL Result: -- Selects distinct values of quantity per unit as `quantity` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Orders the results by `category`. SELECT DISTINCT p.QuantityPerUnit AS `quantity`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID ORDER BY `category` Join with filter Retrieves the product name and its category, but only for products with a price greater than 10. Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name })) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Filters products with a price greater than 10. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > 10 Join and pagination Retrieves the product name and its category for products with a price greater than 10, ordered by category and paginated. Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Filters products with a price greater than 10. -- Orders the results by `category` and limits them to 10 results per page, starting from page 1. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > 10 ORDER BY `category` LIMIT 0,10 Multiple Join and grouping Retrieves the order date and the total for each order for a specific customer, ordered by total in descending order. Lambda: OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) SQL Result: -- Selects the order date as `order` and the sum of quantity times unit price as `total`. -- Performs inner joins between the Order Details table and the Orders and Customers tables using OrderID and CustomerID respectively. -- Filters orders associated with the provided customer name. -- Groups the results by order date. -- Orders the results by `total` in descending order. SELECT o1.OrderDate AS `order`, SUM(o.Quantity * o.UnitPrice) AS `total` FROM `Order Details` o INNER JOIN Orders o1 ON o1.OrderID = o.OrderID INNER JOIN Customers c ON c.CustomerID = o1.CustomerID WHERE c.CompanyName = ? GROUP BY o1.OrderDate ORDER BY `total` desc Code example import { orm } from '../../lib' import { OrderDetails } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const query = OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) const result = await orm.execute(query, {maxPrice:10}, {stage:'MySQL'}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { await orm.end() } })()","title":"Join"},{"location":"queries/Join/#join","text":"Join statements are implicit when they add fields through their relationships.","title":"Join"},{"location":"queries/Join/#join-simple","text":"Retrieves the product name and its category through a relationship. Lambda: Products.map(p => ({ name: p.name, category: p.category.name })) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID","title":"Join simple"},{"location":"queries/Join/#join-with-distinct-and-sort","text":"Retrieves distinct values of quantity per unit and category, sorted by category. Lambda: Products .distinct(p => ({ quantity: p.quantity, category: p.category.name })) .sort(p => p.category) SQL Result: -- Selects distinct values of quantity per unit as `quantity` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Orders the results by `category`. SELECT DISTINCT p.QuantityPerUnit AS `quantity`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID ORDER BY `category`","title":"Join with distinct and sort"},{"location":"queries/Join/#join-with-filter","text":"Retrieves the product name and its category, but only for products with a price greater than 10. Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name })) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Filters products with a price greater than 10. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > 10","title":"Join with filter"},{"location":"queries/Join/#join-and-pagination","text":"Retrieves the product name and its category for products with a price greater than 10, ordered by category and paginated. Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) SQL Result: -- Selects the product name as `name` and the category name as `category`. -- Performs an inner join between the Products table and the Categories table using CategoryID. -- Filters products with a price greater than 10. -- Orders the results by `category` and limits them to 10 results per page, starting from page 1. SELECT p.ProductName AS `name`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > 10 ORDER BY `category` LIMIT 0,10","title":"Join and pagination"},{"location":"queries/Join/#multiple-join-and-grouping","text":"Retrieves the order date and the total for each order for a specific customer, ordered by total in descending order. Lambda: OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) SQL Result: -- Selects the order date as `order` and the sum of quantity times unit price as `total`. -- Performs inner joins between the Order Details table and the Orders and Customers tables using OrderID and CustomerID respectively. -- Filters orders associated with the provided customer name. -- Groups the results by order date. -- Orders the results by `total` in descending order. SELECT o1.OrderDate AS `order`, SUM(o.Quantity * o.UnitPrice) AS `total` FROM `Order Details` o INNER JOIN Orders o1 ON o1.OrderID = o.OrderID INNER JOIN Customers c ON c.CustomerID = o1.CustomerID WHERE c.CompanyName = ? GROUP BY o1.OrderDate ORDER BY `total` desc","title":"Multiple Join and grouping"},{"location":"queries/Join/#code-example","text":"import { orm } from '../../lib' import { OrderDetails } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') const query = OrderDetails .filter(p => p.order.customer.name == customerName) .map(p => ({ order: p.order.orderDate, total: sum(p.quantity * p.unitPrice) })) .sort(p => desc(p.total)) const result = await orm.execute(query, {maxPrice:10}, {stage:'MySQL'}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { await orm.end() } })()","title":"Code example"},{"location":"queries/Metadata/","text":"Metadata Lambda ORM has the following methods to extract metadata information from queries. To execute these methods it is not necessary to connect to the database. method Description Path parameters Get parameters in the query orm.parameters(query) model Get model of the result in an execution orm.model(query) metadata Get metadata of the query orm.metadata(query) plan Get plan in the dialect of the physical model orm.plan(query) constraints Get constraints of query orm.constraints(query) Example: import { orm } from 'lambdaorm' (async () => { try { await orm.init() const query = (id:number) => Orders.filter(p => p.id === id).include(p => p.details).map(p => ({ name: p.orderDate, customer: p.customer.name })) const parameters = await orm.parameters(query) const model = await orm.model(query) const sentences = await orm.sentence(query) const constraints = await orm.constraints(query) const plan = await orm.plan(query) console.log(JSON.stringify(parameters, null, 2)) console.log(JSON.stringify(model, null, 2)) console.log(JSON.stringify(sentences, null, 2)) console.log(JSON.stringify(constraints, null, 2)) console.log(JSON.stringify(plan, null, 2)) } catch (error) { console.log(error) } finally { await orm.end() } })() Results: Parameters: { \"id\": \"integer\" } Model: { \"name\": \"dateTime\", \"customer\": \"string\", \"details\": [ { \"orderId\": \"integer\", \"productId\": \"integer\", \"unitPrice\": \"decimal\", \"quantity\": \"decimal\", \"discount\": \"decimal\" } ] } Metadata: {\"n\":\"select\",\"t\":\"Sentence\",\"c\":[{\"n\":\"filter\",\"t\":\"Filter\",\"c\":[{\"n\":\"===\",\"t\":\"Operator\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderID\"},{\"n\":\"id\",\"t\":\"Variable\",\"c\":[],\"u\":1}]}]},{\"n\":\"Orders.o\",\"t\":\"From\",\"c\":[]},{\"n\":\"map\",\"t\":\"Map\",\"c\":[{\"n\":\"obj\",\"t\":\"Obj\",\"c\":[{\"n\":\"name\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderDate\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderDate\"}]},{\"n\":\"customer\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"name\",\"t\":\"Field\",\"c\":[],\"e\":\"Customers\",\"m\":\"c.CompanyName\"}]},{\"n\":\"__id\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderID\"}]}]}]},{\"n\":\"details\",\"t\":\"SentenceInclude\",\"c\":[{\"n\":\"select\",\"t\":\"Sentence\",\"c\":[{\"n\":\"filter\",\"t\":\"Filter\",\"c\":[{\"n\":\"includes\",\"t\":\"FunctionRef\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"},{\"n\":\"__parentId\",\"t\":\"Variable\",\"c\":[],\"u\":1}]}]},{\"n\":\"Order Details.o1\",\"t\":\"From\",\"c\":[]},{\"n\":\"map\",\"t\":\"Map\",\"c\":[{\"n\":\"obj\",\"t\":\"Obj\",\"c\":[{\"n\":\"orderId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"}]},{\"n\":\"productId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"productId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.ProductID\"}]},{\"n\":\"unitPrice\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"unitPrice\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.UnitPrice\"}]},{\"n\":\"quantity\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"quantity\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.Quantity\"}]},{\"n\":\"discount\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"discount\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.Discount\"}]},{\"n\":\"__parentId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"}]}]}]}],\"f\":[{\"name\":\"orderId\",\"type\":\"integer\"},{\"name\":\"productId\",\"type\":\"integer\"},{\"name\":\"unitPrice\",\"type\":\"decimal\"},{\"name\":\"quantity\",\"type\":\"decimal\"},{\"name\":\"discount\",\"type\":\"decimal\"},{\"name\":\"__parentId\",\"type\":\"integer\"}],\"p\":[{\"name\":\"__parentId\",\"type\":\"array\"}],\"e\":\"OrderDetails\"}],\"r\":{\"name\":\"details\",\"type\":\"manyToOne\",\"composite\":true,\"from\":\"id\",\"entity\":\"OrderDetails\",\"to\":\"orderId\"}},{\"n\":\"Customers.c\",\"t\":\"Join\",\"c\":[{\"n\":\"==\",\"t\":\"Operator\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Customers\",\"m\":\"c.CustomerID\"},{\"n\":\"customerId\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.CustomerID\"}]}]}],\"f\":[{\"name\":\"name\",\"type\":\"dateTime\"},{\"name\":\"customer\",\"type\":\"string\"},{\"name\":\"__id\",\"type\":\"integer\"}],\"p\":[{\"name\":\"id\",\"type\":\"integer\"}],\"e\":\"Orders\",\"a\":{\"name\":\"id\",\"mapping\":\"OrderID\",\"type\":\"integer\",\"autoIncrement\":true}} Plan: SELECT o.OrderDate AS `name`, c.CompanyName AS `customer`, o.OrderID AS `__id` FROM Orders o INNER JOIN Customers c ON c.CustomerID = o.CustomerID WHERE o.OrderID = ? SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount`, o1.OrderID AS `__parentId` FROM `Order Details` o1 WHERE o1.OrderID IN (?)","title":"Metadata"},{"location":"queries/Metadata/#metadata","text":"Lambda ORM has the following methods to extract metadata information from queries. To execute these methods it is not necessary to connect to the database. method Description Path parameters Get parameters in the query orm.parameters(query) model Get model of the result in an execution orm.model(query) metadata Get metadata of the query orm.metadata(query) plan Get plan in the dialect of the physical model orm.plan(query) constraints Get constraints of query orm.constraints(query)","title":"Metadata"},{"location":"queries/Metadata/#example","text":"import { orm } from 'lambdaorm' (async () => { try { await orm.init() const query = (id:number) => Orders.filter(p => p.id === id).include(p => p.details).map(p => ({ name: p.orderDate, customer: p.customer.name })) const parameters = await orm.parameters(query) const model = await orm.model(query) const sentences = await orm.sentence(query) const constraints = await orm.constraints(query) const plan = await orm.plan(query) console.log(JSON.stringify(parameters, null, 2)) console.log(JSON.stringify(model, null, 2)) console.log(JSON.stringify(sentences, null, 2)) console.log(JSON.stringify(constraints, null, 2)) console.log(JSON.stringify(plan, null, 2)) } catch (error) { console.log(error) } finally { await orm.end() } })()","title":"Example:"},{"location":"queries/Metadata/#results","text":"Parameters: { \"id\": \"integer\" } Model: { \"name\": \"dateTime\", \"customer\": \"string\", \"details\": [ { \"orderId\": \"integer\", \"productId\": \"integer\", \"unitPrice\": \"decimal\", \"quantity\": \"decimal\", \"discount\": \"decimal\" } ] } Metadata: {\"n\":\"select\",\"t\":\"Sentence\",\"c\":[{\"n\":\"filter\",\"t\":\"Filter\",\"c\":[{\"n\":\"===\",\"t\":\"Operator\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderID\"},{\"n\":\"id\",\"t\":\"Variable\",\"c\":[],\"u\":1}]}]},{\"n\":\"Orders.o\",\"t\":\"From\",\"c\":[]},{\"n\":\"map\",\"t\":\"Map\",\"c\":[{\"n\":\"obj\",\"t\":\"Obj\",\"c\":[{\"n\":\"name\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderDate\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderDate\"}]},{\"n\":\"customer\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"name\",\"t\":\"Field\",\"c\":[],\"e\":\"Customers\",\"m\":\"c.CompanyName\"}]},{\"n\":\"__id\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.OrderID\"}]}]}]},{\"n\":\"details\",\"t\":\"SentenceInclude\",\"c\":[{\"n\":\"select\",\"t\":\"Sentence\",\"c\":[{\"n\":\"filter\",\"t\":\"Filter\",\"c\":[{\"n\":\"includes\",\"t\":\"FunctionRef\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"},{\"n\":\"__parentId\",\"t\":\"Variable\",\"c\":[],\"u\":1}]}]},{\"n\":\"Order Details.o1\",\"t\":\"From\",\"c\":[]},{\"n\":\"map\",\"t\":\"Map\",\"c\":[{\"n\":\"obj\",\"t\":\"Obj\",\"c\":[{\"n\":\"orderId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"}]},{\"n\":\"productId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"productId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.ProductID\"}]},{\"n\":\"unitPrice\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"unitPrice\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.UnitPrice\"}]},{\"n\":\"quantity\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"quantity\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.Quantity\"}]},{\"n\":\"discount\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"discount\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.Discount\"}]},{\"n\":\"__parentId\",\"t\":\"KeyValue\",\"c\":[{\"n\":\"orderId\",\"t\":\"Field\",\"c\":[],\"e\":\"OrderDetails\",\"m\":\"o1.OrderID\"}]}]}]}],\"f\":[{\"name\":\"orderId\",\"type\":\"integer\"},{\"name\":\"productId\",\"type\":\"integer\"},{\"name\":\"unitPrice\",\"type\":\"decimal\"},{\"name\":\"quantity\",\"type\":\"decimal\"},{\"name\":\"discount\",\"type\":\"decimal\"},{\"name\":\"__parentId\",\"type\":\"integer\"}],\"p\":[{\"name\":\"__parentId\",\"type\":\"array\"}],\"e\":\"OrderDetails\"}],\"r\":{\"name\":\"details\",\"type\":\"manyToOne\",\"composite\":true,\"from\":\"id\",\"entity\":\"OrderDetails\",\"to\":\"orderId\"}},{\"n\":\"Customers.c\",\"t\":\"Join\",\"c\":[{\"n\":\"==\",\"t\":\"Operator\",\"c\":[{\"n\":\"id\",\"t\":\"Field\",\"c\":[],\"e\":\"Customers\",\"m\":\"c.CustomerID\"},{\"n\":\"customerId\",\"t\":\"Field\",\"c\":[],\"e\":\"Orders\",\"m\":\"o.CustomerID\"}]}]}],\"f\":[{\"name\":\"name\",\"type\":\"dateTime\"},{\"name\":\"customer\",\"type\":\"string\"},{\"name\":\"__id\",\"type\":\"integer\"}],\"p\":[{\"name\":\"id\",\"type\":\"integer\"}],\"e\":\"Orders\",\"a\":{\"name\":\"id\",\"mapping\":\"OrderID\",\"type\":\"integer\",\"autoIncrement\":true}} Plan: SELECT o.OrderDate AS `name`, c.CompanyName AS `customer`, o.OrderID AS `__id` FROM Orders o INNER JOIN Customers c ON c.CustomerID = o.CustomerID WHERE o.OrderID = ? SELECT o1.OrderID AS `orderId`, o1.ProductID AS `productId`, o1.UnitPrice AS `unitPrice`, o1.Quantity AS `quantity`, o1.Discount AS `discount`, o1.OrderID AS `__parentId` FROM `Order Details` o1 WHERE o1.OrderID IN (?)","title":"Results:"},{"location":"queries/Query-Language/","text":"Query Language The query language is based on javascript lambda expression . These Queries can be written as javascript code by browsing the business model entities. Queries can also be sent as a string \u03bbOrm translates the query into the language corresponding to each database engine. Queries type DQL Las consultas DQL (Data Query Language) son consultas utilizadas para recuperar datos de una base de datos. Las consultas DQL pueden ser bastante simples o pueden incluir cl\u00e1usulas adicionales para filtrar, ordenar o agrupar datos, as\u00ed como para realizar c\u00e1lculos y operaciones en los datos recuperados. Esto permite a los desarrolladores obtener los datos exactos que necesitan de una base de datos seg\u00fan los requisitos de la aplicaci\u00f3n. View: Select Join Grouping Include DML DML (Data Manipulation Language) queries are used to manipulate data in a database. Mainly, they include the following operations: INSERT: Used to add new records to a table. UPDATE: Used to modify existing records in a table. DELETE: Used to delete records from a table. View: Insert BulkInsert Update Delete DDL DDL (Data Definition Language) are used to define, modify and delete database structures and related objects. Mainly, they include the following operations: CREATE: Used to create new objects in the database, such as tables, indexes, views and other objects. ALTER: Used to modify the structure of existing objects in the database, such as adding, modifying or deleting columns from a table, changing the data type of a column, renaming an object, among others. DROP: Used to delete database objects, such as tables, indexes, views and other objects. These queries are created and executed when you use the schema synchronization commands. View: Push Pull Fetch Introspect Incorporate Example: // Selecting countries filtering by region and including related states starting with 'F', with pagination Countries .filter(p=> p.region == region) .map(p=> [p.name,p.subregion,p.latitude,p.longitude]) // Selecting country fields .include(p => p.states.filter(p=> substr(p.name,1,1)==\"F\") // Including states starting with 'F' .map(p=> [p.name,p.latitude,p.longitude]) ) .page(1,3) // Pagination for countries, 3 records per page where the SQL equivalent of the query is: -- Selecting countries based on region and limiting to 3 records SELECT c.name AS `name`, c.subregion AS `subregion`, c.latitude AS `latitude`, c.longitude AS `longitude`, c.iso3 AS `__iso3` FROM Countries c WHERE c.region = ? LIMIT 0,3 -- Selecting states starting with 'F' belonging to the specified countries SELECT s.NAME AS \"name\", s.LATITUDE AS \"latitude\", s.LONGITUDE AS \"longitude\", s.COUNTRY_CODE AS \"__parentId\" FROM TBL_STATES s WHERE SUBSTR(s.NAME,1,1) = 'F' AND s.s.COUNTRY_CODE IN (?) Advantage of Query Language Use of the same programming language. No need to learn a new language. queries easy to write and understand. Use of the intellisense offered by the IDE to write the expressions. Avoid syntax errors.","title":"Query Language"},{"location":"queries/Query-Language/#query-language","text":"The query language is based on javascript lambda expression . These Queries can be written as javascript code by browsing the business model entities. Queries can also be sent as a string \u03bbOrm translates the query into the language corresponding to each database engine.","title":"Query Language"},{"location":"queries/Query-Language/#queries-type","text":"","title":"Queries type"},{"location":"queries/Query-Language/#dql","text":"Las consultas DQL (Data Query Language) son consultas utilizadas para recuperar datos de una base de datos. Las consultas DQL pueden ser bastante simples o pueden incluir cl\u00e1usulas adicionales para filtrar, ordenar o agrupar datos, as\u00ed como para realizar c\u00e1lculos y operaciones en los datos recuperados. Esto permite a los desarrolladores obtener los datos exactos que necesitan de una base de datos seg\u00fan los requisitos de la aplicaci\u00f3n. View: Select Join Grouping Include","title":"DQL"},{"location":"queries/Query-Language/#dml","text":"DML (Data Manipulation Language) queries are used to manipulate data in a database. Mainly, they include the following operations: INSERT: Used to add new records to a table. UPDATE: Used to modify existing records in a table. DELETE: Used to delete records from a table. View: Insert BulkInsert Update Delete","title":"DML"},{"location":"queries/Query-Language/#ddl","text":"DDL (Data Definition Language) are used to define, modify and delete database structures and related objects. Mainly, they include the following operations: CREATE: Used to create new objects in the database, such as tables, indexes, views and other objects. ALTER: Used to modify the structure of existing objects in the database, such as adding, modifying or deleting columns from a table, changing the data type of a column, renaming an object, among others. DROP: Used to delete database objects, such as tables, indexes, views and other objects. These queries are created and executed when you use the schema synchronization commands. View: Push Pull Fetch Introspect Incorporate","title":"DDL"},{"location":"queries/Query-Language/#example","text":"// Selecting countries filtering by region and including related states starting with 'F', with pagination Countries .filter(p=> p.region == region) .map(p=> [p.name,p.subregion,p.latitude,p.longitude]) // Selecting country fields .include(p => p.states.filter(p=> substr(p.name,1,1)==\"F\") // Including states starting with 'F' .map(p=> [p.name,p.latitude,p.longitude]) ) .page(1,3) // Pagination for countries, 3 records per page where the SQL equivalent of the query is: -- Selecting countries based on region and limiting to 3 records SELECT c.name AS `name`, c.subregion AS `subregion`, c.latitude AS `latitude`, c.longitude AS `longitude`, c.iso3 AS `__iso3` FROM Countries c WHERE c.region = ? LIMIT 0,3 -- Selecting states starting with 'F' belonging to the specified countries SELECT s.NAME AS \"name\", s.LATITUDE AS \"latitude\", s.LONGITUDE AS \"longitude\", s.COUNTRY_CODE AS \"__parentId\" FROM TBL_STATES s WHERE SUBSTR(s.NAME,1,1) = 'F' AND s.s.COUNTRY_CODE IN (?)","title":"Example:"},{"location":"queries/Query-Language/#advantage-of-query-language","text":"Use of the same programming language. No need to learn a new language. queries easy to write and understand. Use of the intellisense offered by the IDE to write the expressions. Avoid syntax errors.","title":"Advantage of Query Language"},{"location":"queries/Select/","text":"Select All queries are based on the schema from which it deduces the fields that an entity contains, primary key, indexes, relationships and constraints. Therefore, if you want to obtain all the fields of an entity, it is not necessary to specify them. All Fields from entity Selecting all fields from the Products entity Lambda: Products SQL Result: -- SQL query to select all fields from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p One Field Selecting only the 'name' field from the Products entity Lambda: Products.map(p => p.name) SQL Result: -- SQL query to select only the 'ProductName' field from the Products table SELECT p.ProductName FROM Products p First Selecting the first record from the Products entity Lambda: Products.first() SQL Result: -- SQL query to select the first record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p ORDER BY `id` LIMIT 0,1 Last Selecting the last record from the Products entity Lambda: Products.last() SQL Result: -- SQL query to select the last record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p ORDER BY `id` desc LIMIT 0,1 Take Selecting a single record from the Products entity Lambda: Products.take() SQL Result: -- SQL query to select a single record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p LIMIT 0,1 Distinct Selecting distinct values of quantity and category name from the Products entity Lambda: Products .distinct(p => ({ quantity: p.quantity, category: p.category.name })) .sort(p => p.category) SQL Result: -- SQL query to select distinct values of quantity and category name from the Products table SELECT DISTINCT p.QuantityPerUnit AS `quantity`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID ORDER BY `category` Pagination Selecting records with price greater than 10, mapping to name and category, sorting by category, and paginating Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) SQL Result: -- Selecci\u00f3n de productos y categor\u00edas por precio unitario -- Selecciona el nombre del producto y categor\u00eda -- Filtra productos con precio superior a ? -- Ordena por categor\u00eda ascendente -- Limita a 10 resultados SELECT p.ProductName AS name, c.CategoryName AS category FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > ? ORDER BY category asc LIMIT 0,10 Usage Node import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts a maximum price parameter // Filtering products based on price greater than the maximum price parameter // Mapping the results to extract name and category // Sorting the results by category // Paginating the results to get the first 10 items const query = (maxPrice:number) => Products .filter(p => p.price > maxPrice) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) const result = await orm.execute(query, {maxPrice:10}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })() CLI lambdaorm execute -q \"Products.filter(p=>p.price>10).map(p=>({name:p.name,category:p.category.name})).sort(p=>p.category).page(1, 10)\" -d \"{\\\"maxPrice\\\":10}\" Service curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Products.filter(p=>p.price>10).map(p=>({name:p.name,category:p.category.name})).sort(p=>p.category).page(1, 10)\", \"data\": \"{\\\"maxPrice\\\":10}\" }'","title":"Select"},{"location":"queries/Select/#select","text":"All queries are based on the schema from which it deduces the fields that an entity contains, primary key, indexes, relationships and constraints. Therefore, if you want to obtain all the fields of an entity, it is not necessary to specify them.","title":"Select"},{"location":"queries/Select/#all-fields-from-entity","text":"Selecting all fields from the Products entity Lambda: Products SQL Result: -- SQL query to select all fields from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p","title":"All Fields from entity"},{"location":"queries/Select/#one-field","text":"Selecting only the 'name' field from the Products entity Lambda: Products.map(p => p.name) SQL Result: -- SQL query to select only the 'ProductName' field from the Products table SELECT p.ProductName FROM Products p","title":"One Field"},{"location":"queries/Select/#first","text":"Selecting the first record from the Products entity Lambda: Products.first() SQL Result: -- SQL query to select the first record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p ORDER BY `id` LIMIT 0,1","title":"First"},{"location":"queries/Select/#last","text":"Selecting the last record from the Products entity Lambda: Products.last() SQL Result: -- SQL query to select the last record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p ORDER BY `id` desc LIMIT 0,1","title":"Last"},{"location":"queries/Select/#take","text":"Selecting a single record from the Products entity Lambda: Products.take() SQL Result: -- SQL query to select a single record from the Products table SELECT p.ProductID AS `id`, p.ProductName AS `name`, p.SupplierID AS `supplierId`, p.CategoryID AS `categoryId`, p.QuantityPerUnit AS `quantity`, p.UnitPrice AS `price`, p.UnitsInStock AS `inStock`, p.UnitsOnOrder AS `onOrder`, p.ReorderLevel AS `reorderLevel`, p.Discontinued AS `discontinued` FROM Products p LIMIT 0,1","title":"Take"},{"location":"queries/Select/#distinct","text":"Selecting distinct values of quantity and category name from the Products entity Lambda: Products .distinct(p => ({ quantity: p.quantity, category: p.category.name })) .sort(p => p.category) SQL Result: -- SQL query to select distinct values of quantity and category name from the Products table SELECT DISTINCT p.QuantityPerUnit AS `quantity`, c.CategoryName AS `category` FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID ORDER BY `category`","title":"Distinct"},{"location":"queries/Select/#pagination","text":"Selecting records with price greater than 10, mapping to name and category, sorting by category, and paginating Lambda: Products .filter(p => p.price > 10) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) SQL Result: -- Selecci\u00f3n de productos y categor\u00edas por precio unitario -- Selecciona el nombre del producto y categor\u00eda -- Filtra productos con precio superior a ? -- Ordena por categor\u00eda ascendente -- Limita a 10 resultados SELECT p.ProductName AS name, c.CategoryName AS category FROM Products p INNER JOIN Categories c ON c.CategoryID = p.CategoryID WHERE p.UnitPrice > ? ORDER BY category asc LIMIT 0,10","title":"Pagination"},{"location":"queries/Select/#usage","text":"","title":"Usage"},{"location":"queries/Select/#node","text":"import { orm } from '../../lib' import { Products } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // Defining a query function that accepts a maximum price parameter // Filtering products based on price greater than the maximum price parameter // Mapping the results to extract name and category // Sorting the results by category // Paginating the results to get the first 10 items const query = (maxPrice:number) => Products .filter(p => p.price > maxPrice) .map(p => ({ name: p.name, category: p.category.name})) .sort(p => p.category) .page(1, 10) const result = await orm.execute(query, {maxPrice:10}) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Node"},{"location":"queries/Select/#cli","text":"lambdaorm execute -q \"Products.filter(p=>p.price>10).map(p=>({name:p.name,category:p.category.name})).sort(p=>p.category).page(1, 10)\" -d \"{\\\"maxPrice\\\":10}\"","title":"CLI"},{"location":"queries/Select/#service","text":"curl -X POST \"http://localhost:9291/plan?format=beautiful\" -H \"Content-Type: application/json\" -d '{\"query\": \"Products.filter(p=>p.price>10).map(p=>({name:p.name,category:p.category.name})).sort(p=>p.category).page(1, 10)\", \"data\": \"{\\\"maxPrice\\\":10}\" }'","title":"Service"},{"location":"queries/Update/","text":"Update Since the queries are based on both the expression and the definition in the schema, in the case of wanting to update all the fields it is not necessary to define them since it is assumed if none are defined. The mapping to the source(s) is resolved according to the mapping configuration associated with each source in the schema. Update one entity complete Lambda: // Updates all fields of the Orders entity Orders.update() SQL Result: -- Updates all fields of the Orders entity where OrderID matches the provided parameter UPDATE Orders o SET CustomerID = ?, EmployeeID = ?, OrderDate = ?, RequiredDate = ?, ShippedDate = ?, ShipVia = ?, Freight = ?, ShipName = ?, ShipAddress = ?, ShipCity = ?, ShipRegion = ?, ShipPostalCode = ?, ShipCountry = ? WHERE o.OrderID = ? Update one field of entity in all records Lambda: // Updates the ShipPostalCode field in all records of the Orders entity Orders.updateAll({ postalCode: postalCode }) SQL Result: -- Updates the ShipPostalCode field in all records of the Orders entity UPDATE Orders o SET ShipPostalCode = ? Update one field of entity filtered Lambda: // Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID Orders.update({ name: entity.name }).filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? Update one field of entity filtered and related entity Lambda: // Updates the ShipName field of the Orders entity and updates related details Orders.update({ name: entity.name }).include(p => p.details(p => p)).filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? -- Updates UnitPrice, Quantity, and Discount fields in the Order Details table where OrderID and ProductID -- match the provided parameters UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,Quantity = o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = ? AND o1.ProductID = ?) Update one field of entity filtered and fields of related entity Lambda: // Updates the ShipName field of the Orders entity and updates related details' UnitPrice and ProductID Orders.update({ name: entity.name }) .include(p => p.details(p => ({ unitPrice: p.unitPrice, productId: p.productId }))) .filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? -- Updates UnitPrice and ProductID fields in the Order Details table where OrderID and ProductID -- match the provided parameters UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID = o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?) Update entity and multiples related entities Lambda: // Updates all fields of the Customers entity and includes related orders and details Customers.update().include(p => p.orders.include(p => p.details)) SQL Result: -- Updates all fields of the Customers entity where CustomerID matches the provided parameter UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName = ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode = ?,Country = ? WHERE c.CustomerID = ? -- Updates all fields of the Orders entity where CustomerID matches the provided parameter UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate = ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode = ?,ShipCountry = ? WHERE o.OrderID = ? -- Updates all fields of the Order Details table where OrderID and ProductID match the provided parameters UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID = ?) Code example import { orm } from '../../lib' import { Customers } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // entity customer with orders and order details const customer = { id: 'ALFKI', name: 'Alfreds Futterkiste', contact: 'Maria Anders', phone: 'Sales Representative', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', orders: [ { id: 1, customerId: 'ALFKI', employeeId: 6, orderDate: '1997-08-24T22:00:00.000Z', requiredDate: '1997-09-21T22:00:00.000Z', shippedDate: '1997-09-01T22:00:00.000Z', shipViaId: 1, freight: '29.4600', name: 'Alfreds Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 1, productId: 28, unitPrice: '45.6000', quantity: '15.0000', discount: '0.0000' }, { orderId: 1, productId: 39, unitPrice: '18.0000', quantity: '21.0000', discount: '0.0000' }, { orderId: 1, productId: 46, unitPrice: '12.0000', quantity: '2.0000', discount: '0.0000' } ] }, { id: 2, customerId: 'ALFKI', employeeId: 4, orderDate: '1997-10-02T22:00:00.000Z', requiredDate: '1997-10-30T23:00:00.000Z', shippedDate: '1997-10-12T22:00:00.000Z', shipViaId: 2, freight: '61.0200', name: 'Alfred-s Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 2, productId: 63, unitPrice: '43.9000', quantity: '20.0000', discount: '0.0000' } ] } ] } // Defining a query to update Customers and include related orders and details const query = () => Customers.update().include(p => p.orders.include(p => p.details)) // Executing the query using the ORM with the specified customer parameter const result = await orm.execute(query, customer) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Update"},{"location":"queries/Update/#update","text":"Since the queries are based on both the expression and the definition in the schema, in the case of wanting to update all the fields it is not necessary to define them since it is assumed if none are defined. The mapping to the source(s) is resolved according to the mapping configuration associated with each source in the schema.","title":"Update"},{"location":"queries/Update/#update-one-entity-complete","text":"Lambda: // Updates all fields of the Orders entity Orders.update() SQL Result: -- Updates all fields of the Orders entity where OrderID matches the provided parameter UPDATE Orders o SET CustomerID = ?, EmployeeID = ?, OrderDate = ?, RequiredDate = ?, ShippedDate = ?, ShipVia = ?, Freight = ?, ShipName = ?, ShipAddress = ?, ShipCity = ?, ShipRegion = ?, ShipPostalCode = ?, ShipCountry = ? WHERE o.OrderID = ?","title":"Update one entity complete"},{"location":"queries/Update/#update-one-field-of-entity-in-all-records","text":"Lambda: // Updates the ShipPostalCode field in all records of the Orders entity Orders.updateAll({ postalCode: postalCode }) SQL Result: -- Updates the ShipPostalCode field in all records of the Orders entity UPDATE Orders o SET ShipPostalCode = ?","title":"Update one field of entity in all records"},{"location":"queries/Update/#update-one-field-of-entity-filtered","text":"Lambda: // Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID Orders.update({ name: entity.name }).filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ?","title":"Update one field of entity filtered"},{"location":"queries/Update/#update-one-field-of-entity-filtered-and-related-entity","text":"Lambda: // Updates the ShipName field of the Orders entity and updates related details Orders.update({ name: entity.name }).include(p => p.details(p => p)).filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? -- Updates UnitPrice, Quantity, and Discount fields in the Order Details table where OrderID and ProductID -- match the provided parameters UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,Quantity = o1.Quantity,Discount = o1.Discount WHERE (o1.OrderID = ? AND o1.ProductID = ?)","title":"Update one field of entity filtered and related entity"},{"location":"queries/Update/#update-one-field-of-entity-filtered-and-fields-of-related-entity","text":"Lambda: // Updates the ShipName field of the Orders entity and updates related details' UnitPrice and ProductID Orders.update({ name: entity.name }) .include(p => p.details(p => ({ unitPrice: p.unitPrice, productId: p.productId }))) .filter(p => p.id === entity.id) SQL Result: -- Updates the ShipName field of the Orders entity where OrderID matches the provided entity's ID UPDATE Orders o SET ShipName = ? WHERE o.OrderID = ? -- Updates UnitPrice and ProductID fields in the Order Details table where OrderID and ProductID -- match the provided parameters UPDATE `Order Details` o1 SET UnitPrice = o1.UnitPrice,ProductID = o1.ProductID WHERE (o1.OrderID = ? AND o1.ProductID = ?)","title":"Update one field of entity filtered and fields of related entity"},{"location":"queries/Update/#update-entity-and-multiples-related-entities","text":"Lambda: // Updates all fields of the Customers entity and includes related orders and details Customers.update().include(p => p.orders.include(p => p.details)) SQL Result: -- Updates all fields of the Customers entity where CustomerID matches the provided parameter UPDATE Customers c SET CustomerID = ?,CompanyName = ?,ContactName = ?,ContactTitle = ?,Address = ?,City = ?,Region = ?,PostalCode = ?,Country = ? WHERE c.CustomerID = ? -- Updates all fields of the Orders entity where CustomerID matches the provided parameter UPDATE Orders o SET CustomerID = ?,EmployeeID = ?,OrderDate = ?,RequiredDate = ?,ShippedDate = ?,ShipVia = ?,Freight = ?,ShipName = ?,ShipAddress = ?,ShipCity = ?,ShipRegion = ?,ShipPostalCode = ?,ShipCountry = ? WHERE o.OrderID = ? -- Updates all fields of the Order Details table where OrderID and ProductID match the provided parameters UPDATE `Order Details` o1 SET OrderID = ?,ProductID = ?,UnitPrice = ?,Quantity = ?,Discount = ? WHERE (o1.OrderID = ? AND o1.ProductID = ?)","title":"Update entity and multiples related entities"},{"location":"queries/Update/#code-example","text":"import { orm } from '../../lib' import { Customers } from '../northwind/model/__model' (async () => { try { await orm.init('./config/northwind.yaml') // entity customer with orders and order details const customer = { id: 'ALFKI', name: 'Alfreds Futterkiste', contact: 'Maria Anders', phone: 'Sales Representative', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', orders: [ { id: 1, customerId: 'ALFKI', employeeId: 6, orderDate: '1997-08-24T22:00:00.000Z', requiredDate: '1997-09-21T22:00:00.000Z', shippedDate: '1997-09-01T22:00:00.000Z', shipViaId: 1, freight: '29.4600', name: 'Alfreds Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 1, productId: 28, unitPrice: '45.6000', quantity: '15.0000', discount: '0.0000' }, { orderId: 1, productId: 39, unitPrice: '18.0000', quantity: '21.0000', discount: '0.0000' }, { orderId: 1, productId: 46, unitPrice: '12.0000', quantity: '2.0000', discount: '0.0000' } ] }, { id: 2, customerId: 'ALFKI', employeeId: 4, orderDate: '1997-10-02T22:00:00.000Z', requiredDate: '1997-10-30T23:00:00.000Z', shippedDate: '1997-10-12T22:00:00.000Z', shipViaId: 2, freight: '61.0200', name: 'Alfred-s Futterkiste', address: 'Obere Str. 57', city: 'Berlin', region: null, postalCode: '12209', country: 'Germany', details: [ { orderId: 2, productId: 63, unitPrice: '43.9000', quantity: '20.0000', discount: '0.0000' } ] } ] } // Defining a query to update Customers and include related orders and details const query = () => Customers.update().include(p => p.orders.include(p => p.details)) // Executing the query using the ORM with the specified customer parameter const result = await orm.execute(query, customer) console.log(JSON.stringify(result, null, 2)) } catch (error:any) { console.error(error.stack) } finally { // Ending the ORM connection await orm.end() } })()","title":"Code example"},{"location":"queries/operator_operators/","text":"Operator Description + Addition - Negation - Subtraction * Multiplication / Division ** Exponentiation // Root % Modulus & Bitwise AND ^ Bitwise XOR ~ Bitwise NOT << Bitwise Left Shift >> Bitwise Right Shift == Equality != Inequality > Greater than < Less than >= Greater than or equal <= Less than or equal && Logical AND ! Logical NOT [] Index $ Environment Variable = Assignment += Assignment Addition -= Assignment Subtraction *= Assignment Multiplication /= Assignment Division **= Assignment Exponentiation //= Assignment Floor Division %= Assignment Modulus &= Assignment Bitwise AND = ^= Assignment Bitwise XOR <<= Assignment Bitwise Left Shift >>= Assignment Bitwise Right Shift === Equality !== Inequality <> Inequality Definition Operator + description: Addition return: T params: a: T b: T Operator - description: Negation return: number params: a: number Operator - description: Subtraction return: number params: a: number b: number Operator * description: Multiplication return: number params: a: number b: number Operator / description: Division return: number params: a: number b: number Operator ** description: Exponentiation return: number params: a: number b: number Operator // description: Root return: number params: a: number b: number Operator % description: Modulus return: number params: a: number b: number Operator & description: Bitwise AND return: number params: a: number b: number Operator | description: Bitwise OR return: number params: a: number b: number Operator ^ description: Bitwise XOR return: number params: a: number b: number Operator ~ description: Bitwise NOT return: number params: a: number Operator << description: Bitwise Left Shift return: number params: a: number b: number Operator >> description: Bitwise Right Shift return: number params: a: number b: number Operator == description: Equality return: boolean params: a: T b: T Operator != description: Inequality return: boolean params: a: T b: T Operator > description: Greater than return: boolean params: a: T b: T Operator < description: Less than return: boolean params: a: T b: T Operator >= description: Greater than or equal return: boolean params: a: T b: T Operator <= description: Less than or equal return: boolean params: a: T b: T Operator && description: Logical AND return: boolean params: a: boolean b: boolean Operator || description: Logical OR return: boolean params: a: boolean b: boolean Operator ! description: Logical NOT return: boolean params: a: boolean Operator [] description: Index return: T params: list: T[] index: any Operator $ description: Environment Variable return: string params: name: string Operator = description: Assignment return: T params: a: T b: T Operator += description: Assignment Addition return: number params: a: number b: number Operator -= description: Assignment Subtraction return: number params: a: number b: number Operator *= description: Assignment Multiplication return: number params: a: number b: number Operator /= description: Assignment Division return: number params: a: number b: number Operator **= description: Assignment Exponentiation return: number params: a: number b: number Operator //= description: Assignment Floor Division return: number params: a: number b: number Operator %= description: Assignment Modulus return: number params: a: number b: number Operator &= description: Assignment Bitwise AND return: number params: a: number b: number Operator |= description: Assignment Bitwise OR return: number params: a: number b: number Operator ^= description: Assignment Bitwise XOR return: number params: a: number b: number Operator <<= description: Assignment Bitwise Left Shift return: number params: a: number b: number Operator >>= description: Assignment Bitwise Right Shift return: number params: a: number b: number Operator === description: Equality return: boolean params: a: T b: T Operator !== description: Inequality return: boolean params: a: T b: T Operator <> description: Inequality return: boolean params: a: T b: T","title":"Operator operators"},{"location":"queries/operator_operators/#definition","text":"","title":"Definition"},{"location":"queries/operator_operators/#operator","text":"description: Addition return: T params: a: T b: T","title":"Operator +"},{"location":"queries/operator_operators/#operator-","text":"description: Negation return: number params: a: number","title":"Operator -"},{"location":"queries/operator_operators/#operator-_1","text":"description: Subtraction return: number params: a: number b: number","title":"Operator -"},{"location":"queries/operator_operators/#operator_1","text":"description: Multiplication return: number params: a: number b: number","title":"Operator *"},{"location":"queries/operator_operators/#operator_2","text":"description: Division return: number params: a: number b: number","title":"Operator /"},{"location":"queries/operator_operators/#operator_3","text":"description: Exponentiation return: number params: a: number b: number","title":"Operator **"},{"location":"queries/operator_operators/#operator_4","text":"description: Root return: number params: a: number b: number","title":"Operator //"},{"location":"queries/operator_operators/#operator_5","text":"description: Modulus return: number params: a: number b: number","title":"Operator %"},{"location":"queries/operator_operators/#operator_6","text":"description: Bitwise AND return: number params: a: number b: number","title":"Operator &amp;"},{"location":"queries/operator_operators/#operator_7","text":"description: Bitwise OR return: number params: a: number b: number","title":"Operator |"},{"location":"queries/operator_operators/#operator_8","text":"description: Bitwise XOR return: number params: a: number b: number","title":"Operator ^"},{"location":"queries/operator_operators/#operator_9","text":"description: Bitwise NOT return: number params: a: number","title":"Operator ~"},{"location":"queries/operator_operators/#operator_10","text":"description: Bitwise Left Shift return: number params: a: number b: number","title":"Operator &lt;&lt;"},{"location":"queries/operator_operators/#operator_11","text":"description: Bitwise Right Shift return: number params: a: number b: number","title":"Operator &gt;&gt;"},{"location":"queries/operator_operators/#operator_12","text":"description: Equality return: boolean params: a: T b: T","title":"Operator =="},{"location":"queries/operator_operators/#operator_13","text":"description: Inequality return: boolean params: a: T b: T","title":"Operator !="},{"location":"queries/operator_operators/#operator_14","text":"description: Greater than return: boolean params: a: T b: T","title":"Operator &gt;"},{"location":"queries/operator_operators/#operator_15","text":"description: Less than return: boolean params: a: T b: T","title":"Operator &lt;"},{"location":"queries/operator_operators/#operator_16","text":"description: Greater than or equal return: boolean params: a: T b: T","title":"Operator &gt;="},{"location":"queries/operator_operators/#operator_17","text":"description: Less than or equal return: boolean params: a: T b: T","title":"Operator &lt;="},{"location":"queries/operator_operators/#operator_18","text":"description: Logical AND return: boolean params: a: boolean b: boolean","title":"Operator &amp;&amp;"},{"location":"queries/operator_operators/#operator_19","text":"description: Logical OR return: boolean params: a: boolean b: boolean","title":"Operator ||"},{"location":"queries/operator_operators/#operator_20","text":"description: Logical NOT return: boolean params: a: boolean","title":"Operator !"},{"location":"queries/operator_operators/#operator_21","text":"description: Index return: T params: list: T[] index: any","title":"Operator []"},{"location":"queries/operator_operators/#operator_22","text":"description: Environment Variable return: string params: name: string","title":"Operator $"},{"location":"queries/operator_operators/#operator_23","text":"description: Assignment return: T params: a: T b: T","title":"Operator ="},{"location":"queries/operator_operators/#operator_24","text":"description: Assignment Addition return: number params: a: number b: number","title":"Operator +="},{"location":"queries/operator_operators/#operator-_2","text":"description: Assignment Subtraction return: number params: a: number b: number","title":"Operator -="},{"location":"queries/operator_operators/#operator_25","text":"description: Assignment Multiplication return: number params: a: number b: number","title":"Operator *="},{"location":"queries/operator_operators/#operator_26","text":"description: Assignment Division return: number params: a: number b: number","title":"Operator /="},{"location":"queries/operator_operators/#operator_27","text":"description: Assignment Exponentiation return: number params: a: number b: number","title":"Operator **="},{"location":"queries/operator_operators/#operator_28","text":"description: Assignment Floor Division return: number params: a: number b: number","title":"Operator //="},{"location":"queries/operator_operators/#operator_29","text":"description: Assignment Modulus return: number params: a: number b: number","title":"Operator %="},{"location":"queries/operator_operators/#operator_30","text":"description: Assignment Bitwise AND return: number params: a: number b: number","title":"Operator &amp;="},{"location":"queries/operator_operators/#operator_31","text":"description: Assignment Bitwise OR return: number params: a: number b: number","title":"Operator |="},{"location":"queries/operator_operators/#operator_32","text":"description: Assignment Bitwise XOR return: number params: a: number b: number","title":"Operator ^="},{"location":"queries/operator_operators/#operator_33","text":"description: Assignment Bitwise Left Shift return: number params: a: number b: number","title":"Operator &lt;&lt;="},{"location":"queries/operator_operators/#operator_34","text":"description: Assignment Bitwise Right Shift return: number params: a: number b: number","title":"Operator &gt;&gt;="},{"location":"queries/operator_operators/#operator_35","text":"description: Equality return: boolean params: a: T b: T","title":"Operator ==="},{"location":"queries/operator_operators/#operator_36","text":"description: Inequality return: boolean params: a: T b: T","title":"Operator !=="},{"location":"queries/operator_operators/#operator_37","text":"description: Inequality return: boolean params: a: T b: T","title":"Operator &lt;&gt;"},{"location":"queries/operatorsAndFunctions/Bitwise/","text":"Operator Description ~ bitNot & bitAnd | bitOr ^ bitXor << leftShift >> rightShift Examples Example Result Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude & 1 }) [{\"result\":1}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude 1 }) Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: ~ p.longitude }) [{\"result\":54}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude << 1 }) [{\"result\":18446744073709552000}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude ^ 1 }) [{\"result\":18446744073709552000}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude >> 1 }) [{\"result\":9223372036854776000}] Sentences Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise AND operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude & 1 }) SQL Result: SELECT c.longitude & 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise OR operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude | 1 }) SQL Result: SELECT c.longitude | 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise NOT operation of the longitude. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: ~ p.longitude }) SQL Result: SELECT ~ c.longitude AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise left shift operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude << 1 }) SQL Result: SELECT c.longitude << 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise XOR operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude ^ 1 }) SQL Result: SELECT c.longitude ^ 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise right shift operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude >> 1 }) SQL Result: SELECT c.longitude >> 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Definition Operator ~ description: bitNot return: boolean params: value: boolean Operator & description: bitAnd return: number params: a: number b: number Operator | description: bitOr return: number params: a: number b: number Operator ^ description: bitXor return: number params: a: number b: number Operator << description: leftShift return: number params: a: number b: number Operator >> description: rightShift return: number params: a: number b: number","title":"Bitwise"},{"location":"queries/operatorsAndFunctions/Bitwise/#examples","text":"Example Result Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude & 1 }) [{\"result\":1}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude 1 }) Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: ~ p.longitude }) [{\"result\":54}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude << 1 }) [{\"result\":18446744073709552000}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude ^ 1 }) [{\"result\":18446744073709552000}] Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude >> 1 }) [{\"result\":9223372036854776000}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Bitwise/#sentences","text":"Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise AND operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude & 1 }) SQL Result: SELECT c.longitude & 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise OR operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude | 1 }) SQL Result: SELECT c.longitude | 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise NOT operation of the longitude. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: ~ p.longitude }) SQL Result: SELECT ~ c.longitude AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise left shift operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude << 1 }) SQL Result: SELECT c.longitude << 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise XOR operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude ^ 1 }) SQL Result: SELECT c.longitude ^ 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1 Lambda: Query to select the first record from the Countries entity where the iso3 is equal to \"BRA\" and the result is the bitwise right shift operation between the longitude and 1. Countries.filter(p=> p.iso3==\"BRA\").first(p=> {result: p.longitude >> 1 }) SQL Result: SELECT c.longitude >> 1 AS result FROM Countries c WHERE c.iso3 = 'BRA' ORDER BY result asc LIMIT 0,1","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Bitwise/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator","text":"description: bitNot return: boolean params: value: boolean","title":"Operator ~"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator_1","text":"description: bitAnd return: number params: a: number b: number","title":"Operator &amp;"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator_2","text":"description: bitOr return: number params: a: number b: number","title":"Operator |"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator_3","text":"description: bitXor return: number params: a: number b: number","title":"Operator ^"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator_4","text":"description: leftShift return: number params: a: number b: number","title":"Operator &lt;&lt;"},{"location":"queries/operatorsAndFunctions/Bitwise/#operator_5","text":"description: rightShift return: number params: a: number b: number","title":"Operator &gt;&gt;"},{"location":"queries/operatorsAndFunctions/Comparison/","text":"Operator Description == === equal != !== <> notEqual > greaterThan < lessThan >= greaterThanOrEqual <= lessThanOrEqual Function Description between Specifies how to retrieve values from an expression within a specific range in/includes Is used to reduce the use of multiple OR conditions Examples Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> p.iso3 === \"BRA\").map(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> p.latitude < -9 && p.latitude > -11 && p.longitude == -55 ).first(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> between(p.latitude,-11,-9) && p.longitude == -55 ).first(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> in(p.iso3,[\"BRA\",\"ARG\"])).map(p=> p.name) [{\"name\":\"Argentina\"},{\"name\":\"Brazil\"}] Sentences Lambda: Query to select the name from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the name from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 === \"BRA\").map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the name from the Countries entity where the latitude is less than -9 and greater than -11 and the longitude is equal to -55. Countries.filter(p=> p.latitude < -9 && p.latitude > -11 && p.longitude == -55 ).first(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE (c.latitude < -9 AND (c.latitude > -11 AND c.longitude = -55)) ORDER BY c.name asc LIMIT 0,1 Lambda: Query to select the name from the Countries entity where the latitude is between -11 and -9 and the longitude is equal to -55. Countries.filter(p=> between(p.latitude,-11,-9) && p.longitude == -55 ).first(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE (c.latitude BETWEEN -11 AND -9 AND c.longitude = -55) ORDER BY c.name asc LIMIT 0,1 ```s **Lambda:** Query to select the name from the Countries entity where the iso3 is equal to \"BRA\" or \"ARG\". ```js Countries.filter(p=> in(p.iso3,[\"BRA\",\"ARG\"])).map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 IN ('BRA', 'ARG') Definition Operator == description: equal return: boolean params: a: T b: T Operator === description: equal return: boolean params: a: T b: T Operator != description: notEqual return: boolean params: a: T b: T Operator !== description: notEqual return: boolean params: a: T b: T Operator <> description: notEqual return: boolean params: a: T b: T Operator > description: greaterThan return: boolean params: a: T b: T Operator < description: lessThan return: boolean params: a: T b: T Operator >= description: greaterThanOrEqual return: boolean params: a: T b: T Operator <= description: lessThanOrEqual return: boolean params: a: T b: T between description: Specifies how to retrieve values from an expression within a specific range. deterministic: true return: boolean params: value: T from: T to: T includes description: Determines if an array includes a certain element deterministic: true return: boolean params: value: T list: T[] in description: Determines if an array includes a certain element deterministic: true return: boolean params: value: T list: T[]","title":"Comparison"},{"location":"queries/operatorsAndFunctions/Comparison/#examples","text":"Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> p.iso3 === \"BRA\").map(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> p.latitude < -9 && p.latitude > -11 && p.longitude == -55 ).first(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> between(p.latitude,-11,-9) && p.longitude == -55 ).first(p=> p.name) [{\"name\":\"Brazil\"}] Countries.filter(p=> in(p.iso3,[\"BRA\",\"ARG\"])).map(p=> p.name) [{\"name\":\"Argentina\"},{\"name\":\"Brazil\"}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Comparison/#sentences","text":"Lambda: Query to select the name from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the name from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 === \"BRA\").map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the name from the Countries entity where the latitude is less than -9 and greater than -11 and the longitude is equal to -55. Countries.filter(p=> p.latitude < -9 && p.latitude > -11 && p.longitude == -55 ).first(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE (c.latitude < -9 AND (c.latitude > -11 AND c.longitude = -55)) ORDER BY c.name asc LIMIT 0,1 Lambda: Query to select the name from the Countries entity where the latitude is between -11 and -9 and the longitude is equal to -55. Countries.filter(p=> between(p.latitude,-11,-9) && p.longitude == -55 ).first(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE (c.latitude BETWEEN -11 AND -9 AND c.longitude = -55) ORDER BY c.name asc LIMIT 0,1 ```s **Lambda:** Query to select the name from the Countries entity where the iso3 is equal to \"BRA\" or \"ARG\". ```js Countries.filter(p=> in(p.iso3,[\"BRA\",\"ARG\"])).map(p=> p.name) SQL Result: SELECT c.name AS name FROM Countries c WHERE c.iso3 IN ('BRA', 'ARG')","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Comparison/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Comparison/#operator","text":"description: equal return: boolean params: a: T b: T","title":"Operator =="},{"location":"queries/operatorsAndFunctions/Comparison/#operator_1","text":"description: equal return: boolean params: a: T b: T","title":"Operator ==="},{"location":"queries/operatorsAndFunctions/Comparison/#operator_2","text":"description: notEqual return: boolean params: a: T b: T","title":"Operator !="},{"location":"queries/operatorsAndFunctions/Comparison/#operator_3","text":"description: notEqual return: boolean params: a: T b: T","title":"Operator !=="},{"location":"queries/operatorsAndFunctions/Comparison/#operator_4","text":"description: notEqual return: boolean params: a: T b: T","title":"Operator &lt;&gt;"},{"location":"queries/operatorsAndFunctions/Comparison/#operator_5","text":"description: greaterThan return: boolean params: a: T b: T","title":"Operator &gt;"},{"location":"queries/operatorsAndFunctions/Comparison/#operator_6","text":"description: lessThan return: boolean params: a: T b: T","title":"Operator &lt;"},{"location":"queries/operatorsAndFunctions/Comparison/#operator_7","text":"description: greaterThanOrEqual return: boolean params: a: T b: T","title":"Operator &gt;="},{"location":"queries/operatorsAndFunctions/Comparison/#operator_8","text":"description: lessThanOrEqual return: boolean params: a: T b: T","title":"Operator &lt;="},{"location":"queries/operatorsAndFunctions/Comparison/#between","text":"description: Specifies how to retrieve values from an expression within a specific range. deterministic: true return: boolean params: value: T from: T to: T","title":"between"},{"location":"queries/operatorsAndFunctions/Comparison/#includes","text":"description: Determines if an array includes a certain element deterministic: true return: boolean params: value: T list: T[]","title":"includes"},{"location":"queries/operatorsAndFunctions/Comparison/#in","text":"description: Determines if an array includes a certain element deterministic: true return: boolean params: value: T list: T[]","title":"in"},{"location":"queries/operatorsAndFunctions/Datetime/","text":"Function Description curTime Get the current time today Get the current date now Get the current dateTime dateToString Convert date to string with ISO 8601 format time Convert string to time date Convert string to date dateTime Convert string to dateTime year Get year from date month Get month from date day Get day of month from date weekday Get date of week from date hour Get hour from date minute Get minute from date second Get second from date millisecond Get millisecond from date addYear Add years to a date addMonth Add months to a date addDay Add days to a date addHour Add hours to a date addMinute Add minutes to a date addSecond Add seconds to a date addMillisecond Add milliseconds to a date addTime Add time to a date subtractTime subtract time to a date dayDiff difference between two dates in days hourDiff difference between two dates in hours secondDiff difference between two dates in seconds millisecondDiff difference between two dates in milliseconds dayToDate days to Date hourToDate hours to Date secondToDate seconds to Date millisecondToDate milliseconds to Date Examples Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:today()}) [{\"result\":\"2022-08-14T22:00:00.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:now()}) [{\"result\":\"2022-08-15T09:54:22.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:curTime()}) [{\"result\":\"11:54:22\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:time(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"00:20:21\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:date(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"2021-09-05T22:00:00.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateTime(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"2021-09-06T12:39:11.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateToString(dateTime(\"2021-09-06T14:39:11.444Z\"))}) [{\"result\":\"2021-09-06T14:39:11Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:year(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":2021}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:month(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":9}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:day(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":6}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:weekday(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":2}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hour(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":0}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:minute(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":20}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:second(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":21}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecond(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":0}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addYear(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2023-09-06 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMonth(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-11-06 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addDay(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-08 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addHour(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 16:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMinute(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:41:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addSecond(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:39:13.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMillisecond(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:39:11.446000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) [{\"result\":\"08:42:33\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:subtractTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) [{\"result\":\"-08:01:51\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":4}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":353341}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":353341000}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayToDate(2000)}) [{\"result\":\"1975-06-24T00:00:00Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourToDate(2000)}) [{\"result\":\"1970-03-25T08:00:00Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondToDate(2000)}) [{\"result\":\"1970-01-01T00:33:20Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondToDate(2000)}) [{\"result\":\"1970-01-01T00:00:02Z\"}] Sentences Lambda: Query to select the current date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:today()}) SQL Result: SELECT CURDATE() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the current dateTime from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:now()}) SQL Result: SELECT NOW() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the current time from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:curTime()}) SQL Result: SELECT CURTIME() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the time from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:time(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', TIME) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:date(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', DATE) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the dateTime from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateTime(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', DATETIME) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date as string from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateToString(dateTime(\"2021-09-06T14:39:11.444Z\"))}) SQL Result: SELECT DATE_FORMAT(CONVERT('2021-09-06T14:39:11.444Z', DATETIME), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the year from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:year(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(YEAR FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the month from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:month(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(MONTH FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the day from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:day(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT DAYOFMONTH('2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date of week from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:weekday(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT DAYOFWEEK('2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the hour from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hour(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(HOUR FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the minute from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:minute(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(MINUTE FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the second from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:second(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(SECOND FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the millisecond from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecond(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT ROUND(EXTRACT(MICROSECOND FROM '2021-09-06T14:39:11.444Z')/1000,0) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add years to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addYear(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 YEAR) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add months to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMonth(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 MONTH) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add days to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addDay(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 DAY) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add hours to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addHour(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' HOUR AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add minutes to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMinute(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' MINUTE AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add seconds to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addSecond(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' SECOND AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add milliseconds to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMillisecond(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL (2 * 1000) MICROSECOND) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add time to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) SQL Result: SELECT ADDTIME('2021-09-06T14:39:11.444Z','08:22:12') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to subtract time to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:subtractTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) SQL Result: SELECT SUBTIME('2021-09-06T14:39:11.444Z','08:22:12') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in days from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT DATEDIFF('2021-09-06T14:39:11','2021-09-02T12:30:10') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in hours from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT TIMESTAMPDIFF(HOUR, '2021-09-02T12:30:10','2021-09-06T14:39:11') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in seconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT TIMESTAMPDIFF(SECOND, '2021-09-02T12:30:10','2021-09-06T14:39:11') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT ROUND(TIMESTAMPDIFF(MICROSECOND, '2021-09-02T12:30:10','2021-09-06T14:39:11')/1000,0) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from days from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000*24*3600), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from hours from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000*3600), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from seconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from milliseconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000/1000), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Definition curTime description: Get the current time deterministic: true return: Date today description: Get the current date deterministic: true return: Date now description: Get the current dateTime deterministic: true return: Date dateToString description: Convert date to string with ISO 8601 format deterministic: true return: string params: value: Date time description: Convert string to time deterministic: true return: Date params: value: string date description: Convert string to date deterministic: true return: Date params: value: string dateTime description: Convert string to dateTime deterministic: true return: Date params: value: string year description: Get year from date deterministic: true return: number params: value: Date month description: Get month from date deterministic: true return: number params: value: Date day description: Get day of month from date deterministic: true return: number params: value: Date weekday description: get date of week from date deterministic: true return: number params: value: Date hour description: get hour from date deterministic: true return: number params: value: Date minute description: Get minute from date deterministic: true return: number params: value: Date second description: Get second from date deterministic: true return: number params: value: Date millisecond description: Get millisecond from date deterministic: true return: number params: value: Date addYear description: Add years to a date deterministic: true return: Date params: date: Date value: number addMonth description: Add months to a date deterministic: true return: Date params: date: Date value: number addDay description: Add days to a date deterministic: true return: Date params: date: Date value: number addHour description: Add hours to a date deterministic: true return: Date params: date: Date value: number addMinute description: Add minutes to a date deterministic: true return: Date params: date: Date value: number addSecond description: Add seconds to a date deterministic: true return: Date params: date: Date value: number addMillisecond description: Add milliseconds to a date deterministic: true return: Date params: date: Date value: number addTime description: Add time to a date deterministic: true return: Date params: date: Date time: Date subtractTime description: subtract time to a date deterministic: true return: Date params: date: Date time: Date dayDiff description: difference between two dates in days deterministic: true return: Date params: date: Date date2: Date hourDiff description: difference between two dates in hours deterministic: true return: Date params: time: Date time2: Date secondDiff description: difference between two dates in seconds deterministic: true return: Date params: time: Date time2: Date millisecondDiff description: difference between two dates in milliseconds deterministic: true return: Date params: time: Date time2: Date dayToDate description: days to Date deterministic: true return: Date params: value: number hourToDate description: hours to Date deterministic: true return: Date params: value: number secondToDate description: seconds to Date deterministic: true return: Date params: value: number millisecondToDate description: milliseconds to Date deterministic: true return: Date params: value: number","title":"Datetime"},{"location":"queries/operatorsAndFunctions/Datetime/#examples","text":"Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:today()}) [{\"result\":\"2022-08-14T22:00:00.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:now()}) [{\"result\":\"2022-08-15T09:54:22.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:curTime()}) [{\"result\":\"11:54:22\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:time(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"00:20:21\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:date(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"2021-09-05T22:00:00.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateTime(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":\"2021-09-06T12:39:11.000Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateToString(dateTime(\"2021-09-06T14:39:11.444Z\"))}) [{\"result\":\"2021-09-06T14:39:11Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:year(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":2021}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:month(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":9}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:day(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":6}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:weekday(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":2}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hour(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":0}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:minute(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":20}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:second(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":21}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecond(\"2021-09-06T14:39:11.444Z\")}) [{\"result\":0}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addYear(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2023-09-06 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMonth(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-11-06 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addDay(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-08 14:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addHour(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 16:39:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMinute(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:41:11.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addSecond(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:39:13.444000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMillisecond(\"2021-09-06T14:39:11.444Z\",2)}) [{\"result\":\"2021-09-06 14:39:11.446000\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) [{\"result\":\"08:42:33\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:subtractTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) [{\"result\":\"-08:01:51\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":4}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":353341}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) [{\"result\":353341000}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayToDate(2000)}) [{\"result\":\"1975-06-24T00:00:00Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourToDate(2000)}) [{\"result\":\"1970-03-25T08:00:00Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondToDate(2000)}) [{\"result\":\"1970-01-01T00:33:20Z\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondToDate(2000)}) [{\"result\":\"1970-01-01T00:00:02Z\"}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Datetime/#sentences","text":"Lambda: Query to select the current date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:today()}) SQL Result: SELECT CURDATE() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the current dateTime from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:now()}) SQL Result: SELECT NOW() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the current time from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:curTime()}) SQL Result: SELECT CURTIME() AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the time from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:time(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', TIME) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:date(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', DATE) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the dateTime from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateTime(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT CONVERT('2021-09-06T14:39:11.444Z', DATETIME) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date as string from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dateToString(dateTime(\"2021-09-06T14:39:11.444Z\"))}) SQL Result: SELECT DATE_FORMAT(CONVERT('2021-09-06T14:39:11.444Z', DATETIME), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the year from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:year(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(YEAR FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the month from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:month(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(MONTH FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the day from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:day(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT DAYOFMONTH('2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the date of week from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:weekday(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT DAYOFWEEK('2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the hour from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hour(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(HOUR FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the minute from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:minute(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(MINUTE FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the second from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:second(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT EXTRACT(SECOND FROM '2021-09-06T14:39:11.444Z') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to select the millisecond from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecond(\"2021-09-06T14:39:11.444Z\")}) SQL Result: SELECT ROUND(EXTRACT(MICROSECOND FROM '2021-09-06T14:39:11.444Z')/1000,0) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add years to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addYear(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 YEAR) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add months to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMonth(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 MONTH) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add days to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addDay(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL 2 DAY) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add hours to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addHour(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' HOUR AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add minutes to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMinute(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' MINUTE AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add seconds to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addSecond(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT '2021-09-06T14:39:11.444Z' + interval '2' SECOND AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add milliseconds to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addMillisecond(\"2021-09-06T14:39:11.444Z\",2)}) SQL Result: SELECT DATE_ADD('2021-09-06T14:39:11.444Z', INTERVAL (2 * 1000) MICROSECOND) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to add time to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:addTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) SQL Result: SELECT ADDTIME('2021-09-06T14:39:11.444Z','08:22:12') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to subtract time to a date from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:subtractTime(\"2021-09-06T14:39:11.444Z\",\"08:22:12\")}) SQL Result: SELECT SUBTIME('2021-09-06T14:39:11.444Z','08:22:12') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in days from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT DATEDIFF('2021-09-06T14:39:11','2021-09-02T12:30:10') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in hours from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT TIMESTAMPDIFF(HOUR, '2021-09-02T12:30:10','2021-09-06T14:39:11') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the difference between two dates in seconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT TIMESTAMPDIFF(SECOND, '2021-09-02T12:30:10','2021-09-06T14:39:11') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondDiff(\"2021-09-06T14:39:11\",\"2021-09-02T12:30:10\")}) SQL Result: SELECT ROUND(TIMESTAMPDIFF(MICROSECOND, '2021-09-02T12:30:10','2021-09-06T14:39:11')/1000,0) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from days from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:dayToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000*24*3600), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from hours from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:hourToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000*3600), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from seconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:secondToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the date from milliseconds from the Countries entity where the iso3 is equal to \"BRA\". Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result:millisecondToDate(2000)}) SQL Result: SELECT DATE_FORMAT(FROM_UNIXTIME(2000/1000), '%Y-%m-%dT%TZ') AS result FROM Countries c WHERE c.iso3 = 'BRA'","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Datetime/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Datetime/#curtime","text":"description: Get the current time deterministic: true return: Date","title":"curTime"},{"location":"queries/operatorsAndFunctions/Datetime/#today","text":"description: Get the current date deterministic: true return: Date","title":"today"},{"location":"queries/operatorsAndFunctions/Datetime/#now","text":"description: Get the current dateTime deterministic: true return: Date","title":"now"},{"location":"queries/operatorsAndFunctions/Datetime/#datetostring","text":"description: Convert date to string with ISO 8601 format deterministic: true return: string params: value: Date","title":"dateToString"},{"location":"queries/operatorsAndFunctions/Datetime/#time","text":"description: Convert string to time deterministic: true return: Date params: value: string","title":"time"},{"location":"queries/operatorsAndFunctions/Datetime/#date","text":"description: Convert string to date deterministic: true return: Date params: value: string","title":"date"},{"location":"queries/operatorsAndFunctions/Datetime/#datetime","text":"description: Convert string to dateTime deterministic: true return: Date params: value: string","title":"dateTime"},{"location":"queries/operatorsAndFunctions/Datetime/#year","text":"description: Get year from date deterministic: true return: number params: value: Date","title":"year"},{"location":"queries/operatorsAndFunctions/Datetime/#month","text":"description: Get month from date deterministic: true return: number params: value: Date","title":"month"},{"location":"queries/operatorsAndFunctions/Datetime/#day","text":"description: Get day of month from date deterministic: true return: number params: value: Date","title":"day"},{"location":"queries/operatorsAndFunctions/Datetime/#weekday","text":"description: get date of week from date deterministic: true return: number params: value: Date","title":"weekday"},{"location":"queries/operatorsAndFunctions/Datetime/#hour","text":"description: get hour from date deterministic: true return: number params: value: Date","title":"hour"},{"location":"queries/operatorsAndFunctions/Datetime/#minute","text":"description: Get minute from date deterministic: true return: number params: value: Date","title":"minute"},{"location":"queries/operatorsAndFunctions/Datetime/#second","text":"description: Get second from date deterministic: true return: number params: value: Date","title":"second"},{"location":"queries/operatorsAndFunctions/Datetime/#millisecond","text":"description: Get millisecond from date deterministic: true return: number params: value: Date","title":"millisecond"},{"location":"queries/operatorsAndFunctions/Datetime/#addyear","text":"description: Add years to a date deterministic: true return: Date params: date: Date value: number","title":"addYear"},{"location":"queries/operatorsAndFunctions/Datetime/#addmonth","text":"description: Add months to a date deterministic: true return: Date params: date: Date value: number","title":"addMonth"},{"location":"queries/operatorsAndFunctions/Datetime/#addday","text":"description: Add days to a date deterministic: true return: Date params: date: Date value: number","title":"addDay"},{"location":"queries/operatorsAndFunctions/Datetime/#addhour","text":"description: Add hours to a date deterministic: true return: Date params: date: Date value: number","title":"addHour"},{"location":"queries/operatorsAndFunctions/Datetime/#addminute","text":"description: Add minutes to a date deterministic: true return: Date params: date: Date value: number","title":"addMinute"},{"location":"queries/operatorsAndFunctions/Datetime/#addsecond","text":"description: Add seconds to a date deterministic: true return: Date params: date: Date value: number","title":"addSecond"},{"location":"queries/operatorsAndFunctions/Datetime/#addmillisecond","text":"description: Add milliseconds to a date deterministic: true return: Date params: date: Date value: number","title":"addMillisecond"},{"location":"queries/operatorsAndFunctions/Datetime/#addtime","text":"description: Add time to a date deterministic: true return: Date params: date: Date time: Date","title":"addTime"},{"location":"queries/operatorsAndFunctions/Datetime/#subtracttime","text":"description: subtract time to a date deterministic: true return: Date params: date: Date time: Date","title":"subtractTime"},{"location":"queries/operatorsAndFunctions/Datetime/#daydiff","text":"description: difference between two dates in days deterministic: true return: Date params: date: Date date2: Date","title":"dayDiff"},{"location":"queries/operatorsAndFunctions/Datetime/#hourdiff","text":"description: difference between two dates in hours deterministic: true return: Date params: time: Date time2: Date","title":"hourDiff"},{"location":"queries/operatorsAndFunctions/Datetime/#seconddiff","text":"description: difference between two dates in seconds deterministic: true return: Date params: time: Date time2: Date","title":"secondDiff"},{"location":"queries/operatorsAndFunctions/Datetime/#milliseconddiff","text":"description: difference between two dates in milliseconds deterministic: true return: Date params: time: Date time2: Date","title":"millisecondDiff"},{"location":"queries/operatorsAndFunctions/Datetime/#daytodate","text":"description: days to Date deterministic: true return: Date params: value: number","title":"dayToDate"},{"location":"queries/operatorsAndFunctions/Datetime/#hourtodate","text":"description: hours to Date deterministic: true return: Date params: value: number","title":"hourToDate"},{"location":"queries/operatorsAndFunctions/Datetime/#secondtodate","text":"description: seconds to Date deterministic: true return: Date params: value: number","title":"secondToDate"},{"location":"queries/operatorsAndFunctions/Datetime/#millisecondtodate","text":"description: milliseconds to Date deterministic: true return: Date params: value: number","title":"millisecondToDate"},{"location":"queries/operatorsAndFunctions/Group/","text":"Function Description avg Calculates the average of the specified columns in a set of rows count Calculating the number of rows in a set. first Returns the first value of the selected column last Returns the last value of the selected column. max Calculating the maximum. min Calculating the minimum. sum Calculating the sum. Examples Countries.filter(p=> p.region == \"Americas\").map(p=> {result:count(1)}) [{\"result\":57}] Countries.map(p=> {region:p.region,countries:count(1)})| [{\"region\":\"\",\"countries\":2} ,{\"region\":\"Africa\",\"countries\":60} ,{\"region\":\"Americas\",\"countries\":57} ,{\"region\":\"Asia\",\"countries\":50} ,{\"region\":\"Europe\",\"countries\":53} ,{\"region\":\"Oceania\",\"countries\":27} ,{\"region\":\"Polar\",\"countries\":1} ] Countries.map(p=> {region:p.region,max:max(p.latitude)}) [{\"region\":\"\",\"max\":-53.1} ,{\"region\":\"Africa\",\"max\":34} ,{\"region\":\"Americas\",\"max\":72} ,{\"region\":\"Asia\",\"max\":48} ,{\"region\":\"Europe\",\"max\":78} ,{\"region\":\"Oceania\",\"max\":15.2} ,{\"region\":\"Polar\",\"max\":-74.65} ] Countries.map(p=> {region:p.region,min:min(p.latitude)}) [{\"region\":\"\",\"min\":-54.4333} ,{\"region\":\"Africa\",\"min\":-49.25} ,{\"region\":\"Americas\",\"min\":-54.5} ,{\"region\":\"Asia\",\"min\":-8.8333} ,{\"region\":\"Europe\",\"min\":35} ,{\"region\":\"Oceania\",\"min\":-41} ,{\"region\":\"Polar\",\"min\":-74.65} ] Countries.map(p=> {region:p.region,avg:avg(p.latitude)}) [{\"region\":\"\",\"avg\":-53.76665} ,{\"region\":\"Africa\",\"avg\":1.283335} ,{\"region\":\"Americas\",\"avg\":10.42610526} ,{\"region\":\"Asia\",\"avg\":25.822002} ,{\"region\":\"Europe\",\"avg\":49.35021321} ,{\"region\":\"Oceania\",\"avg\":-10.93023704} ,{\"region\":\"Polar\",\"avg\":-74.65} ] Sentences Lambda: Query to get the count of countries in the Americas region Countries.filter(p=> p.region == \"Americas\").map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE c.region = 'Americas' Lambda: Query to get the count of countries in each region Countries.map(p=> {region:p.region,countries:count(1)}) SQL Result: SELECT c.region AS region, COUNT(1) AS countries FROM Countries c GROUP BY c.region Lambda: Query to get the maximum latitude of countries in each region Countries.map(p=> {region:p.region,max:max(p.latitude)}) SQL Result: SELECT c.region AS region, MAX(c.latitude) AS max FROM Countries c GROUP BY c.region Lambda: Query to get the minimum latitude of countries in each region Countries.map(p=> {region:p.region,min:min(p.latitude)}) SQL Result: SELECT c.region AS region, MIN(c.latitude) AS min FROM Countries c GROUP BY c.region Lambda: Query to get the average latitude of countries in each region Countries.map(p=> {region:p.region,avg:avg(p.latitude)}) SQL Result: SELECT c.region AS region, AVG(c.latitude) AS avg FROM Countries c GROUP BY c.region Definition avg description: Calculates the average of the specified columns in a set of rows deterministic: true return: number params: value: number count description: Calculating the number of rows in a set. deterministic: true return: number params: value: any first description: Returns the first value of the selected column deterministic: true return: T params: value: T last description: Returns the last value of the selected column. deterministic: true return: T params: value: T max description: Calculating the maximum. deterministic: true return: T params: value: T min description: Calculating the minimum. deterministic: true return: T params: value: T sum description: Calculating the sum. deterministic: true return: number params: value: number","title":"Group"},{"location":"queries/operatorsAndFunctions/Group/#examples","text":"Countries.filter(p=> p.region == \"Americas\").map(p=> {result:count(1)}) [{\"result\":57}] Countries.map(p=> {region:p.region,countries:count(1)})| [{\"region\":\"\",\"countries\":2} ,{\"region\":\"Africa\",\"countries\":60} ,{\"region\":\"Americas\",\"countries\":57} ,{\"region\":\"Asia\",\"countries\":50} ,{\"region\":\"Europe\",\"countries\":53} ,{\"region\":\"Oceania\",\"countries\":27} ,{\"region\":\"Polar\",\"countries\":1} ] Countries.map(p=> {region:p.region,max:max(p.latitude)}) [{\"region\":\"\",\"max\":-53.1} ,{\"region\":\"Africa\",\"max\":34} ,{\"region\":\"Americas\",\"max\":72} ,{\"region\":\"Asia\",\"max\":48} ,{\"region\":\"Europe\",\"max\":78} ,{\"region\":\"Oceania\",\"max\":15.2} ,{\"region\":\"Polar\",\"max\":-74.65} ] Countries.map(p=> {region:p.region,min:min(p.latitude)}) [{\"region\":\"\",\"min\":-54.4333} ,{\"region\":\"Africa\",\"min\":-49.25} ,{\"region\":\"Americas\",\"min\":-54.5} ,{\"region\":\"Asia\",\"min\":-8.8333} ,{\"region\":\"Europe\",\"min\":35} ,{\"region\":\"Oceania\",\"min\":-41} ,{\"region\":\"Polar\",\"min\":-74.65} ] Countries.map(p=> {region:p.region,avg:avg(p.latitude)}) [{\"region\":\"\",\"avg\":-53.76665} ,{\"region\":\"Africa\",\"avg\":1.283335} ,{\"region\":\"Americas\",\"avg\":10.42610526} ,{\"region\":\"Asia\",\"avg\":25.822002} ,{\"region\":\"Europe\",\"avg\":49.35021321} ,{\"region\":\"Oceania\",\"avg\":-10.93023704} ,{\"region\":\"Polar\",\"avg\":-74.65} ]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Group/#sentences","text":"Lambda: Query to get the count of countries in the Americas region Countries.filter(p=> p.region == \"Americas\").map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE c.region = 'Americas' Lambda: Query to get the count of countries in each region Countries.map(p=> {region:p.region,countries:count(1)}) SQL Result: SELECT c.region AS region, COUNT(1) AS countries FROM Countries c GROUP BY c.region Lambda: Query to get the maximum latitude of countries in each region Countries.map(p=> {region:p.region,max:max(p.latitude)}) SQL Result: SELECT c.region AS region, MAX(c.latitude) AS max FROM Countries c GROUP BY c.region Lambda: Query to get the minimum latitude of countries in each region Countries.map(p=> {region:p.region,min:min(p.latitude)}) SQL Result: SELECT c.region AS region, MIN(c.latitude) AS min FROM Countries c GROUP BY c.region Lambda: Query to get the average latitude of countries in each region Countries.map(p=> {region:p.region,avg:avg(p.latitude)}) SQL Result: SELECT c.region AS region, AVG(c.latitude) AS avg FROM Countries c GROUP BY c.region","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Group/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Group/#avg","text":"description: Calculates the average of the specified columns in a set of rows deterministic: true return: number params: value: number","title":"avg"},{"location":"queries/operatorsAndFunctions/Group/#count","text":"description: Calculating the number of rows in a set. deterministic: true return: number params: value: any","title":"count"},{"location":"queries/operatorsAndFunctions/Group/#first","text":"description: Returns the first value of the selected column deterministic: true return: T params: value: T","title":"first"},{"location":"queries/operatorsAndFunctions/Group/#last","text":"description: Returns the last value of the selected column. deterministic: true return: T params: value: T","title":"last"},{"location":"queries/operatorsAndFunctions/Group/#max","text":"description: Calculating the maximum. deterministic: true return: T params: value: T","title":"max"},{"location":"queries/operatorsAndFunctions/Group/#min","text":"description: Calculating the minimum. deterministic: true return: T params: value: T","title":"min"},{"location":"queries/operatorsAndFunctions/Group/#sum","text":"description: Calculating the sum. deterministic: true return: number params: value: number","title":"sum"},{"location":"queries/operatorsAndFunctions/Logical/","text":"Operator Description ! not && and || or Examples Example Result Countries.filter(p=> p.subregion == \"South America\" && p.longitude < -30 ).map(p=> {result:count(1)}) [{\"result\":15}] Countries.filter(p=> p.subregion == \"South America\" Countries.filter(p=> p.region == \"Americas\" && p.subregion != \"Northern America\" ).map(p=> {result:count(1)}) [{\"result\":51}] Sentences Lambda: Query to get the count of countries in the Americas region Countries.filter(p=> p.subregion == \"South America\" && p.longitude < -30 ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.subregion = 'South America' AND c.longitude < -30) Lambda: Query to get the count of countries in each region Countries.filter(p=> p.subregion == \"South America\" || p.subregion == \"Central America\" ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.subregion = 'South America' OR c.subregion = 'Central America') Lambda: Query to get the maximum latitude of countries in each region Countries.filter(p=> p.region == \"Americas\" && p.subregion != \"Northern America\" ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.region = 'Americas' AND c.subregion <> 'Northern America') Definition Operator ! description: not return: boolean params: value: boolean Operator && description: and return: boolean params: a: boolean b: boolean Operator || description: or return: boolean params: a: boolean b: boolean","title":"Logical"},{"location":"queries/operatorsAndFunctions/Logical/#examples","text":"Example Result Countries.filter(p=> p.subregion == \"South America\" && p.longitude < -30 ).map(p=> {result:count(1)}) [{\"result\":15}] Countries.filter(p=> p.subregion == \"South America\" Countries.filter(p=> p.region == \"Americas\" && p.subregion != \"Northern America\" ).map(p=> {result:count(1)}) [{\"result\":51}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Logical/#sentences","text":"Lambda: Query to get the count of countries in the Americas region Countries.filter(p=> p.subregion == \"South America\" && p.longitude < -30 ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.subregion = 'South America' AND c.longitude < -30) Lambda: Query to get the count of countries in each region Countries.filter(p=> p.subregion == \"South America\" || p.subregion == \"Central America\" ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.subregion = 'South America' OR c.subregion = 'Central America') Lambda: Query to get the maximum latitude of countries in each region Countries.filter(p=> p.region == \"Americas\" && p.subregion != \"Northern America\" ).map(p=> {result:count(1)}) SQL Result: SELECT COUNT(1) AS result FROM Countries c WHERE (c.region = 'Americas' AND c.subregion <> 'Northern America')","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Logical/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Logical/#operator","text":"description: not return: boolean params: value: boolean","title":"Operator !"},{"location":"queries/operatorsAndFunctions/Logical/#operator_1","text":"description: and return: boolean params: a: boolean b: boolean","title":"Operator &amp;&amp;"},{"location":"queries/operatorsAndFunctions/Logical/#operator_2","text":"description: or return: boolean params: a: boolean b: boolean","title":"Operator ||"},{"location":"queries/operatorsAndFunctions/Nullable/","text":"Function Description nvl Allows you to replace null values with a default value. nvl2 It lets you substitutes a value when a null value is encountered as well as when a non-null value is encountered. isNull Evaluate if it is null isNotNull Evaluate if it is not null Examples Example Result States.filter(p=> isNull(p.latitude)).map(p=> count(1)) [{\"count\":68}] States.filter(p=> isNotNull(p.latitude)).map(p=> count(1)) [{\"count\":4813}] States.filter(p=> nvl(p.latitude,-100)== -100).map(p=> count(1)) [{\"count\":68}] Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl(p.native,\"???\")}) [{\"native\":\"???\"}] Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl2(p.native,\"is not null\",\"is null\")}) [{\"native\":\"is null\"}] Sentences Lambda: Query to get the count of countries in the Americas region where the latitude is null States.filter(p=> isNull(p.latitude)).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (s.LATITUDE IS NULL) Lambda: Query to get the count of countries in the Americas region where the latitude is not null States.filter(p=> isNotNull(p.latitude)).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (s.LATITUDE IS NOT NULL) Lambda: Query to get the count of countries in the Americas region where the latitude is null or -100 States.filter(p=> nvl(p.latitude,-100)== -100).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (CASE WHEN s.LATITUDE IS NOT NULL THEN s.LATITUDE ELSE -100 END) = -100 Lambda: Query to get the native name or \"???\" if it is null the country with iso3 code \"CIV\" Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl(p.native,\"???\")}) SQL Result: SELECT IFNULL(c.native,'???') AS native FROM Countries c WHERE c.iso3 = 'CIV' Lambda: Query to get the native name or \"is null\" if it is null the country with iso3 code \"CIV\" Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl2(p.native,\"is not null\",\"is null\")}) SQL Result: SELECT (CASE WHEN c.native IS NOT NULL THEN 'is not null' ELSE 'is null' END) AS native FROM Countries c WHERE c.iso3 = 'CIV' Definition nvl description: Allows you to replace null values with a default value. deterministic: true return: T params: value: T _default: T nvl2 description: Extends the functionality found in the NVL function. It lets you substitutes a value when a null value is encountered as well as when a non-null value is encountered. deterministic: true return: T params: value: T a: T b: T isNull description: Evaluate if it is null deterministic: true return: boolean params: value: any isNotNull description: Evaluate if it is not null deterministic: true return: boolean params: value: any","title":"Nullable"},{"location":"queries/operatorsAndFunctions/Nullable/#examples","text":"Example Result States.filter(p=> isNull(p.latitude)).map(p=> count(1)) [{\"count\":68}] States.filter(p=> isNotNull(p.latitude)).map(p=> count(1)) [{\"count\":4813}] States.filter(p=> nvl(p.latitude,-100)== -100).map(p=> count(1)) [{\"count\":68}] Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl(p.native,\"???\")}) [{\"native\":\"???\"}] Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl2(p.native,\"is not null\",\"is null\")}) [{\"native\":\"is null\"}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Nullable/#sentences","text":"Lambda: Query to get the count of countries in the Americas region where the latitude is null States.filter(p=> isNull(p.latitude)).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (s.LATITUDE IS NULL) Lambda: Query to get the count of countries in the Americas region where the latitude is not null States.filter(p=> isNotNull(p.latitude)).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (s.LATITUDE IS NOT NULL) Lambda: Query to get the count of countries in the Americas region where the latitude is null or -100 States.filter(p=> nvl(p.latitude,-100)== -100).map(p=> count(1)) SQL Result: SELECT COUNT(1) FROM TBL_STATES s WHERE (CASE WHEN s.LATITUDE IS NOT NULL THEN s.LATITUDE ELSE -100 END) = -100 Lambda: Query to get the native name or \"???\" if it is null the country with iso3 code \"CIV\" Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl(p.native,\"???\")}) SQL Result: SELECT IFNULL(c.native,'???') AS native FROM Countries c WHERE c.iso3 = 'CIV' Lambda: Query to get the native name or \"is null\" if it is null the country with iso3 code \"CIV\" Countries.filter(p=> p.iso3 == \"CIV\" ).map(p=> {native: nvl2(p.native,\"is not null\",\"is null\")}) SQL Result: SELECT (CASE WHEN c.native IS NOT NULL THEN 'is not null' ELSE 'is null' END) AS native FROM Countries c WHERE c.iso3 = 'CIV'","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Nullable/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Nullable/#nvl","text":"description: Allows you to replace null values with a default value. deterministic: true return: T params: value: T _default: T","title":"nvl"},{"location":"queries/operatorsAndFunctions/Nullable/#nvl2","text":"description: Extends the functionality found in the NVL function. It lets you substitutes a value when a null value is encountered as well as when a non-null value is encountered. deterministic: true return: T params: value: T a: T b: T","title":"nvl2"},{"location":"queries/operatorsAndFunctions/Nullable/#isnull","text":"description: Evaluate if it is null deterministic: true return: boolean params: value: any","title":"isNull"},{"location":"queries/operatorsAndFunctions/Nullable/#isnotnull","text":"description: Evaluate if it is not null deterministic: true return: boolean params: value: any","title":"isNotNull"},{"location":"queries/operatorsAndFunctions/Numeric/","text":"Operator Description - negative /subtraction + addition * multiplication / division ** exponentiation // floorDivision % mod Function Description abs Get the absolute value acos Get the arc cosine asin Get the arc sine atan Get the arc tangent atan2 Get the arc tangent of x and y ceil Get the smallest following integer cos Get the cosine cosh Get hyperbolic cosine exp Raise e to the nth power floor Get the largest preceding integer ln Get natural logarithm of num log Get logarithm, base num1, of num2 log10 Return the base 10 logarithm of x remainder Get remainder round Get rounded value sign Get sign of exp sin Get sine sinh Get hyperbolic sine tan Get tangent tanh Get hyperbolic tangent trunc Truncate num toNumber convert to number Examples Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 }) [{\"result\":4}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1}) [{\"result\":11}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5}) [{\"result\":-6}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2}) [{\"result\":10}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)}) [{\"result\":10}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2 3 4}) [{\"result\":25}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2* 3) 4)}) [{\"result\":33}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2* (3 4)}) [{\"result\":4097}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)}) [{\"result\":9}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)}) [{\"result\":1.121868332427735}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)}) [{\"result\":0.44892799436716174}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)}) [{\"result\":1.1071487177940904}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)}) [{\"result\":1.4056476493802699}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)}) [{\"result\":2}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)}) [{\"result\":-0.4161468365471424}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)}) [{\"result\":3.7621956910836314}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)}) [{\"result\":1096.6331584284585}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)}) [{\"result\":7}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)}) [{\"result\":1.9459101490553132}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)}) [{\"result\":1.1832946624549385}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)}) [{\"result\":0.8450980400142568}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)}) [{\"result\":-1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)}) [{\"result\":7.98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)}) [{\"result\":-1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)}) [{\"result\":0.6569865987187891}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)}) [{\"result\":548.3161232732465}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)}) [{\"result\":0.8714479827243188}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)}) [{\"result\":0.9999983369439447}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)}) [{\"result\":7.98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")}) [{\"result\":3}] Sentences Lambda: Query to get the result of 3+2-1 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 }) SQL Result: SELECT ((3 + 2) - 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 3*4-1 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1}) SQL Result: SELECT ((3 * 4) - 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1-2-5 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5}) SQL Result: SELECT ((1 - 2) - 5) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of (2+3)*2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2}) SQL Result: SELECT ((2 + 3) * 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 2*(3+2) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)}) SQL Result: SELECT (2 * (3 + 2)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1+2 3 4 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4}) SQL Result: SELECT (1 + ((2 * 3) * 4)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of (1+(2* 3) 4) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)}) SQL Result: SELECT (1 + (POWER(2,3) * 4)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1+2* (3 4) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)}) SQL Result: SELECT (1 + POWER(2,(3 * 4))) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the absolute value of -9 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)}) SQL Result: SELECT ABS(-9) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc cosine of 0.434 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)}) SQL Result: SELECT ACOS(0.434) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc sine of 0.434 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)}) SQL Result: SELECT ASIN(0.434) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc tangent of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)}) SQL Result: SELECT ATAN(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc tangent of 90 and 15 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)}) SQL Result: SELECT ATAN(90,15) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the smallest following integer of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)}) SQL Result: SELECT CEIL(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the cosine of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)}) SQL Result: SELECT COS(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic cosine of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)}) SQL Result: SELECT ((EXP(2) + EXP(-2)) / 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get e to the nth power of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)}) SQL Result: SELECT EXP(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the largest preceding integer of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)}) SQL Result: SELECT FLOOR(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the natural logarithm of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)}) SQL Result: SELECT LN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the logarithm, base 7, of 10 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)}) SQL Result: SELECT LOG(7,10) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the base 10 logarithm of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)}) SQL Result: SELECT LOG10(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the remainder of 7 and 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)}) SQL Result: SELECT (7 - 2*ROUND(7/2)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the rounded value of 7.984938 with 2 decimals Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)}) SQL Result: SELECT ROUND(7.984938,2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the sign of -7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)}) SQL Result: SELECT SIGN(-7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the sine of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)}) SQL Result: SELECT SIN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic sine of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)}) SQL Result: SELECT ((EXP(7) - EXP(-7)) / 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the tangent of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)}) SQL Result: SELECT TAN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic tangent of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)}) SQL Result: SELECT (EXP(2*7) - 1)/(EXP(2*7) + 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the truncated value of 7.984938 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)}) SQL Result: SELECT TRUNCATE(7.984938,2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to convert the string \"3.141516\" to number Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")}) SQL Result: SELECT CONVERT('3.141516', DECIMAL) AS result FROM Countries c WHERE c.iso3 = 'BRA' Definition Operator - Negative: description: negative return: number params: value: number Subtraction: description: subtraction return: number params: a: number b: number Operator + description: addition return: number params: a: number b: number Operator * description: multiplication return: number params: a: number b: number Operator / description: division return: number params: a: number b: number Operator ** description: exponentiation return: number params: a: number b: number Operator // description: floorDivision return: number params: a: number b: number Operator % description: mod return: number params: a: number b: number abs description: Get the absolute value deterministic: true return: number params: value: number acos description: Get the arc cosine deterministic: true return: number params: value: number asin description: Get the arc sine deterministic: true return: number params: value: number atan description: Get the arc tangent deterministic: true return: number params: value: number atan2 description: Get the arc tangent of x and y deterministic: true return: number params: x: number y: number ceil description: Get the smallest following integer deterministic: true return: number params: value: number cos description: Get the cosine deterministic: true return: number params: value: number cosh description: Get hyperbolic cosine deterministic: true return: number params: value: number exp description: Raise e to the nth power deterministic: true return: number params: value: number floor description: Get the largest preceding integer deterministic: true return: number params: value: number ln description: Get natural logarithm of num deterministic: true return: number params: value: number log description: Get logarithm, base num1, of num2 deterministic: true return: number params: n1: number n2: number log10 description: Return the base 10 logarithm of x deterministic: true return: number params: value: number remainder description: Get remainder deterministic: true return: number params: n1: number n2: number round description: Get rounded value deterministic: true return: number params: value: number decimals: number sign description: Get sign of exp deterministic: true return: number params: value: number sin description: Get sine deterministic: true return: number params: value: number sinh description: Get hyperbolic sine deterministic: true return: number params: value: number tan description: Get tangent deterministic: true return: number params: value: number tanh description: Get hyperbolic tangent deterministic: true return: number params: value: number trunc description: Truncate num deterministic: true return: number params: value: number toNumber description: convert to number deterministic: true return: number params: value: string","title":"Numeric"},{"location":"queries/operatorsAndFunctions/Numeric/#examples","text":"Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 }) [{\"result\":4}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1}) [{\"result\":11}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5}) [{\"result\":-6}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2}) [{\"result\":10}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)}) [{\"result\":10}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2 3 4}) [{\"result\":25}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2* 3) 4)}) [{\"result\":33}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2* (3 4)}) [{\"result\":4097}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)}) [{\"result\":9}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)}) [{\"result\":1.121868332427735}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)}) [{\"result\":0.44892799436716174}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)}) [{\"result\":1.1071487177940904}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)}) [{\"result\":1.4056476493802699}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)}) [{\"result\":2}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)}) [{\"result\":-0.4161468365471424}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)}) [{\"result\":3.7621956910836314}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)}) [{\"result\":1096.6331584284585}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)}) [{\"result\":7}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)}) [{\"result\":1.9459101490553132}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)}) [{\"result\":1.1832946624549385}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)}) [{\"result\":0.8450980400142568}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)}) [{\"result\":-1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)}) [{\"result\":7.98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)}) [{\"result\":-1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)}) [{\"result\":0.6569865987187891}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)}) [{\"result\":548.3161232732465}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)}) [{\"result\":0.8714479827243188}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)}) [{\"result\":0.9999983369439447}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)}) [{\"result\":7.98}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")}) [{\"result\":3}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Numeric/#sentences","text":"Lambda: Query to get the result of 3+2-1 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3+2-1 }) SQL Result: SELECT ((3 + 2) - 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 3*4-1 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 3*4-1}) SQL Result: SELECT ((3 * 4) - 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1-2-5 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1-2-5}) SQL Result: SELECT ((1 - 2) - 5) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of (2+3)*2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (2+3)*2}) SQL Result: SELECT ((2 + 3) * 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 2*(3+2) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 2*(3+2)}) SQL Result: SELECT (2 * (3 + 2)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1+2 3 4 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2*3*4}) SQL Result: SELECT (1 + ((2 * 3) * 4)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of (1+(2* 3) 4) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: (1+(2**3)*4)}) SQL Result: SELECT (1 + (POWER(2,3) * 4)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the result of 1+2* (3 4) Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: 1+2**(3*4)}) SQL Result: SELECT (1 + POWER(2,(3 * 4))) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the absolute value of -9 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: abs(-9)}) SQL Result: SELECT ABS(-9) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc cosine of 0.434 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: acos(0.434)}) SQL Result: SELECT ACOS(0.434) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc sine of 0.434 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: asin(0.434)}) SQL Result: SELECT ASIN(0.434) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc tangent of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan(2)}) SQL Result: SELECT ATAN(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the arc tangent of 90 and 15 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: atan2(90, 15)}) SQL Result: SELECT ATAN(90,15) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the smallest following integer of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ceil(2)}) SQL Result: SELECT CEIL(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the cosine of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cos(2)}) SQL Result: SELECT COS(2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic cosine of 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: cosh(2)}) SQL Result: SELECT ((EXP(2) + EXP(-2)) / 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get e to the nth power of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: exp(7)}) SQL Result: SELECT EXP(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the largest preceding integer of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: floor(7)}) SQL Result: SELECT FLOOR(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the natural logarithm of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ln(7)}) SQL Result: SELECT LN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the logarithm, base 7, of 10 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log(7,10)}) SQL Result: SELECT LOG(7,10) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the base 10 logarithm of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: log10(7)}) SQL Result: SELECT LOG10(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the remainder of 7 and 2 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: remainder(7,2)}) SQL Result: SELECT (7 - 2*ROUND(7/2)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the rounded value of 7.984938 with 2 decimals Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: round(7.984938,2)}) SQL Result: SELECT ROUND(7.984938,2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the sign of -7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sign(-7)}) SQL Result: SELECT SIGN(-7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the sine of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sin(7)}) SQL Result: SELECT SIN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic sine of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: sinh(7)}) SQL Result: SELECT ((EXP(7) - EXP(-7)) / 2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the tangent of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tan(7)}) SQL Result: SELECT TAN(7) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the hyperbolic tangent of 7 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: tanh(7)}) SQL Result: SELECT (EXP(2*7) - 1)/(EXP(2*7) + 1) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the truncated value of 7.984938 Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: trunc(7.984938,2)}) SQL Result: SELECT TRUNCATE(7.984938,2) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to convert the string \"3.141516\" to number Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toNumber(\"3.141516\")}) SQL Result: SELECT CONVERT('3.141516', DECIMAL) AS result FROM Countries c WHERE c.iso3 = 'BRA'","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Numeric/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Numeric/#operator-","text":"Negative: description: negative return: number params: value: number Subtraction: description: subtraction return: number params: a: number b: number","title":"Operator -"},{"location":"queries/operatorsAndFunctions/Numeric/#operator","text":"description: addition return: number params: a: number b: number","title":"Operator +"},{"location":"queries/operatorsAndFunctions/Numeric/#operator_1","text":"description: multiplication return: number params: a: number b: number","title":"Operator *"},{"location":"queries/operatorsAndFunctions/Numeric/#operator_2","text":"description: division return: number params: a: number b: number","title":"Operator /"},{"location":"queries/operatorsAndFunctions/Numeric/#operator_3","text":"description: exponentiation return: number params: a: number b: number","title":"Operator **"},{"location":"queries/operatorsAndFunctions/Numeric/#operator_4","text":"description: floorDivision return: number params: a: number b: number","title":"Operator //"},{"location":"queries/operatorsAndFunctions/Numeric/#operator_5","text":"description: mod return: number params: a: number b: number","title":"Operator %"},{"location":"queries/operatorsAndFunctions/Numeric/#abs","text":"description: Get the absolute value deterministic: true return: number params: value: number","title":"abs"},{"location":"queries/operatorsAndFunctions/Numeric/#acos","text":"description: Get the arc cosine deterministic: true return: number params: value: number","title":"acos"},{"location":"queries/operatorsAndFunctions/Numeric/#asin","text":"description: Get the arc sine deterministic: true return: number params: value: number","title":"asin"},{"location":"queries/operatorsAndFunctions/Numeric/#atan","text":"description: Get the arc tangent deterministic: true return: number params: value: number","title":"atan"},{"location":"queries/operatorsAndFunctions/Numeric/#atan2","text":"description: Get the arc tangent of x and y deterministic: true return: number params: x: number y: number","title":"atan2"},{"location":"queries/operatorsAndFunctions/Numeric/#ceil","text":"description: Get the smallest following integer deterministic: true return: number params: value: number","title":"ceil"},{"location":"queries/operatorsAndFunctions/Numeric/#cos","text":"description: Get the cosine deterministic: true return: number params: value: number","title":"cos"},{"location":"queries/operatorsAndFunctions/Numeric/#cosh","text":"description: Get hyperbolic cosine deterministic: true return: number params: value: number","title":"cosh"},{"location":"queries/operatorsAndFunctions/Numeric/#exp","text":"description: Raise e to the nth power deterministic: true return: number params: value: number","title":"exp"},{"location":"queries/operatorsAndFunctions/Numeric/#floor","text":"description: Get the largest preceding integer deterministic: true return: number params: value: number","title":"floor"},{"location":"queries/operatorsAndFunctions/Numeric/#ln","text":"description: Get natural logarithm of num deterministic: true return: number params: value: number","title":"ln"},{"location":"queries/operatorsAndFunctions/Numeric/#log","text":"description: Get logarithm, base num1, of num2 deterministic: true return: number params: n1: number n2: number","title":"log"},{"location":"queries/operatorsAndFunctions/Numeric/#log10","text":"description: Return the base 10 logarithm of x deterministic: true return: number params: value: number","title":"log10"},{"location":"queries/operatorsAndFunctions/Numeric/#remainder","text":"description: Get remainder deterministic: true return: number params: n1: number n2: number","title":"remainder"},{"location":"queries/operatorsAndFunctions/Numeric/#round","text":"description: Get rounded value deterministic: true return: number params: value: number decimals: number","title":"round"},{"location":"queries/operatorsAndFunctions/Numeric/#sign","text":"description: Get sign of exp deterministic: true return: number params: value: number","title":"sign"},{"location":"queries/operatorsAndFunctions/Numeric/#sin","text":"description: Get sine deterministic: true return: number params: value: number","title":"sin"},{"location":"queries/operatorsAndFunctions/Numeric/#sinh","text":"description: Get hyperbolic sine deterministic: true return: number params: value: number","title":"sinh"},{"location":"queries/operatorsAndFunctions/Numeric/#tan","text":"description: Get tangent deterministic: true return: number params: value: number","title":"tan"},{"location":"queries/operatorsAndFunctions/Numeric/#tanh","text":"description: Get hyperbolic tangent deterministic: true return: number params: value: number","title":"tanh"},{"location":"queries/operatorsAndFunctions/Numeric/#trunc","text":"description: Truncate num deterministic: true return: number params: value: number","title":"trunc"},{"location":"queries/operatorsAndFunctions/Numeric/#tonumber","text":"description: convert to number deterministic: true return: number params: value: string","title":"toNumber"},{"location":"queries/operatorsAndFunctions/Sort/","text":"Function Description desc This statement is used to sort data in descending order asc This statement is used to sort data in ascending order Examples Countries.map(p=> {region:p.region,countries:count(1)}).sort(p=> p.countries) [{\"region\":\"Polar\",\"countries\":1} ,{\"region\":\"\",\"countries\":2} ,{\"region\":\"Oceania\",\"countries\":27} ,{\"region\":\"Asia\",\"countries\":50} ,{\"region\":\"Europe\",\"countries\":53} ,{\"region\":\"Americas\",\"countries\":57} ,{\"region\":\"Africa\",\"countries\":60} ] Countries.filter(p=> p.subregion == \"South America\").map(p=> p.iso3).sort(p=> desc(iso3)) [{\"iso3\":\"ARG\"} ,{\"iso3\":\"BOL\"} ,{\"iso3\":\"BRA\"} ,{\"iso3\":\"CHL\"} ,{\"iso3\":\"COL\"} ,{\"iso3\":\"ECU\"} ,{\"iso3\":\"FLK\"} ,{\"iso3\":\"GUF\"} ,{\"iso3\":\"GUY\"} ,{\"iso3\":\"PER\"} ,{\"iso3\":\"PRY\"} ,{\"iso3\":\"SGS\"} ,{\"iso3\":\"SUR\"} ,{\"iso3\":\"URY\"} ,{\"iso3\":\"VEN\"} ] Countries.map(p=> {region:p.region,max:max(p.latitude)}).sort(p=> asc(p.max)) [{\"region\":\"Polar\",\"max\":-74.65} ,{\"region\":\"\",\"max\":-53.1} ,{\"region\":\"Oceania\",\"max\":15.2} ,{\"region\":\"Africa\",\"max\":34} ,{\"region\":\"Asia\",\"max\":48} ,{\"region\":\"Americas\",\"max\":72} ,{\"region\":\"Europe\",\"max\":78} ] Sentences Lambda: Query to get the count of countries in each region Countries.map(p=> {region:p.region,countries:count(1)}).sort(p=> p.countries) SQL Result: SELECT c.region AS region, COUNT(1) AS countries FROM Countries c GROUP BY c.region ORDER BY countries asc Lambda: Query to get the iso3 codes of countries in the South America subregion in descending order Countries.filter(p=> p.subregion == \"South America\").map(p=> p.iso3).sort(p=> desc(iso3)) SQL Result: SELECT c.iso3 AS iso3 FROM Countries c WHERE c.subregion = 'South America' ORDER BY ? desc Lambda: Query to get the maximum latitude of countries in each region Countries.map(p=> {region:p.region,max:max(p.latitude)}).sort(p=> asc(p.max)) SQL Result: SELECT c.region AS region, MAX(c.latitude) AS max FROM Countries c GROUP BY c.region ORDER BY max asc Definition desc description: This statement is used to sort data in descending order deterministic: true return: void params: value: any asc description: This statement is used to sort data in ascending order. deterministic: true return: void params: value: any","title":"Sort"},{"location":"queries/operatorsAndFunctions/Sort/#examples","text":"Countries.map(p=> {region:p.region,countries:count(1)}).sort(p=> p.countries) [{\"region\":\"Polar\",\"countries\":1} ,{\"region\":\"\",\"countries\":2} ,{\"region\":\"Oceania\",\"countries\":27} ,{\"region\":\"Asia\",\"countries\":50} ,{\"region\":\"Europe\",\"countries\":53} ,{\"region\":\"Americas\",\"countries\":57} ,{\"region\":\"Africa\",\"countries\":60} ] Countries.filter(p=> p.subregion == \"South America\").map(p=> p.iso3).sort(p=> desc(iso3)) [{\"iso3\":\"ARG\"} ,{\"iso3\":\"BOL\"} ,{\"iso3\":\"BRA\"} ,{\"iso3\":\"CHL\"} ,{\"iso3\":\"COL\"} ,{\"iso3\":\"ECU\"} ,{\"iso3\":\"FLK\"} ,{\"iso3\":\"GUF\"} ,{\"iso3\":\"GUY\"} ,{\"iso3\":\"PER\"} ,{\"iso3\":\"PRY\"} ,{\"iso3\":\"SGS\"} ,{\"iso3\":\"SUR\"} ,{\"iso3\":\"URY\"} ,{\"iso3\":\"VEN\"} ] Countries.map(p=> {region:p.region,max:max(p.latitude)}).sort(p=> asc(p.max)) [{\"region\":\"Polar\",\"max\":-74.65} ,{\"region\":\"\",\"max\":-53.1} ,{\"region\":\"Oceania\",\"max\":15.2} ,{\"region\":\"Africa\",\"max\":34} ,{\"region\":\"Asia\",\"max\":48} ,{\"region\":\"Americas\",\"max\":72} ,{\"region\":\"Europe\",\"max\":78} ]","title":"Examples"},{"location":"queries/operatorsAndFunctions/Sort/#sentences","text":"Lambda: Query to get the count of countries in each region Countries.map(p=> {region:p.region,countries:count(1)}).sort(p=> p.countries) SQL Result: SELECT c.region AS region, COUNT(1) AS countries FROM Countries c GROUP BY c.region ORDER BY countries asc Lambda: Query to get the iso3 codes of countries in the South America subregion in descending order Countries.filter(p=> p.subregion == \"South America\").map(p=> p.iso3).sort(p=> desc(iso3)) SQL Result: SELECT c.iso3 AS iso3 FROM Countries c WHERE c.subregion = 'South America' ORDER BY ? desc Lambda: Query to get the maximum latitude of countries in each region Countries.map(p=> {region:p.region,max:max(p.latitude)}).sort(p=> asc(p.max)) SQL Result: SELECT c.region AS region, MAX(c.latitude) AS max FROM Countries c GROUP BY c.region ORDER BY max asc","title":"Sentences"},{"location":"queries/operatorsAndFunctions/Sort/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/Sort/#desc","text":"description: This statement is used to sort data in descending order deterministic: true return: void params: value: any","title":"desc"},{"location":"queries/operatorsAndFunctions/Sort/#asc","text":"description: This statement is used to sort data in ascending order. deterministic: true return: void params: value: any","title":"asc"},{"location":"queries/operatorsAndFunctions/String/","text":"Function Description chr Get character from ASCII code concat String concatenation lower Lowercase string lpad Pad the left-side of string ltrim Remove leading chars replace Searches a string for a specified value and returns a new string where the specified values are replaced match Returns an array containing all matches, including capturing groups, or null if no matches are found mask General-purpose function that mask parts of arbitrary strings based on position within the string rpad Pad the right-side of string rtrim Remove trailing spaces substr substring Get a substring of string trim Remove characters upper Uppercase string strCount Count value in source isEmpty Evaluate if it is empty toString Convert to string Examples Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) }) [{\"result\":\"south america\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) }) [{\"result\":\"SOUTH AMERICA\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) }) [{\"result\":\"Americas South America\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") }) [{\"result\":\"____Americas\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") }) [{\"result\":\"Americas____\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)}) [{\"result\":\"D\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\" a \")}) [{\"result\":\"a \"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\" a \")}) [{\"result\":\" a\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")}) [{\"result\":\"Americ*s\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)}) [{\"result\":\"Sou***ica\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)}) [{\"result\":\"Sou\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)}) [{\"result\":\"Sou\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")}) [{\"result\":1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)}) [{\"result\":\"-10.0000\"}] Sentences Lambda: Query to get the subregion in lowercase for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) }) SQL Result: SELECT LOWER(c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion in uppercase for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) }) SQL Result: SELECT UPPER(c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region and subregion concatenated for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) }) SQL Result: SELECT CONCAT(CONCAT(c.region,' '),c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region left-padded with \"_\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") }) SQL Result: SELECT LPAD(c.region,12,'_') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region right-padded with \"_\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") }) SQL Result: SELECT RPAD(c.region,12,'_') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the character \"D\" from ASCII code 68 for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)}) SQL Result: SELECT CHAR(68 USING ASCII) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion with leading spaces removed for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\" a \")}) SQL Result: SELECT LTRIM(' a ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion with trailing spaces removed for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\" a \")}) SQL Result: SELECT RTRIM(' a ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region with \"a\" replaced by \"*\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")}) SQL Result: SELECT REPLACE(c.region,'a','*') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion masked for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)}) SQL Result: SELECT Concat(LEFT(c.subregion,3),'***',RIGHT(c.subregion,3)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the first 3 characters of the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)}) SQL Result: SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the first 3 characters of the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)}) SQL Result: SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the count of \"a\" in the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")}) SQL Result: SELECT (LENGTH(c.subregion)-LENGTH(REPLACE(c.subregion,'a',''))) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the latitude as string for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)}) SQL Result: SELECT CONVERT(c.latitude, CHAR) AS result FROM Countries c WHERE c.iso3 = 'BRA' Definition chr description: Get character from ASCII code deterministic: true return: string params: ascii: number strCount description: Count value in source deterministic: true return: number params: source: string value: string lower description: Lowercase string deterministic: true return: string params: value: string lpad description: Pad the left-side of string deterministic: true return: string params: value: string len: number pad: string ltrim description: Remove leading chars deterministic: true return: string params: value: string replace description: The replace() method searches a string for a specified value and returns a new string where the specified values are replaced. deterministic: true return: string params: value: string source: string target: string rpad description: Pad the right-side of string deterministic: true return: string params: value: string len: number pad: string rtrim description: Remove trailing spaces deterministic: true return: string params: value: string substr description: Get a substring of string deterministic: true return: string params: value: string from: number count: number substring description: Get a substring of string deterministic: true return: string params: value: string from: number count: number trim description: Remove characters deterministic: true return: string params: value: string upper description: Uppercase string deterministic: true return: string params: value: string concat description: String concatenation deterministic: true return: string params: values: string mask description: General-purpose function that mask parts of arbitrary strings based on position within the string deterministic: true return: string params: value: string isEmpty description: Evaluate if it is empty deterministic: true return: boolean params: value: any toString description: convert to string deterministic: true return: string params: value: any","title":"String"},{"location":"queries/operatorsAndFunctions/String/#examples","text":"Example Result Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) }) [{\"result\":\"south america\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) }) [{\"result\":\"SOUTH AMERICA\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) }) [{\"result\":\"Americas South America\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") }) [{\"result\":\"____Americas\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") }) [{\"result\":\"Americas____\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)}) [{\"result\":\"D\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\" a \")}) [{\"result\":\"a \"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\" a \")}) [{\"result\":\" a\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")}) [{\"result\":\"Americ*s\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)}) [{\"result\":\"Sou***ica\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)}) [{\"result\":\"Sou\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)}) [{\"result\":\"Sou\"}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")}) [{\"result\":1}] Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)}) [{\"result\":\"-10.0000\"}]","title":"Examples"},{"location":"queries/operatorsAndFunctions/String/#sentences","text":"Lambda: Query to get the subregion in lowercase for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lower(p.subregion) }) SQL Result: SELECT LOWER(c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion in uppercase for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: upper(p.subregion) }) SQL Result: SELECT UPPER(c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region and subregion concatenated for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: concat(p.region,\" \",p.subregion) }) SQL Result: SELECT CONCAT(CONCAT(c.region,' '),c.subregion) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region left-padded with \"_\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: lpad(p.region,12,\"_\") }) SQL Result: SELECT LPAD(c.region,12,'_') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region right-padded with \"_\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rpad(p.region,12,\"_\") }) SQL Result: SELECT RPAD(c.region,12,'_') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the character \"D\" from ASCII code 68 for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: chr(68)}) SQL Result: SELECT CHAR(68 USING ASCII) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion with leading spaces removed for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: ltrim(\" a \")}) SQL Result: SELECT LTRIM(' a ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion with trailing spaces removed for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: rtrim(\" a \")}) SQL Result: SELECT RTRIM(' a ') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the region with \"a\" replaced by \"*\" for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: replace(p.region,\"a\",\"*\")}) SQL Result: SELECT REPLACE(c.region,'a','*') AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the subregion masked for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: mask(p.subregion)}) SQL Result: SELECT Concat(LEFT(c.subregion,3),'***',RIGHT(c.subregion,3)) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the first 3 characters of the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substr(p.subregion,1,3)}) SQL Result: SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the first 3 characters of the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: substring(p.subregion,1,3)}) SQL Result: SELECT SUBSTR(c.subregion,1,3) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the count of \"a\" in the subregion for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: strCount(p.subregion,\"a\")}) SQL Result: SELECT (LENGTH(c.subregion)-LENGTH(REPLACE(c.subregion,'a',''))) AS result FROM Countries c WHERE c.iso3 = 'BRA' Lambda: Query to get the latitude as string for the country with the iso3 code \"BRA\" Countries.filter(p=> p.iso3 == \"BRA\").map(p=> {result: toString(p.latitude)}) SQL Result: SELECT CONVERT(c.latitude, CHAR) AS result FROM Countries c WHERE c.iso3 = 'BRA'","title":"Sentences"},{"location":"queries/operatorsAndFunctions/String/#definition","text":"","title":"Definition"},{"location":"queries/operatorsAndFunctions/String/#chr","text":"description: Get character from ASCII code deterministic: true return: string params: ascii: number","title":"chr"},{"location":"queries/operatorsAndFunctions/String/#strcount","text":"description: Count value in source deterministic: true return: number params: source: string value: string","title":"strCount"},{"location":"queries/operatorsAndFunctions/String/#lower","text":"description: Lowercase string deterministic: true return: string params: value: string","title":"lower"},{"location":"queries/operatorsAndFunctions/String/#lpad","text":"description: Pad the left-side of string deterministic: true return: string params: value: string len: number pad: string","title":"lpad"},{"location":"queries/operatorsAndFunctions/String/#ltrim","text":"description: Remove leading chars deterministic: true return: string params: value: string","title":"ltrim"},{"location":"queries/operatorsAndFunctions/String/#replace","text":"description: The replace() method searches a string for a specified value and returns a new string where the specified values are replaced. deterministic: true return: string params: value: string source: string target: string","title":"replace"},{"location":"queries/operatorsAndFunctions/String/#rpad","text":"description: Pad the right-side of string deterministic: true return: string params: value: string len: number pad: string","title":"rpad"},{"location":"queries/operatorsAndFunctions/String/#rtrim","text":"description: Remove trailing spaces deterministic: true return: string params: value: string","title":"rtrim"},{"location":"queries/operatorsAndFunctions/String/#substr","text":"description: Get a substring of string deterministic: true return: string params: value: string from: number count: number","title":"substr"},{"location":"queries/operatorsAndFunctions/String/#substring","text":"description: Get a substring of string deterministic: true return: string params: value: string from: number count: number","title":"substring"},{"location":"queries/operatorsAndFunctions/String/#trim","text":"description: Remove characters deterministic: true return: string params: value: string","title":"trim"},{"location":"queries/operatorsAndFunctions/String/#upper","text":"description: Uppercase string deterministic: true return: string params: value: string","title":"upper"},{"location":"queries/operatorsAndFunctions/String/#concat","text":"description: String concatenation deterministic: true return: string params: values: string","title":"concat"},{"location":"queries/operatorsAndFunctions/String/#mask","text":"description: General-purpose function that mask parts of arbitrary strings based on position within the string deterministic: true return: string params: value: string","title":"mask"},{"location":"queries/operatorsAndFunctions/String/#isempty","text":"description: Evaluate if it is empty deterministic: true return: boolean params: value: any","title":"isEmpty"},{"location":"queries/operatorsAndFunctions/String/#tostring","text":"description: convert to string deterministic: true return: string params: value: any","title":"toString"},{"location":"schema/Schema-Use/","text":"Schema Use Simple configuration example Configuration using yaml: domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true infrastructure: mappings: - name: mapping1 entities: - name: Countries mapping: TBL_COUNTRIES properties: - name: iso3 mapping: ISO3 - name: name mapping: NAME sources: - name: source1 dialect: MySQL mapping: mapping2 connection: ${CNN_MYSQL} Configuration using json: { \"domain\": { \"entities\": [ { \"name\": \"Countries\", \"primaryKey\": [ \"iso3\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"iso3\", \"required\": true, \"type\": \"string\", \"length\": 3 }, { \"name\": \"name\", \"required\": true, \"type\": \"string\" } ] } ], }, \"infrastructure\": { \"mappings\":[ { \"name\":\"mapping1\", \"entities\":[ { \"name\": \"Countries\", \"mapping\": \"TBL_COUNTRIES\", \"properties\": [ { \"name\": \"iso3\", \"mapping\": \"ISO_3\" }, { \"name\": \"name\",\"mapping\": \"NAME\" }, ] } ] } ], \"sources\": [ { \"name\": \"source1\", \"mapping\": \"mapping1\", \"dialect\": \"MySQL\", \"connection\": \"${CNN_MYSQL}\" } ] } } Build source code Once the schema is configured or modified, the model can be created or modified by executing the \"build\" command of CLI lambdaorm build -l node This command generates the model file with all the entities as a repository file for each entity model.ts: export class Country { iso3?: string name?: string } export interface QryCountry { iso3: string name: number } export let Countries : Queryable<QryCountry> repositoryCountry.ts: import { Repository, IOrm } from 'lambdaorm' import { Country, QryCountry } from './model' export class CountryRepository extends Repository<Country, QryCountry> { constructor (stage?: string, Orm?:IOrm) { super('Countries', stage, Orm) } // Add your code here } Set schema When the orm.init() method is invoked it will execute the ORM initialization according to the schema. The following options are available to define the settings. Invoke the orm.init() method without the first argument and write this configuration to a file called lambdaorm.json or lambdaorm.yaml in the root of the project. according to the lambdaorm extension you will know how to read it. Invoke the orm.init() method passing as an argument the path where the configuration file is located. This route must include the .yaml or .json extension since that way we will know how to read it. Invoke the orm.init() method passing the configuration as a json object as argument Example passing the configuration file path: import { orm } from 'lambdaorm' (async () => { await orm.init('/home/my/app1/lambaORM.yaml') try { const countries = await orm.execute(`Countries.map(p=>{name:p.name,code:p.alpha3}) .sort(p=> desc(p.name)) .page(1,10)`) console.log(countries) } catch (error) { console.log(error) } finally { await orm.end() } })()","title":"Schema Use"},{"location":"schema/Schema-Use/#schema-use","text":"","title":"Schema Use"},{"location":"schema/Schema-Use/#simple-configuration-example","text":"Configuration using yaml: domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true infrastructure: mappings: - name: mapping1 entities: - name: Countries mapping: TBL_COUNTRIES properties: - name: iso3 mapping: ISO3 - name: name mapping: NAME sources: - name: source1 dialect: MySQL mapping: mapping2 connection: ${CNN_MYSQL} Configuration using json: { \"domain\": { \"entities\": [ { \"name\": \"Countries\", \"primaryKey\": [ \"iso3\" ], \"uniqueKey\": [ \"name\" ], \"properties\": [ { \"name\": \"iso3\", \"required\": true, \"type\": \"string\", \"length\": 3 }, { \"name\": \"name\", \"required\": true, \"type\": \"string\" } ] } ], }, \"infrastructure\": { \"mappings\":[ { \"name\":\"mapping1\", \"entities\":[ { \"name\": \"Countries\", \"mapping\": \"TBL_COUNTRIES\", \"properties\": [ { \"name\": \"iso3\", \"mapping\": \"ISO_3\" }, { \"name\": \"name\",\"mapping\": \"NAME\" }, ] } ] } ], \"sources\": [ { \"name\": \"source1\", \"mapping\": \"mapping1\", \"dialect\": \"MySQL\", \"connection\": \"${CNN_MYSQL}\" } ] } }","title":"Simple configuration example"},{"location":"schema/Schema-Use/#build-source-code","text":"Once the schema is configured or modified, the model can be created or modified by executing the \"build\" command of CLI lambdaorm build -l node This command generates the model file with all the entities as a repository file for each entity model.ts: export class Country { iso3?: string name?: string } export interface QryCountry { iso3: string name: number } export let Countries : Queryable<QryCountry> repositoryCountry.ts: import { Repository, IOrm } from 'lambdaorm' import { Country, QryCountry } from './model' export class CountryRepository extends Repository<Country, QryCountry> { constructor (stage?: string, Orm?:IOrm) { super('Countries', stage, Orm) } // Add your code here }","title":"Build source code"},{"location":"schema/Schema-Use/#set-schema","text":"When the orm.init() method is invoked it will execute the ORM initialization according to the schema. The following options are available to define the settings. Invoke the orm.init() method without the first argument and write this configuration to a file called lambdaorm.json or lambdaorm.yaml in the root of the project. according to the lambdaorm extension you will know how to read it. Invoke the orm.init() method passing as an argument the path where the configuration file is located. This route must include the .yaml or .json extension since that way we will know how to read it. Invoke the orm.init() method passing the configuration as a json object as argument Example passing the configuration file path: import { orm } from 'lambdaorm' (async () => { await orm.init('/home/my/app1/lambaORM.yaml') try { const countries = await orm.execute(`Countries.map(p=>{name:p.name,code:p.alpha3}) .sort(p=> desc(p.name)) .page(1,10)`) console.log(countries) } catch (error) { console.log(error) } finally { await orm.end() } })()","title":"Set schema"},{"location":"schema/Schema/","text":"Schema The schema includes all the configuration that the ORM needs. The schema separates the definition of the business model (Domain) from the persistence of the data (Infrastructure). In the domain, the entities and enumerators that represent the business model are completely clean, without any attributes that couple them to persistence. All queries are made according to the business model, so all queries are decoupled from the physical model of the data. In the infrastructure, all the necessary configuration is defined to be able to persist and obtain the data from the different sources. The schema configuration can be done in a yaml, json file or passed as a parameter when initializing the ORM. All the expressions that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr Example: This example poses a stage where two sources are accessed. Data source 1 is MySQL and contains the Countries table and source 2 is PostgreSQL contains the States table. In the case of the Countries entity, both the name of the table and the fields coincide with the name of the entity and the name of the properties, so the mapping is transparent. But in the case of the States entity, the name of the table and its fields differ, so the mapping defines the mapping.","title":"Schema"},{"location":"schema/Schema/#schema","text":"The schema includes all the configuration that the ORM needs. The schema separates the definition of the business model (Domain) from the persistence of the data (Infrastructure). In the domain, the entities and enumerators that represent the business model are completely clean, without any attributes that couple them to persistence. All queries are made according to the business model, so all queries are decoupled from the physical model of the data. In the infrastructure, all the necessary configuration is defined to be able to persist and obtain the data from the different sources. The schema configuration can be done in a yaml, json file or passed as a parameter when initializing the ORM. All the expressions that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr","title":"Schema"},{"location":"schema/Schema/#example","text":"This example poses a stage where two sources are accessed. Data source 1 is MySQL and contains the Countries table and source 2 is PostgreSQL contains the States table. In the case of the Countries entity, both the name of the table and the fields coincide with the name of the entity and the name of the properties, so the mapping is transparent. But in the case of the States entity, the name of the table and its fields differ, so the mapping defines the mapping.","title":"Example:"},{"location":"schema/SchemaDefinition-Composite/","text":"Composite Entity When a relationship is set to composite it will be treated as part of a document. \\ In the case of Non-Relational databases, the records of the relationship will be stored in the same collection. \\ In the case of relational databases, although the data is stored in different tables, when executing import and export it will be treated as an object that contains the records of the relationship. \\ The way to define that an entity is composite is by creating the name of the entity by putting the name of the parent in front. \\ Example: Devices.Components ... domain: entities: ... - name: Devices primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 required: true default: 'concat(type,\"-\",switch(type){case\"phone\":imei;default:mac;})' - name: type length: 16 required: true enum: DeviceType - name: name length: 32 required: true ... - name: Devices.Components extends: Products primaryKey: [\"id\"] uniqueKey: [\"deviceId\", \"name\"] properties: - name: id length: 50 required: true default: concat(deviceId,\"-\",lower(substring(replace(name,\" \",\"-\"),0,16))) - name: deviceId length: 32 required: true - name: name length: 16 required: true ... relations: - name: device from: deviceId entity: Devices to: id target: components ...","title":"Composite Entity"},{"location":"schema/SchemaDefinition-Composite/#composite-entity","text":"When a relationship is set to composite it will be treated as part of a document. \\ In the case of Non-Relational databases, the records of the relationship will be stored in the same collection. \\ In the case of relational databases, although the data is stored in different tables, when executing import and export it will be treated as an object that contains the records of the relationship. \\ The way to define that an entity is composite is by creating the name of the entity by putting the name of the parent in front. \\ Example: Devices.Components ... domain: entities: ... - name: Devices primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 required: true default: 'concat(type,\"-\",switch(type){case\"phone\":imei;default:mac;})' - name: type length: 16 required: true enum: DeviceType - name: name length: 32 required: true ... - name: Devices.Components extends: Products primaryKey: [\"id\"] uniqueKey: [\"deviceId\", \"name\"] properties: - name: id length: 50 required: true default: concat(deviceId,\"-\",lower(substring(replace(name,\" \",\"-\"),0,16))) - name: deviceId length: 32 required: true - name: name length: 16 required: true ... relations: - name: device from: deviceId entity: Devices to: id target: components ...","title":"Composite Entity"},{"location":"schema/SchemaDefinition-EnvironmentVariables/","text":"Environment Variables on Schema En toda las propiedades de un esquema se puede utilizar variables de entorno. \\ Para ellos se debe utilizar la notaci\u00f3n $ or ${} . Ejemplos de uso Use environment variables to set the connection to the database: ... sources: - name: source1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: source2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES ... Use environment variables to obtain the KEY for encryption functions: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ...","title":"Environment Variables on Schema"},{"location":"schema/SchemaDefinition-EnvironmentVariables/#environment-variables-on-schema","text":"En toda las propiedades de un esquema se puede utilizar variables de entorno. \\ Para ellos se debe utilizar la notaci\u00f3n $ or ${} .","title":"Environment Variables on Schema"},{"location":"schema/SchemaDefinition-EnvironmentVariables/#ejemplos-de-uso","text":"Use environment variables to set the connection to the database: ... sources: - name: source1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: source2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES ... Use environment variables to obtain the KEY for encryption functions: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ...","title":"Ejemplos de uso"},{"location":"schema/SchemaDefinition-Expressions/","text":"Expressions on Schema All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr In addition to the operations and functions defined in 3xpr lambdaorm extends the expression model with the following functions. General functions Function Description toBase64(value:string):string Encode a string to base64 getBase64(value:string):string Decode a base64 string encrypt(value:string,key:string):string Encrypt a string with a key decrypt(value:string,key:string):string Decrypt a string with a key Example of use: In this example, encrypt is used to save the encrypted email in the database and decrypt is used to obtain the decrypted email when returning the results. domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ... Orm class methods Functions Description orm.execute(query:string,data:any,options:any):any Execute an query and return the result orm.plan(query:string,options:any):any Return the execution plan of the query orm.metadata(query:string):any Return the metadata of the query orm.model(query:string):any Return the model of the query orm.parameters(query:string):any Return the parameters of the query orm.constraints(query:string):any Return the constraints of the query Example of use: In this example orm.execute is used to execute the same query that was executed in the default and cqrs stages but in the insights stage. This is used to implement the CQRS pattern. ... application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) View in CLI - northwind CQRS lab","title":"Expressions on Schema"},{"location":"schema/SchemaDefinition-Expressions/#expressions-on-schema","text":"All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr In addition to the operations and functions defined in 3xpr lambdaorm extends the expression model with the following functions.","title":"Expressions on Schema"},{"location":"schema/SchemaDefinition-Expressions/#general-functions","text":"Function Description toBase64(value:string):string Encode a string to base64 getBase64(value:string):string Decode a base64 string encrypt(value:string,key:string):string Encrypt a string with a key decrypt(value:string,key:string):string Decrypt a string with a key Example of use: In this example, encrypt is used to save the encrypted email in the database and decrypt is used to obtain the decrypted email when returning the results. domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ...","title":"General functions"},{"location":"schema/SchemaDefinition-Expressions/#orm-class-methods","text":"Functions Description orm.execute(query:string,data:any,options:any):any Execute an query and return the result orm.plan(query:string,options:any):any Return the execution plan of the query orm.metadata(query:string):any Return the metadata of the query orm.model(query:string):any Return the model of the query orm.parameters(query:string):any Return the parameters of the query orm.constraints(query:string):any Return the constraints of the query Example of use: In this example orm.execute is used to execute the same query that was executed in the default and cqrs stages but in the insights stage. This is used to implement the CQRS pattern. ... application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) View in CLI - northwind CQRS lab","title":"Orm class methods"},{"location":"schema/SchemaDefinition/","text":"Definition The schema includes all the configuration that the ORM needs. The schema separates the definition of the business model (Domain) from the persistence of the data (Infrastructure). In the domain, the entities and enumerators that represent the business model are completely clean, without any attributes that couple them to persistence. All queries are made according to the business model, so all queries are decoupled from the physical model of the data. In the infrastructure, all the necessary configuration is defined to be able to persist and obtain the data from the different sources. The schema configuration can be done in a yaml, json file or passed as a parameter when initializing the ORM. All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr Structure domain: enums: - name: string values: - name: string value: any entities: - name: string abstract: boolean extends: string[] view: boolean mapping: string primaryKey: string[] uniqueKey: string[] properties: - name: string mapping: string type: string | integer | decimal | boolean | dateTime | date | time length: number required: boolean autoIncrement: boolean view: boolean key: string default: expression readExp: expression readValue: expression writeValue: expression indexes: - name: string fields: string[] relations: - name: string type: oneToMany | manyToOne | oneToOne from: string entity: string to: string composite: boolean constraints: - message: string condition: expression application: start: - name: string condition: expression expression: expression end: - name: string condition: expression expression: expression errors: - name: string condition: expression expression: expression listeners: - name: string on: [select|insert|bulkInsert|update|delete] condition: expression before: expression after: expression error: expression infrastructure: mappings: - name: string entities: - name: string mapping: string abstract: boolean filter: expression properties: - name: string mapping: string readMappingExp: expression sources: - name: string dialect: [MySQL|MariaDB|PostgreSQL|Oracle|SqlServer|MongoDB|SQLjs] mapping: string connection: object | EnvironmentVariable stages: - name: string sources: - name: string condition: expression views: - name: string entities: - name: string exclude: boolean properties: - name: string exclude: boolean readExp: expression paths: src: string state: string domain: string Main Definition Property Description domain definition of the business model application implementation of events and listeners infrastructure concrete implementation of the data model Domain Property Description enums definitions of enum of model entities definitions of entity of model In the enums section, enumerations are defined that can then be used as the data type of a property. In the entities section, the entities are defined with their properties, relationships and constraints Enum They define an enumeration which can then be used as the data type of a property. Property Description required name name of enum yes values values of enum yes Enum Example In this example, the DeviceType enum is defined, which is used in the type property of the Devices entity. Example: domain: enums: - name: DeviceType values: - name: phone value: phone - name: computer value: computer - name: robot value: robot entities: ... - name: Devices extends: Products primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 required: true default: 'concat(type,\"-\",switch(type){case\"phone\":imei;default:mac;})' - name: type length: 16 required: true enum: DeviceType - name: name length: 32 required: true ... Entity The entity is defined with its properties, relationships and constraints Property Description required default name name of entity yes abstract if the entity is abstract extends extension view if the entity is a view primaryKey primary key uniqueKey unique key properties entity properties yes indexes indexes relations relations constraints constraints Abstract and extends in Entity In this example the abstract entity positions is defined which extends the entity Countries Example: domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true Set Entity as view This example defines the Users entity as a view. \\ Since this entity is managed by an external system and only select queries are allowed. Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname ... Property Property Description required default name name of property yes type type of property yes string length length of property type 80 required if the field is required false autoIncrement if the field is self-incrementing false view if the field is a view default expression default resolved on server readExp read expression resolved in source readValue read expression resolved on server writeValue write expression resolved in server key key to filter or insert Set Property as view and readExp A property set to view is a property that will be returned in read queries. \\ The value of this property is defined in readExp using the expression language. Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) ... ReadExp can be used as a view, in this case the read expression will be applied at the time of reading. \\ But no modification will be applied at the time of writing. Default value in Property When a record is inserted, the expression defined in default will be evaluated on the server. \\ This expression will be executed by the expression engine 3xpr Example: domain: entities: - name: Groups extends: Basics primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 default: lower(substring(replace(name,\" \",\"-\"),0,32)) required: true - name: name length: 32 required: true Read and write value in Property Both readValue and writeValue are executed on the server. When reading, readValue will be applied and in the writing actions, writeValue will be executed. These expressions will be executed by the expression engine 3xpr Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ... Key value in Property The key defined in keyValue will be used as a filter in the read and update queries. \\ When a record is inserted this key is assigned to the field. \\ This behavior is useful when we want to define different entities on the same table or collection. \\ Let's imagine we have a Locations table where Countries, States and Cities are stored. \\ but we want to work with the entities separately. Example: domain: entities: - name: Locations abstract: true primaryKey: [\"type\",\"code\"] uniqueKey: [\"type\",\"name\"] properties: - name: code required: true length: 16 - name: type required: true length: 16 - name: name required: true - name: Country extends: Locations properties: - name: type key: 'country' - name: States extends: Locations properties: - name: type key: 'state' - name: Cities extends: Locations properties: - name: type key: 'city' infrastructure: mappings: - name: default entities: - name: Locations abstract: true mapping: TBL_LOCATIONS properties: - name: code mapping: CODE - name: type mapping: TYPE - name: name mapping: NAME - name: Country extends: Locations - name: States extends: Locations - name: Cities extends: Locations Relation Property Description required default name name of property yes type type of relationship oneToMany from relationship field entity entity with which it relates to field of the entity to which it relates composite if the relationship is composite false target Name of the relation in the related entity Target relation When defining target the corresponding relationship will be created in the target entity. For example, if in the entity DeviceStatuses a relationship with Devices is created and in this relationship target = \"statuses\" is set. \\ A relationship called statuses will be created in the entity Devices which will be manyToOne. \\ Types of target relation according to the source relation: source target oneToMany manyToOne manyToOne oneToMany oneToOne oneToOne Example: domain: entities: - name: DeviceStatuses extends: Basics primaryKey: [\"id\"] indexes: - name: time fields: [\"time\"] properties: - name: id type: integer required: true autoIncrement: true - name: deviceId length: 32 required: true - name: time type: dateTime relations: - name: device from: deviceId entity: Devices to: id target: statuses Constraint Property Description required message message to display yes condition boolean expression to evaluate yes Constraints are validated on the server using expressions. These expressions will be executed by the expression engine 3xpr All constraints are validated when inserting or updating a record. \\ The ORM will create various constraints based on other definitions, for example: When you define a property as required, a constraint will be created that will validate that this property is not null. When defining that a property is of an Enum type, a constraint is created that validates that the value is within this enum. It is also possible to add a constraint for which the message and the condition must be defined. \\ The defined message will be sent if the condition is not met. Example: domain: entities: - name: Users properties: ... - name: email required: true length: 255 readExp: mask(email) writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") constraints: - message: invalid email condition: test(email,\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\") - name: Files properties: - name: id length: 255 required: true - name: type length: 16 required: true enum: FileType - name: deviceId length: 32 required: true - name: startDate type: dateTime required: true - name: endDate type: dateTime required: true constraints: - message: endDate cannot be less than startDate condition: startDate<=endDate Application Property Description start commands to execute when starting the application end commands to execute when the application is terminated errors commands to execute when an error occurs listeners definition of the listeners and the action to be executed Infrastructure Property Description mappings definitions of mappings sources definitions of source stages definitions of stages views definitions of views paths In the mappings section, the mapping between the entities in the tables or collections in the databases is defined. In the sources section the databases are defined In the stages section different scenarios are defined in which the rules that associate an entity with a source are determined In the views section, different views are defined that can restrict or modify the results of the queries. In the paths section, the configuration of the routes where configuration files or execution results will be generated is established. Mapping The mapping between entities in tables or collections in databases is defined. Property Description required default name name of mapping yes entities list of entity mapping yes Entity Mapping Property Description required default name name of entity yes abstract if the entity is abstract extends extension mapping table name in the database yes equal name filter filter expression properties list of property mapping Abstract and extends in Entity Mapping Abstract mapping entities are useful for use in extensions. \\ This example defines the abstract mapping entity Locations which extends concrete entities. ... infrastructure: mappings: - name: default entities: - name: Locations abstract: true mapping: TBL_LOCATIONS properties: - name: code mapping: CODE - name: type mapping: TYPE - name: name mapping: NAME - name: Country extends: Locations - name: States extends: Locations - name: Cities extends: Locations ... Filter in Entity Mapping The filter defined in a Mapping entity is used to filter the records. This example filters records from the user_entity table where users are from a certain realmId . ... infrastructure: mappings: - name: default - name: keycloak entities: - name: Users mapping: user_entity filter: realmId == \"${REALM_ID}\" properties: - name: username mapping: username - name: firstname mapping: first_name - name: lastname mapping: last_name - name: email mapping: email - name: created mapping: created_timestamp readMappingExp: millisecondToDate(created/1000) - name: realmId length: 255 mapping: realm_id ... Property Mapping Property Description required default name name of property yes mapping table name in the database yes equal name readMappingExp read expression resolved in source Read expression in Property Mapping The result of the expression defined in readMappingExp using the expression language, will be returned in the read queries. infrastructure: mappings: - name: default - name: keycloak entities: - name: Users mapping: user_entity filter: realmId == \"${REALM_ID}\" properties: ... - name: created mapping: created_timestamp readMappingExp: millisecondToDate(created/1000) - name: realmId length: 255 mapping: realm_id ... Source Databases are defined with their connection Property Description required default name name of source yes mapping name of reference to mapping first dialect dialect of data source yes connection string connection yes Set connection in Source Although it is possible to define the connection both using environment variables and directly in the configuration. \\ This second option is not recommended due to security and different configurations that may exist by environment. \\ The ability to define the connection by configuration should only be used for a temporary local test. Using environment variable: ... infrastructure: sources: - name: test dialect: MySQL mapping: test connection: ${CNN_MYSQL} ... In configuration: ... infrastructure: sources: - name: test dialect: MySQL mapping: test connection: host: localhost port: 3306 user: test password: test database: test ... Stage The stage is defined in which the rules that relate an entity to a source are determined Property Description required default name name of stage yes sources list of sources rules yes Source Rule Property Description required default name name of source yes condition boolean expression to evaluate true Condition on Source Rule En condition se define la regla para determinar en que source se aplicaran las consultas. Las variables de contexto son las siguientes: Variable Description value entity query entity name of entity action query action select, insert, bulkInsert, update, delete, ddl read it is a read action boolean write it is a write action boolean dml it is a dml action boolean ddl it is a ddl action boolean The conditions are validated on the server using expressions. \\ These expressions will be executed by the expression engine 3xpr \\ In the event that more than one condition is met, the source will be determined according to the order in which it was defined. In the following example, all entities except Users will use the source main . \\ And in the case of the entity Users it will use the source keycloak . Example: ... infrastructure: stages: - name: default sources: - name: main condition: entity != \"Users\" - name: keycloak condition: entity == \"Users\" View The view that can restrict or modify the results of the queries is defined. Property Description required name name that identifies a view yes entities entity view list Entities not included in the view will not be subject to any restrictions. In the following example, the admin view can access all entities. Example: infrastructure: views: - name: default entities: - name: Devices properties: - name: apiKey readExp: '\"***\"' - name: Users properties: - name: created readExp: date(created) - name: email exclude: true - name: collector entities: - name: Users exclude: true - name: Groups exclude: true - name: GroupUsers exclude: true - name: admin entities: [] Entity View Property Description required name entity name yes exclude determines whether the entity is excluded properties property view list Exclude in Entity View Entities set to exclude will not be accessible when using this view. infrastructure: views: ... - name: collector entities: - name: Users exclude: true - name: Groups exclude: true - name: GroupUsers exclude: true ... Property View Property Description required name property name yes exclude determines whether the property is excluded readExp read expression resolved in source Exclude in Property View Properties set to exclude will not be accessible when using this view. infrastructure: views: - name: default entities: ... - name: Users properties: - name: created readExp: date(created) - name: email exclude: true ... Read expression in Property View The result of the expression defined in readExp using the expression language, will be returned in the read queries. Example: infrastructure: views: - name: default entities: ... - name: Users properties: - name: created readExp: date(created) - name: email exclude: true ... Paths In this app section, the configuration of the routes where the configuration files or execution results will be generated is established. Property Description required default src set path of source code src state define path of orm state orm_state model define path of model to generate model Example: app: src: src state: orm_state domain: domain","title":"Definition"},{"location":"schema/SchemaDefinition/#definition","text":"The schema includes all the configuration that the ORM needs. The schema separates the definition of the business model (Domain) from the persistence of the data (Infrastructure). In the domain, the entities and enumerators that represent the business model are completely clean, without any attributes that couple them to persistence. All queries are made according to the business model, so all queries are decoupled from the physical model of the data. In the infrastructure, all the necessary configuration is defined to be able to persist and obtain the data from the different sources. The schema configuration can be done in a yaml, json file or passed as a parameter when initializing the ORM. All the queries that are used for the definition of conditions and for the execution of actions are based on the expression engine 3xpr","title":"Definition"},{"location":"schema/SchemaDefinition/#structure","text":"domain: enums: - name: string values: - name: string value: any entities: - name: string abstract: boolean extends: string[] view: boolean mapping: string primaryKey: string[] uniqueKey: string[] properties: - name: string mapping: string type: string | integer | decimal | boolean | dateTime | date | time length: number required: boolean autoIncrement: boolean view: boolean key: string default: expression readExp: expression readValue: expression writeValue: expression indexes: - name: string fields: string[] relations: - name: string type: oneToMany | manyToOne | oneToOne from: string entity: string to: string composite: boolean constraints: - message: string condition: expression application: start: - name: string condition: expression expression: expression end: - name: string condition: expression expression: expression errors: - name: string condition: expression expression: expression listeners: - name: string on: [select|insert|bulkInsert|update|delete] condition: expression before: expression after: expression error: expression infrastructure: mappings: - name: string entities: - name: string mapping: string abstract: boolean filter: expression properties: - name: string mapping: string readMappingExp: expression sources: - name: string dialect: [MySQL|MariaDB|PostgreSQL|Oracle|SqlServer|MongoDB|SQLjs] mapping: string connection: object | EnvironmentVariable stages: - name: string sources: - name: string condition: expression views: - name: string entities: - name: string exclude: boolean properties: - name: string exclude: boolean readExp: expression paths: src: string state: string domain: string","title":"Structure"},{"location":"schema/SchemaDefinition/#main-definition","text":"Property Description domain definition of the business model application implementation of events and listeners infrastructure concrete implementation of the data model","title":"Main Definition"},{"location":"schema/SchemaDefinition/#domain","text":"Property Description enums definitions of enum of model entities definitions of entity of model In the enums section, enumerations are defined that can then be used as the data type of a property. In the entities section, the entities are defined with their properties, relationships and constraints","title":"Domain"},{"location":"schema/SchemaDefinition/#enum","text":"They define an enumeration which can then be used as the data type of a property. Property Description required name name of enum yes values values of enum yes","title":"Enum"},{"location":"schema/SchemaDefinition/#enum-example","text":"In this example, the DeviceType enum is defined, which is used in the type property of the Devices entity. Example: domain: enums: - name: DeviceType values: - name: phone value: phone - name: computer value: computer - name: robot value: robot entities: ... - name: Devices extends: Products primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 required: true default: 'concat(type,\"-\",switch(type){case\"phone\":imei;default:mac;})' - name: type length: 16 required: true enum: DeviceType - name: name length: 32 required: true ...","title":"Enum Example"},{"location":"schema/SchemaDefinition/#entity","text":"The entity is defined with its properties, relationships and constraints Property Description required default name name of entity yes abstract if the entity is abstract extends extension view if the entity is a view primaryKey primary key uniqueKey unique key properties entity properties yes indexes indexes relations relations constraints constraints","title":"Entity"},{"location":"schema/SchemaDefinition/#abstract-and-extends-in-entity","text":"In this example the abstract entity positions is defined which extends the entity Countries Example: domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true","title":"Abstract and extends in Entity"},{"location":"schema/SchemaDefinition/#set-entity-as-view","text":"This example defines the Users entity as a view. \\ Since this entity is managed by an external system and only select queries are allowed. Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname ...","title":"Set Entity as view"},{"location":"schema/SchemaDefinition/#property","text":"Property Description required default name name of property yes type type of property yes string length length of property type 80 required if the field is required false autoIncrement if the field is self-incrementing false view if the field is a view default expression default resolved on server readExp read expression resolved in source readValue read expression resolved on server writeValue write expression resolved in server key key to filter or insert","title":"Property"},{"location":"schema/SchemaDefinition/#set-property-as-view-and-readexp","text":"A property set to view is a property that will be returned in read queries. \\ The value of this property is defined in readExp using the expression language. Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) ... ReadExp can be used as a view, in this case the read expression will be applied at the time of reading. \\ But no modification will be applied at the time of writing.","title":"Set Property as view and readExp"},{"location":"schema/SchemaDefinition/#default-value-in-property","text":"When a record is inserted, the expression defined in default will be evaluated on the server. \\ This expression will be executed by the expression engine 3xpr Example: domain: entities: - name: Groups extends: Basics primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id length: 32 default: lower(substring(replace(name,\" \",\"-\"),0,32)) required: true - name: name length: 32 required: true","title":"Default value in Property"},{"location":"schema/SchemaDefinition/#read-and-write-value-in-property","text":"Both readValue and writeValue are executed on the server. When reading, readValue will be applied and in the writing actions, writeValue will be executed. These expressions will be executed by the expression engine 3xpr Example: domain: entities: ... - name: Users view: true extends: Basics primaryKey: [\"username\"] uniqueKey: [\"email\"] properties: - name: username length: 32 required: true - name: firstname required: true - name: lastname required: true - name: fullmane view: true readExp: concat(lastname,\", \",firstname) - name: email required: true length: 255 writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") ...","title":"Read and write value in Property"},{"location":"schema/SchemaDefinition/#key-value-in-property","text":"The key defined in keyValue will be used as a filter in the read and update queries. \\ When a record is inserted this key is assigned to the field. \\ This behavior is useful when we want to define different entities on the same table or collection. \\ Let's imagine we have a Locations table where Countries, States and Cities are stored. \\ but we want to work with the entities separately. Example: domain: entities: - name: Locations abstract: true primaryKey: [\"type\",\"code\"] uniqueKey: [\"type\",\"name\"] properties: - name: code required: true length: 16 - name: type required: true length: 16 - name: name required: true - name: Country extends: Locations properties: - name: type key: 'country' - name: States extends: Locations properties: - name: type key: 'state' - name: Cities extends: Locations properties: - name: type key: 'city' infrastructure: mappings: - name: default entities: - name: Locations abstract: true mapping: TBL_LOCATIONS properties: - name: code mapping: CODE - name: type mapping: TYPE - name: name mapping: NAME - name: Country extends: Locations - name: States extends: Locations - name: Cities extends: Locations","title":"Key value in Property"},{"location":"schema/SchemaDefinition/#relation","text":"Property Description required default name name of property yes type type of relationship oneToMany from relationship field entity entity with which it relates to field of the entity to which it relates composite if the relationship is composite false target Name of the relation in the related entity","title":"Relation"},{"location":"schema/SchemaDefinition/#target-relation","text":"When defining target the corresponding relationship will be created in the target entity. For example, if in the entity DeviceStatuses a relationship with Devices is created and in this relationship target = \"statuses\" is set. \\ A relationship called statuses will be created in the entity Devices which will be manyToOne. \\ Types of target relation according to the source relation: source target oneToMany manyToOne manyToOne oneToMany oneToOne oneToOne Example: domain: entities: - name: DeviceStatuses extends: Basics primaryKey: [\"id\"] indexes: - name: time fields: [\"time\"] properties: - name: id type: integer required: true autoIncrement: true - name: deviceId length: 32 required: true - name: time type: dateTime relations: - name: device from: deviceId entity: Devices to: id target: statuses","title":"Target relation"},{"location":"schema/SchemaDefinition/#constraint","text":"Property Description required message message to display yes condition boolean expression to evaluate yes Constraints are validated on the server using expressions. These expressions will be executed by the expression engine 3xpr All constraints are validated when inserting or updating a record. \\ The ORM will create various constraints based on other definitions, for example: When you define a property as required, a constraint will be created that will validate that this property is not null. When defining that a property is of an Enum type, a constraint is created that validates that the value is within this enum. It is also possible to add a constraint for which the message and the condition must be defined. \\ The defined message will be sent if the condition is not met. Example: domain: entities: - name: Users properties: ... - name: email required: true length: 255 readExp: mask(email) writeValue: encrypt(lower(email),\"${USERS_SECRET_KEY}\") readValue: decrypt(email,\"${USERS_SECRET_KEY}\") constraints: - message: invalid email condition: test(email,\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\") - name: Files properties: - name: id length: 255 required: true - name: type length: 16 required: true enum: FileType - name: deviceId length: 32 required: true - name: startDate type: dateTime required: true - name: endDate type: dateTime required: true constraints: - message: endDate cannot be less than startDate condition: startDate<=endDate","title":"Constraint"},{"location":"schema/SchemaDefinition/#application","text":"Property Description start commands to execute when starting the application end commands to execute when the application is terminated errors commands to execute when an error occurs listeners definition of the listeners and the action to be executed","title":"Application"},{"location":"schema/SchemaDefinition/#infrastructure","text":"Property Description mappings definitions of mappings sources definitions of source stages definitions of stages views definitions of views paths In the mappings section, the mapping between the entities in the tables or collections in the databases is defined. In the sources section the databases are defined In the stages section different scenarios are defined in which the rules that associate an entity with a source are determined In the views section, different views are defined that can restrict or modify the results of the queries. In the paths section, the configuration of the routes where configuration files or execution results will be generated is established.","title":"Infrastructure"},{"location":"schema/SchemaDefinition/#mapping","text":"The mapping between entities in tables or collections in databases is defined. Property Description required default name name of mapping yes entities list of entity mapping yes","title":"Mapping"},{"location":"schema/SchemaDefinition/#entity-mapping","text":"Property Description required default name name of entity yes abstract if the entity is abstract extends extension mapping table name in the database yes equal name filter filter expression properties list of property mapping","title":"Entity Mapping"},{"location":"schema/SchemaDefinition/#abstract-and-extends-in-entity-mapping","text":"Abstract mapping entities are useful for use in extensions. \\ This example defines the abstract mapping entity Locations which extends concrete entities. ... infrastructure: mappings: - name: default entities: - name: Locations abstract: true mapping: TBL_LOCATIONS properties: - name: code mapping: CODE - name: type mapping: TYPE - name: name mapping: NAME - name: Country extends: Locations - name: States extends: Locations - name: Cities extends: Locations ...","title":"Abstract and extends in Entity Mapping"},{"location":"schema/SchemaDefinition/#filter-in-entity-mapping","text":"The filter defined in a Mapping entity is used to filter the records. This example filters records from the user_entity table where users are from a certain realmId . ... infrastructure: mappings: - name: default - name: keycloak entities: - name: Users mapping: user_entity filter: realmId == \"${REALM_ID}\" properties: - name: username mapping: username - name: firstname mapping: first_name - name: lastname mapping: last_name - name: email mapping: email - name: created mapping: created_timestamp readMappingExp: millisecondToDate(created/1000) - name: realmId length: 255 mapping: realm_id ...","title":"Filter in Entity Mapping"},{"location":"schema/SchemaDefinition/#property-mapping","text":"Property Description required default name name of property yes mapping table name in the database yes equal name readMappingExp read expression resolved in source","title":"Property Mapping"},{"location":"schema/SchemaDefinition/#read-expression-in-property-mapping","text":"The result of the expression defined in readMappingExp using the expression language, will be returned in the read queries. infrastructure: mappings: - name: default - name: keycloak entities: - name: Users mapping: user_entity filter: realmId == \"${REALM_ID}\" properties: ... - name: created mapping: created_timestamp readMappingExp: millisecondToDate(created/1000) - name: realmId length: 255 mapping: realm_id ...","title":"Read expression in Property Mapping"},{"location":"schema/SchemaDefinition/#source","text":"Databases are defined with their connection Property Description required default name name of source yes mapping name of reference to mapping first dialect dialect of data source yes connection string connection yes","title":"Source"},{"location":"schema/SchemaDefinition/#set-connection-in-source","text":"Although it is possible to define the connection both using environment variables and directly in the configuration. \\ This second option is not recommended due to security and different configurations that may exist by environment. \\ The ability to define the connection by configuration should only be used for a temporary local test. Using environment variable: ... infrastructure: sources: - name: test dialect: MySQL mapping: test connection: ${CNN_MYSQL} ... In configuration: ... infrastructure: sources: - name: test dialect: MySQL mapping: test connection: host: localhost port: 3306 user: test password: test database: test ...","title":"Set connection in Source"},{"location":"schema/SchemaDefinition/#stage","text":"The stage is defined in which the rules that relate an entity to a source are determined Property Description required default name name of stage yes sources list of sources rules yes","title":"Stage"},{"location":"schema/SchemaDefinition/#source-rule","text":"Property Description required default name name of source yes condition boolean expression to evaluate true","title":"Source Rule"},{"location":"schema/SchemaDefinition/#condition-on-source-rule","text":"En condition se define la regla para determinar en que source se aplicaran las consultas. Las variables de contexto son las siguientes: Variable Description value entity query entity name of entity action query action select, insert, bulkInsert, update, delete, ddl read it is a read action boolean write it is a write action boolean dml it is a dml action boolean ddl it is a ddl action boolean The conditions are validated on the server using expressions. \\ These expressions will be executed by the expression engine 3xpr \\ In the event that more than one condition is met, the source will be determined according to the order in which it was defined. In the following example, all entities except Users will use the source main . \\ And in the case of the entity Users it will use the source keycloak . Example: ... infrastructure: stages: - name: default sources: - name: main condition: entity != \"Users\" - name: keycloak condition: entity == \"Users\"","title":"Condition on Source Rule"},{"location":"schema/SchemaDefinition/#view","text":"The view that can restrict or modify the results of the queries is defined. Property Description required name name that identifies a view yes entities entity view list Entities not included in the view will not be subject to any restrictions. In the following example, the admin view can access all entities. Example: infrastructure: views: - name: default entities: - name: Devices properties: - name: apiKey readExp: '\"***\"' - name: Users properties: - name: created readExp: date(created) - name: email exclude: true - name: collector entities: - name: Users exclude: true - name: Groups exclude: true - name: GroupUsers exclude: true - name: admin entities: []","title":"View"},{"location":"schema/SchemaDefinition/#entity-view","text":"Property Description required name entity name yes exclude determines whether the entity is excluded properties property view list","title":"Entity View"},{"location":"schema/SchemaDefinition/#exclude-in-entity-view","text":"Entities set to exclude will not be accessible when using this view. infrastructure: views: ... - name: collector entities: - name: Users exclude: true - name: Groups exclude: true - name: GroupUsers exclude: true ...","title":"Exclude in Entity View"},{"location":"schema/SchemaDefinition/#property-view","text":"Property Description required name property name yes exclude determines whether the property is excluded readExp read expression resolved in source","title":"Property View"},{"location":"schema/SchemaDefinition/#exclude-in-property-view","text":"Properties set to exclude will not be accessible when using this view. infrastructure: views: - name: default entities: ... - name: Users properties: - name: created readExp: date(created) - name: email exclude: true ...","title":"Exclude in Property View"},{"location":"schema/SchemaDefinition/#read-expression-in-property-view","text":"The result of the expression defined in readExp using the expression language, will be returned in the read queries. Example: infrastructure: views: - name: default entities: ... - name: Users properties: - name: created readExp: date(created) - name: email exclude: true ...","title":"Read expression in Property View"},{"location":"schema/SchemaDefinition/#paths","text":"In this app section, the configuration of the routes where the configuration files or execution results will be generated is established. Property Description required default src set path of source code src state define path of orm state orm_state model define path of model to generate model Example: app: src: src state: orm_state domain: domain","title":"Paths"},{"location":"schema/SchemaExample-Basic/","text":"Basic Schema Example In the basic configuration of a schema, the entities, mapping and data sources are defined. Properties, relationships and keys are defined in entities. In the mapping, the mappings of the entities with the database tables are defined. In the data sources, the dialect of the data source and the connections are defined. Many properties can be omitted since they have a default value. For example: If the type of a property is not defined in an entity, it is assumed to be a string. If it is not specified that the property is required, it is assumed that it is not. If the length of a property is not defined, it is assumed to be 80. If the mapping information is not defined, it is assumed that the entities are called the same in the source data and that the properties are called the same as the field in the table or collection. Schema Example The schema defines how the entities of the model are mapped with the database tables. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: test sources: - name: test dialect: MySQL mapping: test connection: host: localhost port: 3306 user: test password: test database: test stages: - name: default sources: - name: test Laboratories CLI - simple","title":"Basic Schema Example"},{"location":"schema/SchemaExample-Basic/#basic-schema-example","text":"In the basic configuration of a schema, the entities, mapping and data sources are defined. Properties, relationships and keys are defined in entities. In the mapping, the mappings of the entities with the database tables are defined. In the data sources, the dialect of the data source and the connections are defined. Many properties can be omitted since they have a default value. For example: If the type of a property is not defined in an entity, it is assumed to be a string. If it is not specified that the property is required, it is assumed that it is not. If the length of a property is not defined, it is assumed to be 80. If the mapping information is not defined, it is assumed that the entities are called the same in the source data and that the properties are called the same as the field in the table or collection.","title":"Basic Schema Example"},{"location":"schema/SchemaExample-Basic/#schema-example","text":"The schema defines how the entities of the model are mapped with the database tables. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: test sources: - name: test dialect: MySQL mapping: test connection: host: localhost port: 3306 user: test password: test database: test stages: - name: default sources: - name: test","title":"Schema Example"},{"location":"schema/SchemaExample-Basic/#laboratories","text":"CLI - simple","title":"Laboratories"},{"location":"schema/SchemaExample-Composite/","text":"Composite Entity Using the period in the name of an entity we can define a composite entity. \\ For example, if we have an entity Orders and another Orders.details \\ The Orders.details entity is a composite entity of the Orders entity. \\ If the datasource is NoSQL, the data will be stored in a single collection but if the datasource is Relational, the data will be stored in separate tables. \\ But on the domain side it will be treated the same regardless of the type of datasource. \\ abstracting from persistence technology. Composite Example In this example we can see that we have an entity Orders and another Orders.details \\ The Orders.details entity is a composite entity of the Orders entity. \\ Part of the schema where the composite entity is defined: domain: entities: ... - name: Orders primaryKey: [id] indexes: - name: orderDate fields: [orderDate] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime - name: Orders.details primaryKey: [orderId, productId] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details ... Schema Complete: domain: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"localhost\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_MONGODB={\"url\":\"mongodb://test:test@localhost:27017\",\"database\":\"test\"} Laboratory: CLI - northwind multiples datasources Composite example in different datasources En este ejemple podemos ver como se trata una entidad compuesta en diferentes datasources. \\ En el stage default se utiliza Mongo para almacenar las Orders y Orders.details \\ En el stage insights se utiliza Postgres para almacenar las Orders y Orders.details Part of the schema where the stages are configured: ... stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights ... Schema Complete: domain: enums: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights Orders Composite in MongoDb Orders collection: Orders Composite in Postgres Orders table: Orders details table: Queries But if we execute the same query in the different stages we can see that the result is the same Query on default stage lambdaorm execute -e \".env\" -s default -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).order(p=> p.id).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 3, \"customerId\": \"HANAR\", \"employeeId\": 4, \"orderDate\": \"1996-07-08T00:00:00.000+02:00\", \"requiredDate\": \"1996-08-05\", \"shippedDate\": \"1996-07-12\", \"shipViaId\": 2, \"freight\": 65.83, \"name\": \"Hanari Carnes\", \"address\": \"Rua do Pao, 67\", \"city\": \"Rio de Janeiro\", \"region\": \"RJ\", \"postalCode\": \"05454-876\", \"country\": \"Brazil\", \"details\": [ { \"quantity\": 10, \"unitPrice\": 7.7, \"product\": { \"name\": \"Jack's New England Clam Chowder\", \"category\": { \"name\": \"Seafood\" } } }, { \"quantity\": 35, \"unitPrice\": 42.4, \"product\": { \"name\": \"Manjimup Dried Apples\", \"category\": { \"name\": \"Produce\" } } }, { \"quantity\": 15, \"unitPrice\": 16.8, \"product\": { \"name\": \"Louisiana Fiery Hot Pepper Sauce\", \"category\": { \"name\": \"Condiments\" } } } ], \"customer\": { \"name\": \"Hanari Carnes\" } } ] Same query on insights stage lambdaorm execute -e \".env\" -s insights -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).order(p=> p.id).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 3, \"customerId\": \"HANAR\", \"employeeId\": 4, \"orderDate\": \"1996-07-07T22:00:00.000Z\", \"requiredDate\": \"1996-08-04T22:00:00.000Z\", \"shippedDate\": \"1996-07-11T22:00:00.000Z\", \"shipViaId\": 2, \"freight\": 65.83, \"name\": \"Hanari Carnes\", \"address\": \"Rua do Pao, 67\", \"city\": \"Rio de Janeiro\", \"region\": \"RJ\", \"postalCode\": \"05454-876\", \"country\": \"Brazil\", \"customer\": { \"name\": \"Hanari Carnes\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 7.7, \"product\": { \"name\": \"Jack's New England Clam Chowder\", \"category\": { \"name\": \"Seafood\" } } }, { \"quantity\": 35, \"unitPrice\": 42.4, \"product\": { \"name\": \"Manjimup Dried Apples\", \"category\": { \"name\": \"Produce\" } } }, { \"quantity\": 15, \"unitPrice\": 16.8, \"product\": { \"name\": \"Louisiana Fiery Hot Pepper Sauce\", \"category\": { \"name\": \"Condiments\" } } } ] } ] Laboratories CLI - northwind CLI - northwind multiples datasources CLI - northwind multiples stages","title":"Composite Entity"},{"location":"schema/SchemaExample-Composite/#composite-entity","text":"Using the period in the name of an entity we can define a composite entity. \\ For example, if we have an entity Orders and another Orders.details \\ The Orders.details entity is a composite entity of the Orders entity. \\ If the datasource is NoSQL, the data will be stored in a single collection but if the datasource is Relational, the data will be stored in separate tables. \\ But on the domain side it will be treated the same regardless of the type of datasource. \\ abstracting from persistence technology.","title":"Composite Entity"},{"location":"schema/SchemaExample-Composite/#composite-example","text":"In this example we can see that we have an entity Orders and another Orders.details \\ The Orders.details entity is a composite entity of the Orders entity. \\ Part of the schema where the composite entity is defined: domain: entities: ... - name: Orders primaryKey: [id] indexes: - name: orderDate fields: [orderDate] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime - name: Orders.details primaryKey: [orderId, productId] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details ... Schema Complete: domain: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"localhost\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_MONGODB={\"url\":\"mongodb://test:test@localhost:27017\",\"database\":\"test\"} Laboratory: CLI - northwind multiples datasources","title":"Composite Example"},{"location":"schema/SchemaExample-Composite/#composite-example-in-different-datasources","text":"En este ejemple podemos ver como se trata una entidad compuesta en diferentes datasources. \\ En el stage default se utiliza Mongo para almacenar las Orders y Orders.details \\ En el stage insights se utiliza Postgres para almacenar las Orders y Orders.details Part of the schema where the stages are configured: ... stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights ... Schema Complete: domain: enums: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights","title":"Composite example in different datasources"},{"location":"schema/SchemaExample-Composite/#orders-composite-in-mongodb","text":"Orders collection:","title":"Orders Composite in MongoDb"},{"location":"schema/SchemaExample-Composite/#orders-composite-in-postgres","text":"Orders table: Orders details table:","title":"Orders Composite in Postgres"},{"location":"schema/SchemaExample-Composite/#queries","text":"But if we execute the same query in the different stages we can see that the result is the same","title":"Queries"},{"location":"schema/SchemaExample-Composite/#query-on-default-stage","text":"lambdaorm execute -e \".env\" -s default -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).order(p=> p.id).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 3, \"customerId\": \"HANAR\", \"employeeId\": 4, \"orderDate\": \"1996-07-08T00:00:00.000+02:00\", \"requiredDate\": \"1996-08-05\", \"shippedDate\": \"1996-07-12\", \"shipViaId\": 2, \"freight\": 65.83, \"name\": \"Hanari Carnes\", \"address\": \"Rua do Pao, 67\", \"city\": \"Rio de Janeiro\", \"region\": \"RJ\", \"postalCode\": \"05454-876\", \"country\": \"Brazil\", \"details\": [ { \"quantity\": 10, \"unitPrice\": 7.7, \"product\": { \"name\": \"Jack's New England Clam Chowder\", \"category\": { \"name\": \"Seafood\" } } }, { \"quantity\": 35, \"unitPrice\": 42.4, \"product\": { \"name\": \"Manjimup Dried Apples\", \"category\": { \"name\": \"Produce\" } } }, { \"quantity\": 15, \"unitPrice\": 16.8, \"product\": { \"name\": \"Louisiana Fiery Hot Pepper Sauce\", \"category\": { \"name\": \"Condiments\" } } } ], \"customer\": { \"name\": \"Hanari Carnes\" } } ]","title":"Query on default stage"},{"location":"schema/SchemaExample-Composite/#same-query-on-insights-stage","text":"lambdaorm execute -e \".env\" -s insights -q \"Orders.filter(p => p.customerId == customerId).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])]).order(p=> p.id).page(1,1)\" -d \"{\\\"customerId\\\": \\\"HANAR\\\"}\" Result: [ { \"id\": 3, \"customerId\": \"HANAR\", \"employeeId\": 4, \"orderDate\": \"1996-07-07T22:00:00.000Z\", \"requiredDate\": \"1996-08-04T22:00:00.000Z\", \"shippedDate\": \"1996-07-11T22:00:00.000Z\", \"shipViaId\": 2, \"freight\": 65.83, \"name\": \"Hanari Carnes\", \"address\": \"Rua do Pao, 67\", \"city\": \"Rio de Janeiro\", \"region\": \"RJ\", \"postalCode\": \"05454-876\", \"country\": \"Brazil\", \"customer\": { \"name\": \"Hanari Carnes\" }, \"details\": [ { \"quantity\": 10, \"unitPrice\": 7.7, \"product\": { \"name\": \"Jack's New England Clam Chowder\", \"category\": { \"name\": \"Seafood\" } } }, { \"quantity\": 35, \"unitPrice\": 42.4, \"product\": { \"name\": \"Manjimup Dried Apples\", \"category\": { \"name\": \"Produce\" } } }, { \"quantity\": 15, \"unitPrice\": 16.8, \"product\": { \"name\": \"Louisiana Fiery Hot Pepper Sauce\", \"category\": { \"name\": \"Condiments\" } } } ] } ]","title":"Same query on insights stage"},{"location":"schema/SchemaExample-Composite/#laboratories","text":"CLI - northwind CLI - northwind multiples datasources CLI - northwind multiples stages","title":"Laboratories"},{"location":"schema/SchemaExample-Extend/","text":"Extend Through the extends property we can extend the configuration in the schema. \\ Entities, mappings and mapping entities can be extended. Extend Entity In this scheme we can see how to extend entities. \\ In this case, the Countries and States entities are extended from the abstract entity Positions \\ It is not mandatory that the entity be abstract to be able to use it as a basis to extend domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States extends: Positions primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: sources: - name: source1 dialect: MySQL connection: host: localhost port: 3306 user: test password: test database: test Laboratories CLI - extend model","title":"Extend"},{"location":"schema/SchemaExample-Extend/#extend","text":"Through the extends property we can extend the configuration in the schema. \\ Entities, mappings and mapping entities can be extended.","title":"Extend"},{"location":"schema/SchemaExample-Extend/#extend-entity","text":"In this scheme we can see how to extend entities. \\ In this case, the Countries and States entities are extended from the abstract entity Positions \\ It is not mandatory that the entity be abstract to be able to use it as a basis to extend domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States extends: Positions primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: sources: - name: source1 dialect: MySQL connection: host: localhost port: 3306 user: test password: test database: test","title":"Extend Entity"},{"location":"schema/SchemaExample-Extend/#laboratories","text":"CLI - extend model","title":"Laboratories"},{"location":"schema/SchemaExample-Listener/","text":"Listener on Schema Listeners allow us to execute actions when an event occurs in the ORM. \\ events are set to the \"on\" property. \\ And the events that can be listened to are select, insert, bulkInsert, update and delete. \\ The \"condition\" property allows you to define an expression that is evaluated to determine if the listener is executed. \\ The expressions to be executed can be defined in the \"before\", \"after\" and \"error\" properties. \\ The parameters that we have to use in the expressions are: Parameter Description query The query expression that was executed data The data that was sent when the expression was executed options The options that were sent when the expression was executed result It is only available in the after event and contains the result of the expression execution action The action that was executed (select, insert, update, delete, upsert, merge, bulkInsert, bulkUpdate, bulkMerge) type The type of sentence that was executed (dql, ddl, dml) category The category of the sentence that was executed (select, insert, update, delete, upsert) sentence The sentence that was executed dialect The dialect of the source where the sentence was executed source The source where the sentence was executed entity The entity that was affected by the sentence error It is only available in the error event and contains the error that occurred Listener Example In this example we see how a Listener is declared to synchronize data in Insights. \\ When a record is inserted, updated or deleted in the default or cqrs stages, the listener is executed. \\ In this case, the expression is defined in the after property, which executes the same expression with the same data but in the stage insights. Part of the schema where the listener is defined: ... application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) Schema Complete: domain: enums: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights - name: cqrs sources: - name: Insights condition: action == \"select\" - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) Laboratories CLI - northwind cqrs","title":"Listener on Schema"},{"location":"schema/SchemaExample-Listener/#listener-on-schema","text":"Listeners allow us to execute actions when an event occurs in the ORM. \\ events are set to the \"on\" property. \\ And the events that can be listened to are select, insert, bulkInsert, update and delete. \\ The \"condition\" property allows you to define an expression that is evaluated to determine if the listener is executed. \\ The expressions to be executed can be defined in the \"before\", \"after\" and \"error\" properties. \\ The parameters that we have to use in the expressions are: Parameter Description query The query expression that was executed data The data that was sent when the expression was executed options The options that were sent when the expression was executed result It is only available in the after event and contains the result of the expression execution action The action that was executed (select, insert, update, delete, upsert, merge, bulkInsert, bulkUpdate, bulkMerge) type The type of sentence that was executed (dql, ddl, dml) category The category of the sentence that was executed (select, insert, update, delete, upsert) sentence The sentence that was executed dialect The dialect of the source where the sentence was executed source The source where the sentence was executed entity The entity that was affected by the sentence error It is only available in the error event and contains the error that occurred","title":"Listener on Schema"},{"location":"schema/SchemaExample-Listener/#listener-example","text":"In this example we see how a Listener is declared to synchronize data in Insights. \\ When a record is inserted, updated or deleted in the default or cqrs stages, the listener is executed. \\ In this case, the expression is defined in the after property, which executes the same expression with the same data but in the stage insights. Part of the schema where the listener is defined: ... application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"}) Schema Complete: domain: enums: entities: - name: Address abstract: true indexes: - name: postalCode fields: [\"postalCode\"] - name: region fields: [\"region\", \"country\"] - name: city fields: [\"city\"] properties: - name: address - name: city - name: region - name: postalCode length: 20 - name: country - name: Categories primaryKey: [\"id\"] uniqueKey: [\"name\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: Customers extends: Address primaryKey: [\"id\"] indexes: - name: name fields: [\"name\"] properties: - name: id length: 5 required: true - name: name required: true - name: Products primaryKey: [\"id\"] uniqueKey: [\"name\", \"supplierId\"] properties: - name: id type: integer required: true autoIncrement: true - name: name required: true - name: categoryId type: integer - name: quantity - name: price type: decimal default: 0 relations: - name: category from: categoryId entity: Categories to: id target: products - name: Orders primaryKey: [\"id\"] indexes: - name: orderDate fields: [\"orderDate\"] properties: - name: id type: integer required: true autoIncrement: true - name: customerId required: true length: 5 - name: orderDate type: dateTime relations: - name: customer from: customerId entity: Customers to: id target: orders - name: Orders.details primaryKey: [\"orderId\", \"productId\"] properties: - name: orderId required: true type: integer - name: productId required: true type: integer - name: unitPrice type: decimal - name: quantity type: decimal relations: - name: order from: orderId entity: Orders to: id target: details - name: product from: productId entity: Products to: id target: orderDetails infrastructure: views: - name: default mappings: - name: default entities: - name: Address abstract: true properties: - name: address mapping: Address - name: city mapping: City - name: region mapping: Region - name: postalCode mapping: PostalCode - name: country mapping: Country - name: Categories mapping: Categories properties: - name: id mapping: CategoryID - name: name mapping: CategoryName - name: Customers extends: Address mapping: Customers properties: - name: id mapping: CustomerID - name: name mapping: CompanyName - name: Products mapping: Products properties: - name: id mapping: ProductID - name: name mapping: ProductName - name: categoryId mapping: CategoryID - name: quantity mapping: QuantityPerUnit - name: price mapping: UnitPrice - name: Orders mapping: Orders properties: - name: id mapping: OrderID - name: customerId mapping: CustomerID - name: orderDate mapping: OrderDate - name: Orders.details mapping: Order Details properties: - name: orderId mapping: OrderID - name: productId mapping: ProductID - name: unitPrice mapping: UnitPrice - name: quantity mapping: Quantity - name: mongoDb extends: default entities: - name: Orders sequence: SQ_ORDERS properties: - name: id mapping: _id sources: - name: Catalog dialect: MySQL mapping: default connection: ${CNN_MYSQL} - name: Crm dialect: PostgreSQL mapping: default connection: ${CNN_POSTGRES} - name: Ordering dialect: MongoDB mapping: mongoDb connection: ${CNN_MONGODB} - name: Insights dialect: PostgreSQL mapping: default connection: ${CNN_INSIGHTS} stages: - name: default sources: - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) - name: insights sources: - name: Insights - name: cqrs sources: - name: Insights condition: action == \"select\" - name: Catalog condition: entity.in([\"Categories\",\"Products\"]) - name: Crm condition: entity.in([\"Address\",\"Customers\"]) - name: Ordering condition: entity.in([\"Orders\",\"Orders.details\"]) application: listeners: - name: syncInsights on: [insert, bulkInsert, update, delete ] condition: options.stage.in(\"default\",\"cqrs\") after: orm.execute(query,data,{stage:\"insights\"})","title":"Listener Example"},{"location":"schema/SchemaExample-Listener/#laboratories","text":"CLI - northwind cqrs","title":"Laboratories"},{"location":"schema/SchemaExample-MultiplesStages/","text":"Multiples Stages The scheme allows you to define different usage scenarios. These usage scenarios can be used for different reasons, for example: You can create a scenario to work with an Oracle Base and another with SqlServer with the same definition of the business model to perform performance tests. You can configure one stage as a source and another as a destination to perform data migrations. You can define one stage for read operations and another for write operations. You can define one stage for the development environment and another for the qa environment. Schema Example In this scheme we can see how to extend the schema. We use the extends attribute in the definition of the schema to extend it. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: mapping1 - name: mapping2 entities: - name: Countries mapping: TBL_COUNTRIES properties: - name: iso3 mapping: ISO3 - name: name mapping: NAME - name: States mapping: TBL_STATES properties: - name: id mapping: ID - name: name mapping: NAME - name: countryCode mapping: COUNTRY_CODE sources: - name: source1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: source2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES stages: - name: stage1 sources: - name: source1 - name: stage2 sources: - name: source2 Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"0.0.0.0\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} Laboratories CLI - two stages","title":"Multiples Stages"},{"location":"schema/SchemaExample-MultiplesStages/#multiples-stages","text":"The scheme allows you to define different usage scenarios. These usage scenarios can be used for different reasons, for example: You can create a scenario to work with an Oracle Base and another with SqlServer with the same definition of the business model to perform performance tests. You can configure one stage as a source and another as a destination to perform data migrations. You can define one stage for read operations and another for write operations. You can define one stage for the development environment and another for the qa environment.","title":"Multiples Stages"},{"location":"schema/SchemaExample-MultiplesStages/#schema-example","text":"In this scheme we can see how to extend the schema. We use the extends attribute in the definition of the schema to extend it. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: mapping1 - name: mapping2 entities: - name: Countries mapping: TBL_COUNTRIES properties: - name: iso3 mapping: ISO3 - name: name mapping: NAME - name: States mapping: TBL_STATES properties: - name: id mapping: ID - name: name mapping: NAME - name: countryCode mapping: COUNTRY_CODE sources: - name: source1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: source2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES stages: - name: stage1 sources: - name: source1 - name: stage2 sources: - name: source2 Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"0.0.0.0\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"}","title":"Schema Example"},{"location":"schema/SchemaExample-MultiplesStages/#laboratories","text":"CLI - two stages","title":"Laboratories"},{"location":"schema/SchemaExample-StageMultiplesSources/","text":"Stage related multiples Sources When the entities are in different databases, the data source for each entity must be specified in the stage configuration. This is done through the \"condition\" property, which is an expression that is evaluated for each entity and if true, the specified data source is used. Source conditions are evaluated in the order they are found in the stage, so if an entity meets the two-source condition, the data source from the first source that meets the condition will be used. Stage related to multiple Sources sharing the mapping This schema has two entities that are in different databases. The database attribute is used in the entity to be able to specify that an entity is in a database other than the default of the schema. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: sources: - name: dataSource1 dialect: MySQL connection: host: localhost port: 3306 user: test password: test database: test - name: dataSource2 dialect: PostgreSQL connection: host: localhost port: 5432 user: test password: test database: test stages: - name: stage1 sources: - name: dataSource2 condition: entity == \"States\" - name: dataSource1 Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"0.0.0.0\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} Stage related to multiple datasources with different mapping This example poses a stage where two sources are accessed. Data source 1 is mysql and contains the Countries table and source 2 is Postgres contains the States table. In the case of the Countries entity, both the name of the table and the fields coincide with the name of the entity and the name of the properties, so the mapping is transparent. But in the case of the States entity, the name of the table and its fields differ, so the mapping defines the mapping. domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true - name: region - name: subregion relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States extends: Positions primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: mapping1 - name: mapping2 entities: - name: States mapping: TBL_STATES properties: - name: id mapping: ID - name: name mapping: NAME - name: countryCode mapping: COUNTRY_CODE - name: latitude mapping: LATITUDE - name: longitude mapping: LONGITUDE sources: - name: dataSource1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: dataSource2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES stages: - name: stage1 sources: - name: dataSource2 condition: entity == \"States\" - name: dataSource1 Laboratories CLI - two datasource same query","title":"Stage related multiples Sources"},{"location":"schema/SchemaExample-StageMultiplesSources/#stage-related-multiples-sources","text":"When the entities are in different databases, the data source for each entity must be specified in the stage configuration. This is done through the \"condition\" property, which is an expression that is evaluated for each entity and if true, the specified data source is used. Source conditions are evaluated in the order they are found in the stage, so if an entity meets the two-source condition, the data source from the first source that meets the condition will be used.","title":"Stage related multiples Sources"},{"location":"schema/SchemaExample-StageMultiplesSources/#stage-related-to-multiple-sources-sharing-the-mapping","text":"This schema has two entities that are in different databases. The database attribute is used in the entity to be able to specify that an entity is in a database other than the default of the schema. domain: entities: - name: Countries primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: sources: - name: dataSource1 dialect: MySQL connection: host: localhost port: 3306 user: test password: test database: test - name: dataSource2 dialect: PostgreSQL connection: host: localhost port: 5432 user: test password: test database: test stages: - name: stage1 sources: - name: dataSource2 condition: entity == \"States\" - name: dataSource1 Environment Variables: CNN_MYSQL={\"host\":\"localhost\",\"port\":3306,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"} CNN_POSTGRES={\"host\":\"0.0.0.0\",\"port\":5433,\"user\":\"test\",\"password\":\"test\",\"database\":\"test\"}","title":"Stage related to multiple Sources sharing the mapping"},{"location":"schema/SchemaExample-StageMultiplesSources/#stage-related-to-multiple-datasources-with-different-mapping","text":"This example poses a stage where two sources are accessed. Data source 1 is mysql and contains the Countries table and source 2 is Postgres contains the States table. In the case of the Countries entity, both the name of the table and the fields coincide with the name of the entity and the name of the properties, so the mapping is transparent. But in the case of the States entity, the name of the table and its fields differ, so the mapping defines the mapping. domain: entities: - name: Positions abstract: true properties: - name: latitude length: 16 - name: longitude length: 16 - name: Countries extends: Positions primaryKey: [\"iso3\"] uniqueKey: [\"name\"] properties: - name: name required: true - name: iso3 length: 3 required: true - name: region - name: subregion relations: - name: states type: manyToOne composite: true from: iso3 entity: States to: countryCode - name: States extends: Positions primaryKey: [\"id\"] uniqueKey: [\"countryCode\", \"name\"] properties: - name: id type: integer required: true - name: name required: true - name: countryCode required: true length: 3 relations: - name: country from: countryCode entity: Countries to: iso3 infrastructure: mappings: - name: mapping1 - name: mapping2 entities: - name: States mapping: TBL_STATES properties: - name: id mapping: ID - name: name mapping: NAME - name: countryCode mapping: COUNTRY_CODE - name: latitude mapping: LATITUDE - name: longitude mapping: LONGITUDE sources: - name: dataSource1 dialect: MySQL mapping: mapping1 connection: $CNN_MYSQL - name: dataSource2 dialect: PostgreSQL mapping: mapping2 connection: $CNN_POSTGRES stages: - name: stage1 sources: - name: dataSource2 condition: entity == \"States\" - name: dataSource1","title":"Stage related to multiple datasources with different mapping"},{"location":"schema/SchemaExample-StageMultiplesSources/#laboratories","text":"CLI - two datasource same query","title":"Laboratories"},{"location":"schema/SchemaSynchronization-Fetch/","text":"Fetch The fetch is the process show differences between sources and schema but not apply changes.The pull process is done by the command lambdaorm fetch . CLI The fetch command allows you to obtain the mapping of the database tables. \\ Using the -o argument you can specify the output format, in this case yaml. \\ The mapping.yaml file will contain the mapping of the database tables. \\ Ejecuci\u00f3n del comando fetch lambdaorm fetch -o yaml > mapping.yaml View lab Node The fetch command allows you to obtain the mapping of the database tables. \\ Using the -o argument you can specify the output format, in this case yaml. \\ The mapping.yaml file will contain the mapping of the database tables. \\ import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const orm = new Orm(workspace) try{ const originalSchema = orm.helper.yaml.load(await orm.helper.fs.read(workspace + '/lambdaOrm.yaml')) await orm.init(originalSchema) const mappings = await orm.stage.fetch() await orm.helper.fs.write( workspace + '/mappings.yaml', orm.helper.yaml.dump(mappings)) }catch(e){ console.log(e) } finally { await orm.end() } })() View lab","title":"Fetch"},{"location":"schema/SchemaSynchronization-Fetch/#fetch","text":"The fetch is the process show differences between sources and schema but not apply changes.The pull process is done by the command lambdaorm fetch .","title":"Fetch"},{"location":"schema/SchemaSynchronization-Fetch/#cli","text":"The fetch command allows you to obtain the mapping of the database tables. \\ Using the -o argument you can specify the output format, in this case yaml. \\ The mapping.yaml file will contain the mapping of the database tables. \\ Ejecuci\u00f3n del comando fetch lambdaorm fetch -o yaml > mapping.yaml View lab","title":"CLI"},{"location":"schema/SchemaSynchronization-Fetch/#node","text":"The fetch command allows you to obtain the mapping of the database tables. \\ Using the -o argument you can specify the output format, in this case yaml. \\ The mapping.yaml file will contain the mapping of the database tables. \\ import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const orm = new Orm(workspace) try{ const originalSchema = orm.helper.yaml.load(await orm.helper.fs.read(workspace + '/lambdaOrm.yaml')) await orm.init(originalSchema) const mappings = await orm.stage.fetch() await orm.helper.fs.write( workspace + '/mappings.yaml', orm.helper.yaml.dump(mappings)) }catch(e){ console.log(e) } finally { await orm.end() } })() View lab","title":"Node"},{"location":"schema/SchemaSynchronization-Incorporate/","text":"Incorporate Onboarding is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (databases) and then importing the data into the sources (Databases). The introspection process is performed using the lambdaorm incorporate command. CLI The incorporate command does the following: Update the schema Generate and apply scripts to synchronize the schema with the data source Import data from data source Running the incorporate command: lambdaorm incorporate -d countries.json -n countries Files generated: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-data.json \u2502 \u251c\u2500\u2500 default-ddl-20240502T113912983Z-push-default.sql \u2502 \u2514\u2500\u2500 default-model.json Scripts generated in default-ddl-20240502T113912983Z-push-default.sql : CREATE TABLE CountriesLanguages (id INTEGER AUTO_INCREMENT,languageCode VARCHAR(4) NOT NULL ,countryName VARCHAR(32) NOT NULL ,CONSTRAINT CountriesLanguages_PK PRIMARY KEY (id)); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_UK UNIQUE (countryName,languageCode); CREATE TABLE Languages (code VARCHAR(4) NOT NULL ,name VARCHAR(16) NOT NULL ,CONSTRAINT Languages_PK PRIMARY KEY (code)); CREATE TABLE Regions (code VARCHAR(2) NOT NULL ,name VARCHAR(32) NOT NULL ,CONSTRAINT Regions_PK PRIMARY KEY (code)); CREATE TABLE Positions (lat DECIMAL(10,4) NOT NULL ,`long` DECIMAL(10,4) NOT NULL ,CONSTRAINT Positions_PK PRIMARY KEY (lat)); ALTER TABLE Positions ADD CONSTRAINT Positions_UK UNIQUE (`long`); CREATE TABLE Timezones (GmtOffset INTEGER ,name VARCHAR(32) NOT NULL ,positionLat DECIMAL(10,4) NOT NULL ,countryName VARCHAR(32) NOT NULL ,CONSTRAINT Timezones_PK PRIMARY KEY (name)); CREATE TABLE Countries (name VARCHAR(32) NOT NULL ,phoneCode INTEGER NOT NULL ,priority INTEGER NOT NULL ,regionCode VARCHAR(2) NOT NULL ,CONSTRAINT Countries_PK PRIMARY KEY (name)); ALTER TABLE Countries ADD CONSTRAINT Countries_UK UNIQUE (phoneCode); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_countries_FK FOREIGN KEY (countryName) REFERENCES Countries (name); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_languages_FK FOREIGN KEY (languageCode) REFERENCES Languages (code); ALTER TABLE Timezones ADD CONSTRAINT Timezones_position_FK FOREIGN KEY (positionLat) REFERENCES Positions (lat); ALTER TABLE Timezones ADD CONSTRAINT Timezones_countries_FK FOREIGN KEY (countryName) REFERENCES Countries (name); ALTER TABLE Countries ADD CONSTRAINT Countries_region_FK FOREIGN KEY (regionCode) REFERENCES Regions (code); View lab Node The incorporate command does the following: Update the schema Generate and apply scripts to synchronize the schema with the data source Import data from data source import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const schemaPath = workspace + '/lambdaOrm.yaml' const orm = new Orm(workspace) try{ const data = JSON.parse( await orm.helper.fs.read(workspace + '/countries.json') || '{}') await orm.init(schemaPath) await orm.stage.incorporate(data, 'countries') }catch(e){ console.log(e) } finally { await orm.end() } })() As a result: The \"lambdaORM.yaml\" file will be updated according to the type introspected from the data. The updated schema is synchronized with the data source. Files are created with the model status and update scripts. View lab","title":"Incorporate"},{"location":"schema/SchemaSynchronization-Incorporate/#incorporate","text":"Onboarding is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (databases) and then importing the data into the sources (Databases). The introspection process is performed using the lambdaorm incorporate command.","title":"Incorporate"},{"location":"schema/SchemaSynchronization-Incorporate/#cli","text":"The incorporate command does the following: Update the schema Generate and apply scripts to synchronize the schema with the data source Import data from data source Running the incorporate command: lambdaorm incorporate -d countries.json -n countries Files generated: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-data.json \u2502 \u251c\u2500\u2500 default-ddl-20240502T113912983Z-push-default.sql \u2502 \u2514\u2500\u2500 default-model.json Scripts generated in default-ddl-20240502T113912983Z-push-default.sql : CREATE TABLE CountriesLanguages (id INTEGER AUTO_INCREMENT,languageCode VARCHAR(4) NOT NULL ,countryName VARCHAR(32) NOT NULL ,CONSTRAINT CountriesLanguages_PK PRIMARY KEY (id)); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_UK UNIQUE (countryName,languageCode); CREATE TABLE Languages (code VARCHAR(4) NOT NULL ,name VARCHAR(16) NOT NULL ,CONSTRAINT Languages_PK PRIMARY KEY (code)); CREATE TABLE Regions (code VARCHAR(2) NOT NULL ,name VARCHAR(32) NOT NULL ,CONSTRAINT Regions_PK PRIMARY KEY (code)); CREATE TABLE Positions (lat DECIMAL(10,4) NOT NULL ,`long` DECIMAL(10,4) NOT NULL ,CONSTRAINT Positions_PK PRIMARY KEY (lat)); ALTER TABLE Positions ADD CONSTRAINT Positions_UK UNIQUE (`long`); CREATE TABLE Timezones (GmtOffset INTEGER ,name VARCHAR(32) NOT NULL ,positionLat DECIMAL(10,4) NOT NULL ,countryName VARCHAR(32) NOT NULL ,CONSTRAINT Timezones_PK PRIMARY KEY (name)); CREATE TABLE Countries (name VARCHAR(32) NOT NULL ,phoneCode INTEGER NOT NULL ,priority INTEGER NOT NULL ,regionCode VARCHAR(2) NOT NULL ,CONSTRAINT Countries_PK PRIMARY KEY (name)); ALTER TABLE Countries ADD CONSTRAINT Countries_UK UNIQUE (phoneCode); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_countries_FK FOREIGN KEY (countryName) REFERENCES Countries (name); ALTER TABLE CountriesLanguages ADD CONSTRAINT CountriesLanguages_languages_FK FOREIGN KEY (languageCode) REFERENCES Languages (code); ALTER TABLE Timezones ADD CONSTRAINT Timezones_position_FK FOREIGN KEY (positionLat) REFERENCES Positions (lat); ALTER TABLE Timezones ADD CONSTRAINT Timezones_countries_FK FOREIGN KEY (countryName) REFERENCES Countries (name); ALTER TABLE Countries ADD CONSTRAINT Countries_region_FK FOREIGN KEY (regionCode) REFERENCES Regions (code); View lab","title":"CLI"},{"location":"schema/SchemaSynchronization-Incorporate/#node","text":"The incorporate command does the following: Update the schema Generate and apply scripts to synchronize the schema with the data source Import data from data source import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const schemaPath = workspace + '/lambdaOrm.yaml' const orm = new Orm(workspace) try{ const data = JSON.parse( await orm.helper.fs.read(workspace + '/countries.json') || '{}') await orm.init(schemaPath) await orm.stage.incorporate(data, 'countries') }catch(e){ console.log(e) } finally { await orm.end() } })() As a result: The \"lambdaORM.yaml\" file will be updated according to the type introspected from the data. The updated schema is synchronized with the data source. Files are created with the model status and update scripts. View lab","title":"Node"},{"location":"schema/SchemaSynchronization-Introspect/","text":"Introspect Introspection is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (Databases). The introspection process is performed using the lambdaorm introspect command. CLI The introspect command allows you to obtain the schema from data introspection. Running the introspect command: lambdaorm introspect -d countries.json -n counties This command updates the schema based on data introspection, in this case from the country.json file. Files created: \u251c\u2500\u2500 countries.json \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20240502T182117031Z-push-default.sql \u2502 \u2514\u2500\u2500 default-model.json \u251c\u2500\u2500 docker compose.yaml \u2514\u2500\u2500 lambdaORM.yaml Script the synchronization in file \"default-ddl-20240502T182117031Z-push-default.sql\": CREATE TABLE CountiesLanguages (id INTEGER AUTO_INCREMENT,languageCode VARCHAR(4) NOT NULL ,countyName VARCHAR(32) NOT NULL ,CONSTRAINT CountiesLanguages_PK PRIMARY KEY (id)); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_UK UNIQUE (countyName,languageCode); CREATE TABLE Languages (code VARCHAR(4) NOT NULL ,name VARCHAR(16) NOT NULL ,CONSTRAINT Languages_PK PRIMARY KEY (code)); CREATE TABLE Regions (code VARCHAR(2) NOT NULL ,name VARCHAR(32) NOT NULL ,CONSTRAINT Regions_PK PRIMARY KEY (code)); CREATE TABLE Positions (lat DECIMAL(10,4) NOT NULL ,`long` DECIMAL(10,4) NOT NULL ,CONSTRAINT Positions_PK PRIMARY KEY (lat)); ALTER TABLE Positions ADD CONSTRAINT Positions_UK UNIQUE (`long`); CREATE TABLE Timezones (GmtOffset INTEGER ,name VARCHAR(32) NOT NULL ,positionLat DECIMAL(10,4) NOT NULL ,countyName VARCHAR(32) NOT NULL ,CONSTRAINT Timezones_PK PRIMARY KEY (name)); CREATE TABLE Counties (name VARCHAR(32) NOT NULL ,phoneCode INTEGER NOT NULL ,priority INTEGER NOT NULL ,regionCode VARCHAR(2) NOT NULL ,CONSTRAINT Counties_PK PRIMARY KEY (name)); ALTER TABLE Counties ADD CONSTRAINT Counties_UK UNIQUE (phoneCode); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_counties_FK FOREIGN KEY (countyName) REFERENCES Counties (name); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_languages_FK FOREIGN KEY (languageCode) REFERENCES Languages (code); ALTER TABLE Timezones ADD CONSTRAINT Timezones_position_FK FOREIGN KEY (positionLat) REFERENCES Positions (lat); ALTER TABLE Timezones ADD CONSTRAINT Timezones_counties_FK FOREIGN KEY (countyName) REFERENCES Counties (name); ALTER TABLE Counties ADD CONSTRAINT Counties_region_FK FOREIGN KEY (regionCode) REFERENCES Regions (code); View lab Node How to run the introspect method to: Update the schema according to the introspected type of data. Synchronize the schema with the data source. Create files with the model status and update scripts. import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const schemaPath = workspace + '/lambdaORM.yaml' const orm = new Orm(workspace) try{ const data = JSON.parse( await orm.helper.fs.read(workspace + '/countries.json') || '{}') await orm.init(schemaPath) await orm.stage.introspect(data, 'countries') }catch(e){ console.log(e) } finally { await orm.end() } })() As a result: The \"lambdaORM.yaml\" file will be updated according to the type introspected from the data. The updated schema is synchronized with the data source. Files are created with the model status and update scripts. View lab","title":"Introspect"},{"location":"schema/SchemaSynchronization-Introspect/#introspect","text":"Introspection is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (Databases). The introspection process is performed using the lambdaorm introspect command.","title":"Introspect"},{"location":"schema/SchemaSynchronization-Introspect/#cli","text":"The introspect command allows you to obtain the schema from data introspection. Running the introspect command: lambdaorm introspect -d countries.json -n counties This command updates the schema based on data introspection, in this case from the country.json file. Files created: \u251c\u2500\u2500 countries.json \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20240502T182117031Z-push-default.sql \u2502 \u2514\u2500\u2500 default-model.json \u251c\u2500\u2500 docker compose.yaml \u2514\u2500\u2500 lambdaORM.yaml Script the synchronization in file \"default-ddl-20240502T182117031Z-push-default.sql\": CREATE TABLE CountiesLanguages (id INTEGER AUTO_INCREMENT,languageCode VARCHAR(4) NOT NULL ,countyName VARCHAR(32) NOT NULL ,CONSTRAINT CountiesLanguages_PK PRIMARY KEY (id)); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_UK UNIQUE (countyName,languageCode); CREATE TABLE Languages (code VARCHAR(4) NOT NULL ,name VARCHAR(16) NOT NULL ,CONSTRAINT Languages_PK PRIMARY KEY (code)); CREATE TABLE Regions (code VARCHAR(2) NOT NULL ,name VARCHAR(32) NOT NULL ,CONSTRAINT Regions_PK PRIMARY KEY (code)); CREATE TABLE Positions (lat DECIMAL(10,4) NOT NULL ,`long` DECIMAL(10,4) NOT NULL ,CONSTRAINT Positions_PK PRIMARY KEY (lat)); ALTER TABLE Positions ADD CONSTRAINT Positions_UK UNIQUE (`long`); CREATE TABLE Timezones (GmtOffset INTEGER ,name VARCHAR(32) NOT NULL ,positionLat DECIMAL(10,4) NOT NULL ,countyName VARCHAR(32) NOT NULL ,CONSTRAINT Timezones_PK PRIMARY KEY (name)); CREATE TABLE Counties (name VARCHAR(32) NOT NULL ,phoneCode INTEGER NOT NULL ,priority INTEGER NOT NULL ,regionCode VARCHAR(2) NOT NULL ,CONSTRAINT Counties_PK PRIMARY KEY (name)); ALTER TABLE Counties ADD CONSTRAINT Counties_UK UNIQUE (phoneCode); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_counties_FK FOREIGN KEY (countyName) REFERENCES Counties (name); ALTER TABLE CountiesLanguages ADD CONSTRAINT CountiesLanguages_languages_FK FOREIGN KEY (languageCode) REFERENCES Languages (code); ALTER TABLE Timezones ADD CONSTRAINT Timezones_position_FK FOREIGN KEY (positionLat) REFERENCES Positions (lat); ALTER TABLE Timezones ADD CONSTRAINT Timezones_counties_FK FOREIGN KEY (countyName) REFERENCES Counties (name); ALTER TABLE Counties ADD CONSTRAINT Counties_region_FK FOREIGN KEY (regionCode) REFERENCES Regions (code); View lab","title":"CLI"},{"location":"schema/SchemaSynchronization-Introspect/#node","text":"How to run the introspect method to: Update the schema according to the introspected type of data. Synchronize the schema with the data source. Create files with the model status and update scripts. import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const schemaPath = workspace + '/lambdaORM.yaml' const orm = new Orm(workspace) try{ const data = JSON.parse( await orm.helper.fs.read(workspace + '/countries.json') || '{}') await orm.init(schemaPath) await orm.stage.introspect(data, 'countries') }catch(e){ console.log(e) } finally { await orm.end() } })() As a result: The \"lambdaORM.yaml\" file will be updated according to the type introspected from the data. The updated schema is synchronized with the data source. Files are created with the model status and update scripts. View lab","title":"Node"},{"location":"schema/SchemaSynchronization-Pull/","text":"Pull The pull is the process of updating the schema defined in the configuration file with the structure in the sources (Databases). The pull process is done by the command lambdaorm pull . CLI The pull command is used to update the schema with respect to the sources (Databases). \\ Once executed, the schema will be synchronized with the database. \\ It also adds a file with the pulling scripts. \\ Running the pull command: lambdaorm pull Once the command is executed, the schema file (lambdaORM.yaml in this case) will be updated with respect to the data source. Files created: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20240501T212640369Z-pull-default.sql \u2502 \u2514\u2500\u2500 default-model.json Content of the generated file default-ddl-20240501T212640369Z-pull-default.sql : CREATE TABLE Categories (CategoryID INTEGER AUTO_INCREMENT,CategoryName VARCHAR(15) NOT NULL ,Description TEXT ,Picture LONGBLOB ,CONSTRAINT Categories_PK PRIMARY KEY (CategoryID)); CREATE TABLE CustomerCustomerDemo (CustomerID VARCHAR(5) NOT NULL ,CustomerTypeID VARCHAR(10) NOT NULL ,CONSTRAINT CustomerCustomerDemo_PK PRIMARY KEY (CustomerID,CustomerTypeID)); CREATE TABLE CustomerDemographics (CustomerTypeID VARCHAR(10) NOT NULL ,CustomerDesc TEXT ,CONSTRAINT CustomerDemographics_PK PRIMARY KEY (CustomerTypeID)); CREATE TABLE Customers (CustomerID VARCHAR(5) NOT NULL ,CompanyName VARCHAR(40) NOT NULL ,ContactName VARCHAR(30) ,ContactTitle VARCHAR(30) ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,Phone VARCHAR(24) ,Fax VARCHAR(24) ,CONSTRAINT Customers_PK PRIMARY KEY (CustomerID)); CREATE TABLE EmployeeTerritories (EmployeeID INTEGER NOT NULL ,TerritoryID VARCHAR(20) NOT NULL ,CONSTRAINT EmployeeTerritories_PK PRIMARY KEY (EmployeeID,TerritoryID)); CREATE TABLE Employees (EmployeeID INTEGER AUTO_INCREMENT,LastName VARCHAR(20) NOT NULL ,FirstName VARCHAR(10) NOT NULL ,Title VARCHAR(30) ,TitleOfCourtesy VARCHAR(25) ,BirthDate DATETIME ,HireDate DATETIME ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,HomePhone VARCHAR(24) ,Extension VARCHAR(4) ,Photo LONGBLOB ,Notes TEXT NOT NULL ,ReportsTo INTEGER ,PhotoPath VARCHAR(255) ,Salary DECIMAL(10,4) ,CONSTRAINT Employees_PK PRIMARY KEY (EmployeeID)); CREATE TABLE `Order Details` (OrderID INTEGER NOT NULL ,ProductID INTEGER NOT NULL ,UnitPrice DECIMAL(10,4) NOT NULL ,Quantity INTEGER NOT NULL ,Discount DECIMAL(10,4) NOT NULL ,CONSTRAINT `Order Details_PK` PRIMARY KEY (OrderID,ProductID)); CREATE TABLE Orders (OrderID INTEGER AUTO_INCREMENT,CustomerID VARCHAR(5) NOT NULL ,EmployeeID INTEGER NOT NULL ,OrderDate DATETIME ,RequiredDate DATETIME ,ShippedDate DATETIME ,ShipVia INTEGER ,Freight DECIMAL(10,4) ,ShipName VARCHAR(40) ,ShipAddress VARCHAR(60) ,ShipCity VARCHAR(15) ,ShipRegion VARCHAR(15) ,ShipPostalCode VARCHAR(10) ,ShipCountry VARCHAR(15) ,CONSTRAINT Orders_PK PRIMARY KEY (CustomerID,EmployeeID,OrderID)); CREATE TABLE Products (ProductID INTEGER AUTO_INCREMENT,ProductName VARCHAR(40) NOT NULL ,SupplierID INTEGER NOT NULL ,CategoryID INTEGER NOT NULL ,QuantityPerUnit VARCHAR(20) ,UnitPrice DECIMAL(10,4) ,UnitsInStock INTEGER ,UnitsOnOrder INTEGER ,ReorderLevel INTEGER ,Discontinued INTEGER NOT NULL ,CONSTRAINT Products_PK PRIMARY KEY (CategoryID,ProductID,SupplierID)); CREATE TABLE Region (RegionID INTEGER NOT NULL ,RegionDescription VARCHAR(50) NOT NULL ,CONSTRAINT Region_PK PRIMARY KEY (RegionID)); CREATE TABLE Shippers (ShipperID INTEGER AUTO_INCREMENT,CompanyName VARCHAR(40) NOT NULL ,Phone VARCHAR(24) ,CONSTRAINT Shippers_PK PRIMARY KEY (ShipperID)); CREATE TABLE Suppliers (SupplierID INTEGER AUTO_INCREMENT,CompanyName VARCHAR(40) NOT NULL ,ContactName VARCHAR(30) ,ContactTitle VARCHAR(30) ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,Phone VARCHAR(24) ,Fax VARCHAR(24) ,HomePage TEXT ,CONSTRAINT Suppliers_PK PRIMARY KEY (SupplierID)); CREATE TABLE Territories (TerritoryID VARCHAR(20) NOT NULL ,TerritoryDescription VARCHAR(50) NOT NULL ,RegionID INTEGER NOT NULL ,CONSTRAINT Territories_PK PRIMARY KEY (TerritoryID,RegionID)); ALTER TABLE CustomerCustomerDemo ADD CONSTRAINT CustomerCustomerDemo_customerCustomerDemo_FK FOREIGN KEY (CustomerTypeID) REFERENCES CustomerDemographics (CustomerTypeID); ALTER TABLE CustomerCustomerDemo ADD CONSTRAINT CustomerCustomerDemo_customerCustomerDemo_FK FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID); ALTER TABLE EmployeeTerritories ADD CONSTRAINT EmployeeTerritories_employeeTerritories_FK FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID); ALTER TABLE Employees ADD CONSTRAINT Employees_employees_FK FOREIGN KEY (ReportsTo) REFERENCES Employees (EmployeeID); ALTER TABLE `Order Details` ADD CONSTRAINT `Order Details_order_FK` FOREIGN KEY (OrderID) REFERENCES Orders (OrderID); ALTER TABLE `Order Details` ADD CONSTRAINT `Order Details_order_FK` FOREIGN KEY (ProductID) REFERENCES Products (ProductID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (ShipVia) REFERENCES Shippers (ShipperID); ALTER TABLE Products ADD CONSTRAINT Products_products_FK FOREIGN KEY (CategoryID) REFERENCES Categories (CategoryID); ALTER TABLE Products ADD CONSTRAINT Products_products_FK FOREIGN KEY (SupplierID) REFERENCES Suppliers (SupplierID); ALTER TABLE Territories ADD CONSTRAINT Territories_territories_FK FOREIGN KEY (RegionID) REFERENCES Region (RegionID); View lab Node import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const orm = new Orm(workspace) try{ await orm.helper.fs.removeDir(workspace + '/data') const originalSchema = orm.helper.yaml.load(await orm.helper.fs.read(workspace + '/lambdaOrm.yaml')) await orm.init(originalSchema) await orm.stage.pull() }catch(e){ console.log(e) } finally { await orm.end() } })() view lab","title":"Pull"},{"location":"schema/SchemaSynchronization-Pull/#pull","text":"The pull is the process of updating the schema defined in the configuration file with the structure in the sources (Databases). The pull process is done by the command lambdaorm pull .","title":"Pull"},{"location":"schema/SchemaSynchronization-Pull/#cli","text":"The pull command is used to update the schema with respect to the sources (Databases). \\ Once executed, the schema will be synchronized with the database. \\ It also adds a file with the pulling scripts. \\ Running the pull command: lambdaorm pull Once the command is executed, the schema file (lambdaORM.yaml in this case) will be updated with respect to the data source. Files created: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20240501T212640369Z-pull-default.sql \u2502 \u2514\u2500\u2500 default-model.json Content of the generated file default-ddl-20240501T212640369Z-pull-default.sql : CREATE TABLE Categories (CategoryID INTEGER AUTO_INCREMENT,CategoryName VARCHAR(15) NOT NULL ,Description TEXT ,Picture LONGBLOB ,CONSTRAINT Categories_PK PRIMARY KEY (CategoryID)); CREATE TABLE CustomerCustomerDemo (CustomerID VARCHAR(5) NOT NULL ,CustomerTypeID VARCHAR(10) NOT NULL ,CONSTRAINT CustomerCustomerDemo_PK PRIMARY KEY (CustomerID,CustomerTypeID)); CREATE TABLE CustomerDemographics (CustomerTypeID VARCHAR(10) NOT NULL ,CustomerDesc TEXT ,CONSTRAINT CustomerDemographics_PK PRIMARY KEY (CustomerTypeID)); CREATE TABLE Customers (CustomerID VARCHAR(5) NOT NULL ,CompanyName VARCHAR(40) NOT NULL ,ContactName VARCHAR(30) ,ContactTitle VARCHAR(30) ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,Phone VARCHAR(24) ,Fax VARCHAR(24) ,CONSTRAINT Customers_PK PRIMARY KEY (CustomerID)); CREATE TABLE EmployeeTerritories (EmployeeID INTEGER NOT NULL ,TerritoryID VARCHAR(20) NOT NULL ,CONSTRAINT EmployeeTerritories_PK PRIMARY KEY (EmployeeID,TerritoryID)); CREATE TABLE Employees (EmployeeID INTEGER AUTO_INCREMENT,LastName VARCHAR(20) NOT NULL ,FirstName VARCHAR(10) NOT NULL ,Title VARCHAR(30) ,TitleOfCourtesy VARCHAR(25) ,BirthDate DATETIME ,HireDate DATETIME ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,HomePhone VARCHAR(24) ,Extension VARCHAR(4) ,Photo LONGBLOB ,Notes TEXT NOT NULL ,ReportsTo INTEGER ,PhotoPath VARCHAR(255) ,Salary DECIMAL(10,4) ,CONSTRAINT Employees_PK PRIMARY KEY (EmployeeID)); CREATE TABLE `Order Details` (OrderID INTEGER NOT NULL ,ProductID INTEGER NOT NULL ,UnitPrice DECIMAL(10,4) NOT NULL ,Quantity INTEGER NOT NULL ,Discount DECIMAL(10,4) NOT NULL ,CONSTRAINT `Order Details_PK` PRIMARY KEY (OrderID,ProductID)); CREATE TABLE Orders (OrderID INTEGER AUTO_INCREMENT,CustomerID VARCHAR(5) NOT NULL ,EmployeeID INTEGER NOT NULL ,OrderDate DATETIME ,RequiredDate DATETIME ,ShippedDate DATETIME ,ShipVia INTEGER ,Freight DECIMAL(10,4) ,ShipName VARCHAR(40) ,ShipAddress VARCHAR(60) ,ShipCity VARCHAR(15) ,ShipRegion VARCHAR(15) ,ShipPostalCode VARCHAR(10) ,ShipCountry VARCHAR(15) ,CONSTRAINT Orders_PK PRIMARY KEY (CustomerID,EmployeeID,OrderID)); CREATE TABLE Products (ProductID INTEGER AUTO_INCREMENT,ProductName VARCHAR(40) NOT NULL ,SupplierID INTEGER NOT NULL ,CategoryID INTEGER NOT NULL ,QuantityPerUnit VARCHAR(20) ,UnitPrice DECIMAL(10,4) ,UnitsInStock INTEGER ,UnitsOnOrder INTEGER ,ReorderLevel INTEGER ,Discontinued INTEGER NOT NULL ,CONSTRAINT Products_PK PRIMARY KEY (CategoryID,ProductID,SupplierID)); CREATE TABLE Region (RegionID INTEGER NOT NULL ,RegionDescription VARCHAR(50) NOT NULL ,CONSTRAINT Region_PK PRIMARY KEY (RegionID)); CREATE TABLE Shippers (ShipperID INTEGER AUTO_INCREMENT,CompanyName VARCHAR(40) NOT NULL ,Phone VARCHAR(24) ,CONSTRAINT Shippers_PK PRIMARY KEY (ShipperID)); CREATE TABLE Suppliers (SupplierID INTEGER AUTO_INCREMENT,CompanyName VARCHAR(40) NOT NULL ,ContactName VARCHAR(30) ,ContactTitle VARCHAR(30) ,Address VARCHAR(60) ,City VARCHAR(15) ,Region VARCHAR(15) ,PostalCode VARCHAR(10) ,Country VARCHAR(15) ,Phone VARCHAR(24) ,Fax VARCHAR(24) ,HomePage TEXT ,CONSTRAINT Suppliers_PK PRIMARY KEY (SupplierID)); CREATE TABLE Territories (TerritoryID VARCHAR(20) NOT NULL ,TerritoryDescription VARCHAR(50) NOT NULL ,RegionID INTEGER NOT NULL ,CONSTRAINT Territories_PK PRIMARY KEY (TerritoryID,RegionID)); ALTER TABLE CustomerCustomerDemo ADD CONSTRAINT CustomerCustomerDemo_customerCustomerDemo_FK FOREIGN KEY (CustomerTypeID) REFERENCES CustomerDemographics (CustomerTypeID); ALTER TABLE CustomerCustomerDemo ADD CONSTRAINT CustomerCustomerDemo_customerCustomerDemo_FK FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID); ALTER TABLE EmployeeTerritories ADD CONSTRAINT EmployeeTerritories_employeeTerritories_FK FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID); ALTER TABLE Employees ADD CONSTRAINT Employees_employees_FK FOREIGN KEY (ReportsTo) REFERENCES Employees (EmployeeID); ALTER TABLE `Order Details` ADD CONSTRAINT `Order Details_order_FK` FOREIGN KEY (OrderID) REFERENCES Orders (OrderID); ALTER TABLE `Order Details` ADD CONSTRAINT `Order Details_order_FK` FOREIGN KEY (ProductID) REFERENCES Products (ProductID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID); ALTER TABLE Orders ADD CONSTRAINT Orders_orders_FK FOREIGN KEY (ShipVia) REFERENCES Shippers (ShipperID); ALTER TABLE Products ADD CONSTRAINT Products_products_FK FOREIGN KEY (CategoryID) REFERENCES Categories (CategoryID); ALTER TABLE Products ADD CONSTRAINT Products_products_FK FOREIGN KEY (SupplierID) REFERENCES Suppliers (SupplierID); ALTER TABLE Territories ADD CONSTRAINT Territories_territories_FK FOREIGN KEY (RegionID) REFERENCES Region (RegionID); View lab","title":"CLI"},{"location":"schema/SchemaSynchronization-Pull/#node","text":"import { Orm } from 'lambdaorm' (async () => { const workspace = process.cwd() const orm = new Orm(workspace) try{ await orm.helper.fs.removeDir(workspace + '/data') const originalSchema = orm.helper.yaml.load(await orm.helper.fs.read(workspace + '/lambdaOrm.yaml')) await orm.init(originalSchema) await orm.stage.pull() }catch(e){ console.log(e) } finally { await orm.end() } })() view lab","title":"Node"},{"location":"schema/SchemaSynchronization-Push/","text":"Push The push is the process of updating the sources (Databases) with the schema defined in the configuration file. The push process is done by the command lambdaorm push . CLI When executing the push command, ddl code will be executed according to the definition in the lambdaorm schema file. Tables, indexes and keys will be created The executed code is added to a file in the data folder. The [source-name]-model.json file will be created or updated which maintains the source state since the last synchronization. lambdaorm push Files generated: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20231122T154351640Z-push-test.sql \u2502 \u2514\u2500\u2500 default-model.json Content of the generated file default-ddl-20231122T154351640Z-push-test.sql : CREATE TABLE Countries (name VARCHAR(80) NOT NULL ,iso3 VARCHAR(3) NOT NULL ,CONSTRAINT Countries_PK PRIMARY KEY (iso3)); ALTER TABLE Countries ADD CONSTRAINT Countries_UK UNIQUE (name); CREATE TABLE States (id INTEGER NOT NULL ,name VARCHAR(80) NOT NULL ,countryCode VARCHAR(3) NOT NULL ,CONSTRAINT States_PK PRIMARY KEY (id)); ALTER TABLE States ADD CONSTRAINT States_UK UNIQUE (countryCode,name); ALTER TABLE States ADD CONSTRAINT States_country_FK FOREIGN KEY (countryCode) REFERENCES Countries (iso3); View labs: Simple Two stages Northwind Northwind multiple datasources Northwind CQRS","title":"Push"},{"location":"schema/SchemaSynchronization-Push/#push","text":"The push is the process of updating the sources (Databases) with the schema defined in the configuration file. The push process is done by the command lambdaorm push .","title":"Push"},{"location":"schema/SchemaSynchronization-Push/#cli","text":"When executing the push command, ddl code will be executed according to the definition in the lambdaorm schema file. Tables, indexes and keys will be created The executed code is added to a file in the data folder. The [source-name]-model.json file will be created or updated which maintains the source state since the last synchronization. lambdaorm push Files generated: \u251c\u2500\u2500 orm_state \u2502 \u251c\u2500\u2500 default-ddl-20231122T154351640Z-push-test.sql \u2502 \u2514\u2500\u2500 default-model.json Content of the generated file default-ddl-20231122T154351640Z-push-test.sql : CREATE TABLE Countries (name VARCHAR(80) NOT NULL ,iso3 VARCHAR(3) NOT NULL ,CONSTRAINT Countries_PK PRIMARY KEY (iso3)); ALTER TABLE Countries ADD CONSTRAINT Countries_UK UNIQUE (name); CREATE TABLE States (id INTEGER NOT NULL ,name VARCHAR(80) NOT NULL ,countryCode VARCHAR(3) NOT NULL ,CONSTRAINT States_PK PRIMARY KEY (id)); ALTER TABLE States ADD CONSTRAINT States_UK UNIQUE (countryCode,name); ALTER TABLE States ADD CONSTRAINT States_country_FK FOREIGN KEY (countryCode) REFERENCES Countries (iso3); View labs: Simple Two stages Northwind Northwind multiple datasources Northwind CQRS","title":"CLI"},{"location":"schema/SchemaSynchronization/","text":"Synchronization The synchronization is the process of updating the schema defined in yaml/json configuration file with structure in sources (Databases). The synchronization is a process that can be done in both directions, from the schema configuration to the sources (Databases) and from the source to the schema file configuration. Push The push is the process of updating the sources (Databases) with the schema defined in the configuration file. The push process is done by the command lambdaorm push . more info Pull The pull is the process of updating the schema defined in the configuration file with the structure in the sources (Databases). The pull process is done by the command lambdaorm pull . more info Fetch The fetch is the process show differences between sources and schema but not apply changes.The pull process is done by the command lambdaorm fetch . more info Introspect Introspection is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (Databases). The introspection process is performed using the lambdaorm introspect command. more info Incorporate Onboarding is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (databases) and then importing the data into the sources (Databases). The introspection process is performed using the lambdaorm incorporate command. more info","title":"Synchronization"},{"location":"schema/SchemaSynchronization/#synchronization","text":"The synchronization is the process of updating the schema defined in yaml/json configuration file with structure in sources (Databases). The synchronization is a process that can be done in both directions, from the schema configuration to the sources (Databases) and from the source to the schema file configuration.","title":"Synchronization"},{"location":"schema/SchemaSynchronization/#push","text":"The push is the process of updating the sources (Databases) with the schema defined in the configuration file. The push process is done by the command lambdaorm push . more info","title":"Push"},{"location":"schema/SchemaSynchronization/#pull","text":"The pull is the process of updating the schema defined in the configuration file with the structure in the sources (Databases). The pull process is done by the command lambdaorm pull . more info","title":"Pull"},{"location":"schema/SchemaSynchronization/#fetch","text":"The fetch is the process show differences between sources and schema but not apply changes.The pull process is done by the command lambdaorm fetch . more info","title":"Fetch"},{"location":"schema/SchemaSynchronization/#introspect","text":"Introspection is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (Databases). The introspection process is performed using the lambdaorm introspect command. more info","title":"Introspect"},{"location":"schema/SchemaSynchronization/#incorporate","text":"Onboarding is the process of updating the schema defined in the configuration file by introspecting a data file and then applying the changes to the sources (databases) and then importing the data into the sources (Databases). The introspection process is performed using the lambdaorm incorporate command. more info","title":"Incorporate"},{"location":"source/","text":"Lambda ORM Lambda ORM Enumerations Dialect LogLevel RelationType SentenceAction SentenceCategory SentenceType Classes AcquireConnection ActionObserver BulkDelete BulkInsert BulkMerge Clause ConnectionError ConnectionFacade ConnectionPoolService Constant CreateEntitiesService CreateSchema CryptoHelper Data DataSourceConfigService DDLBuilderService Delete DialectPoolService DialectServiceImpl DomainConfigService ExecutionActionObserver ExecutionError ExecutorImpl ExpressionFacade Field Filter FilterAction FilterClauses FilterIncludeClauses From GetSchemaSchema GroupBy Having HavingClauses Include IncludeAction IncludeClauses InitializeSchema Insert InterpretSchemaDataService Join LanguageError LanguagesService LoadSchema Logger LoggerBuilder Map Map2Clauses MapClauses MappingConfigService MappingsConfigService MatchSchema MethodNotImplemented ModificableClauses NotImplemented OperandFacade Orm OrmBaseH3lp OrmH3lp OrmOperandHelper Page PageClauses Query Queryable QueryAction QueryActionsImpl QueryExecutorImpl QueryHelper QueryTransaction ReleaseConnection Repository RouteService SchemaError SchemaExtender SchemaFacade SchemaFacadeBuilder SchemaHelper SchemaService SchemaState SchemaStateBuilder Sentence SentenceFacade SentenceInclude SentenceSerializerImp SintaxisError Sort StageActionDDL StageActionDML StageConfigService StageDelete StageDrop StageExport StageFacade StageFetch StageImport StageMappingService StageModelService StagePull StagePush StageTruncate Transaction Update UpdateSchema Upsert UUIDWrapper ValidationError ViewConfigService ViewsConfigService YamlWrapper Interfaces ActionObserverArgs ApplicationSchema AppPathsConfig Behavior Connection ConnectionConfig ConnectionPool Constraint DdlBuilder Dependent DialectFormat DialectService DmlBuilder DomainSchema Entity EntityMapping EntityView Enum EnumValue ExecuteResult Executor FormatMapping IFileSchemaService Index InfrastructureSchema InitializeSchemaArgs IOrm IQueryBuilder IRelation IRepository IRouteService ISentenceBuilder ISentenceCompleteBuilder Language ListenerConfig Mapping MappingConfig MatchOptions Metadata MetadataConstraint MetadataModel MetadataParameter ModelConfig ModifyAllClauses ModifyClauses ModifyFilterClauses ModifyIncludeClauses ObservableExecutor ObservableExecutorDecorator Property PropertyMapping PropertyView QueryActions QueryArgs QueryExecutor QueryInternalExecutor QueryOptions QueryPlan Relation RelationIncludeClauses RelationInfo RelationMapClauses Schema SchemaData SchemaEntityData SchemaInfo SentenceInfo SentenceSerializer ServerConfig Source SourceRule Stage StagePullOptions TaskConfig View Type Aliases ManyToOne OneToMany OneToOne Variables DIALECT_DEFAULT orm Functions abs acos addDay addHours addMinutes addMonth addSeconds addTime addYear as asc asin atan atan2 avg between ceil chr concat cos cosh count curTime date dateDiff dateTime day desc distinct exp first floor hours includes isNotNull isNull last like ln log lower lpad ltrim max min minutes month now nvl nvl2 remainder replace round rpad rtrim seconds sign sin sinh source startsWith substr substring sum tan tanh time timeDiff toDate toDateTime today toJson toNumber toString toTime trim trunc upper user weekday year","title":"Index"},{"location":"source/#lambda-orm","text":"","title":"Lambda ORM"},{"location":"source/#enumerations","text":"Dialect LogLevel RelationType SentenceAction SentenceCategory SentenceType","title":"Enumerations"},{"location":"source/#classes","text":"AcquireConnection ActionObserver BulkDelete BulkInsert BulkMerge Clause ConnectionError ConnectionFacade ConnectionPoolService Constant CreateEntitiesService CreateSchema CryptoHelper Data DataSourceConfigService DDLBuilderService Delete DialectPoolService DialectServiceImpl DomainConfigService ExecutionActionObserver ExecutionError ExecutorImpl ExpressionFacade Field Filter FilterAction FilterClauses FilterIncludeClauses From GetSchemaSchema GroupBy Having HavingClauses Include IncludeAction IncludeClauses InitializeSchema Insert InterpretSchemaDataService Join LanguageError LanguagesService LoadSchema Logger LoggerBuilder Map Map2Clauses MapClauses MappingConfigService MappingsConfigService MatchSchema MethodNotImplemented ModificableClauses NotImplemented OperandFacade Orm OrmBaseH3lp OrmH3lp OrmOperandHelper Page PageClauses Query Queryable QueryAction QueryActionsImpl QueryExecutorImpl QueryHelper QueryTransaction ReleaseConnection Repository RouteService SchemaError SchemaExtender SchemaFacade SchemaFacadeBuilder SchemaHelper SchemaService SchemaState SchemaStateBuilder Sentence SentenceFacade SentenceInclude SentenceSerializerImp SintaxisError Sort StageActionDDL StageActionDML StageConfigService StageDelete StageDrop StageExport StageFacade StageFetch StageImport StageMappingService StageModelService StagePull StagePush StageTruncate Transaction Update UpdateSchema Upsert UUIDWrapper ValidationError ViewConfigService ViewsConfigService YamlWrapper","title":"Classes"},{"location":"source/#interfaces","text":"ActionObserverArgs ApplicationSchema AppPathsConfig Behavior Connection ConnectionConfig ConnectionPool Constraint DdlBuilder Dependent DialectFormat DialectService DmlBuilder DomainSchema Entity EntityMapping EntityView Enum EnumValue ExecuteResult Executor FormatMapping IFileSchemaService Index InfrastructureSchema InitializeSchemaArgs IOrm IQueryBuilder IRelation IRepository IRouteService ISentenceBuilder ISentenceCompleteBuilder Language ListenerConfig Mapping MappingConfig MatchOptions Metadata MetadataConstraint MetadataModel MetadataParameter ModelConfig ModifyAllClauses ModifyClauses ModifyFilterClauses ModifyIncludeClauses ObservableExecutor ObservableExecutorDecorator Property PropertyMapping PropertyView QueryActions QueryArgs QueryExecutor QueryInternalExecutor QueryOptions QueryPlan Relation RelationIncludeClauses RelationInfo RelationMapClauses Schema SchemaData SchemaEntityData SchemaInfo SentenceInfo SentenceSerializer ServerConfig Source SourceRule Stage StagePullOptions TaskConfig View","title":"Interfaces"},{"location":"source/#type-aliases","text":"ManyToOne OneToMany OneToOne","title":"Type Aliases"},{"location":"source/#variables","text":"DIALECT_DEFAULT orm","title":"Variables"},{"location":"source/#functions","text":"abs acos addDay addHours addMinutes addMonth addSeconds addTime addYear as asc asin atan atan2 avg between ceil chr concat cos cosh count curTime date dateDiff dateTime day desc distinct exp first floor hours includes isNotNull isNull last like ln log lower lpad ltrim max min minutes month now nvl nvl2 remainder replace round rpad rtrim seconds sign sin sinh source startsWith substr substring sum tan tanh time timeDiff toDate toDateTime today toJson toNumber toString toTime trim trunc upper user weekday year","title":"Functions"},{"location":"source/classes/AcquireConnection/","text":"Lambda ORM Lambda ORM / AcquireConnection Class: AcquireConnection Defined in: src/lib/connection/application/useCases/acquire.ts:4 Constructors Constructor new AcquireConnection ( poolService ): AcquireConnection Defined in: src/lib/connection/application/useCases/acquire.ts:6 Parameters poolService ConnectionPoolService Returns AcquireConnection Methods acquire() acquire ( name ): Promise \\< Connection > Defined in: src/lib/connection/application/useCases/acquire.ts:8 Parameters name string Returns Promise \\< Connection >","title":"AcquireConnection"},{"location":"source/classes/AcquireConnection/#class-acquireconnection","text":"Defined in: src/lib/connection/application/useCases/acquire.ts:4","title":"Class: AcquireConnection"},{"location":"source/classes/AcquireConnection/#constructors","text":"","title":"Constructors"},{"location":"source/classes/AcquireConnection/#constructor","text":"new AcquireConnection ( poolService ): AcquireConnection Defined in: src/lib/connection/application/useCases/acquire.ts:6","title":"Constructor"},{"location":"source/classes/AcquireConnection/#parameters","text":"","title":"Parameters"},{"location":"source/classes/AcquireConnection/#poolservice","text":"ConnectionPoolService","title":"poolService"},{"location":"source/classes/AcquireConnection/#returns","text":"AcquireConnection","title":"Returns"},{"location":"source/classes/AcquireConnection/#methods","text":"","title":"Methods"},{"location":"source/classes/AcquireConnection/#acquire","text":"acquire ( name ): Promise \\< Connection > Defined in: src/lib/connection/application/useCases/acquire.ts:8","title":"acquire()"},{"location":"source/classes/AcquireConnection/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/AcquireConnection/#name","text":"string","title":"name"},{"location":"source/classes/AcquireConnection/#returns_1","text":"Promise \\< Connection >","title":"Returns"},{"location":"source/classes/ActionObserver/","text":"Lambda ORM Lambda ORM / ActionObserver Class: abstract ActionObserver Defined in: src/lib/execution/domain/executor.ts:22 Extended by ExecutionActionObserver Constructors Constructor new ActionObserver ( on , condition? , transactional? ): ActionObserver Defined in: src/lib/execution/domain/executor.ts:26 Parameters on SentenceCategory [] condition? string transactional? boolean Returns ActionObserver Properties condition? optional condition : string Defined in: src/lib/execution/domain/executor.ts:24 on on : SentenceCategory [] Defined in: src/lib/execution/domain/executor.ts:23 transactional? optional transactional : boolean Defined in: src/lib/execution/domain/executor.ts:25 Methods after() after ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:33 Parameters args ActionObserverArgs Returns Promise \\< void > before() before ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:32 Parameters args ActionObserverArgs Returns Promise \\< void > error() error ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:34 Parameters args ActionObserverArgs Returns Promise \\< void >","title":"ActionObserver"},{"location":"source/classes/ActionObserver/#class-abstract-actionobserver","text":"Defined in: src/lib/execution/domain/executor.ts:22","title":"Class: abstract ActionObserver"},{"location":"source/classes/ActionObserver/#extended-by","text":"ExecutionActionObserver","title":"Extended by"},{"location":"source/classes/ActionObserver/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ActionObserver/#constructor","text":"new ActionObserver ( on , condition? , transactional? ): ActionObserver Defined in: src/lib/execution/domain/executor.ts:26","title":"Constructor"},{"location":"source/classes/ActionObserver/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ActionObserver/#on","text":"SentenceCategory []","title":"on"},{"location":"source/classes/ActionObserver/#condition","text":"string","title":"condition?"},{"location":"source/classes/ActionObserver/#transactional","text":"boolean","title":"transactional?"},{"location":"source/classes/ActionObserver/#returns","text":"ActionObserver","title":"Returns"},{"location":"source/classes/ActionObserver/#properties","text":"","title":"Properties"},{"location":"source/classes/ActionObserver/#condition_1","text":"optional condition : string Defined in: src/lib/execution/domain/executor.ts:24","title":"condition?"},{"location":"source/classes/ActionObserver/#on_1","text":"on : SentenceCategory [] Defined in: src/lib/execution/domain/executor.ts:23","title":"on"},{"location":"source/classes/ActionObserver/#transactional_1","text":"optional transactional : boolean Defined in: src/lib/execution/domain/executor.ts:25","title":"transactional?"},{"location":"source/classes/ActionObserver/#methods","text":"","title":"Methods"},{"location":"source/classes/ActionObserver/#after","text":"after ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:33","title":"after()"},{"location":"source/classes/ActionObserver/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ActionObserver/#args","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ActionObserver/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ActionObserver/#before","text":"before ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:32","title":"before()"},{"location":"source/classes/ActionObserver/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ActionObserver/#args_1","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ActionObserver/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ActionObserver/#error","text":"error ( args ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:34","title":"error()"},{"location":"source/classes/ActionObserver/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ActionObserver/#args_2","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ActionObserver/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/BulkDelete/","text":"Lambda ORM Lambda ORM / BulkDelete Class: BulkDelete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:48 Extends Clause Constructors Constructor new BulkDelete ( pos , name , children , entity , alias ): BulkDelete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns BulkDelete Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"BulkDelete"},{"location":"source/classes/BulkDelete/#class-bulkdelete","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:48","title":"Class: BulkDelete"},{"location":"source/classes/BulkDelete/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/BulkDelete/#constructors","text":"","title":"Constructors"},{"location":"source/classes/BulkDelete/#constructor","text":"new BulkDelete ( pos , name , children , entity , alias ): BulkDelete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/BulkDelete/#parameters","text":"","title":"Parameters"},{"location":"source/classes/BulkDelete/#pos","text":"Position","title":"pos"},{"location":"source/classes/BulkDelete/#name","text":"string","title":"name"},{"location":"source/classes/BulkDelete/#children","text":"Operand []","title":"children"},{"location":"source/classes/BulkDelete/#entity","text":"string","title":"entity"},{"location":"source/classes/BulkDelete/#alias","text":"string","title":"alias"},{"location":"source/classes/BulkDelete/#returns","text":"BulkDelete","title":"Returns"},{"location":"source/classes/BulkDelete/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/BulkDelete/#properties","text":"","title":"Properties"},{"location":"source/classes/BulkDelete/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/BulkDelete/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/BulkDelete/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/BulkDelete/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/BulkDelete/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/BulkDelete/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/BulkDelete/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/BulkDelete/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/BulkDelete/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/BulkDelete/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/BulkDelete/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/BulkDelete/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/BulkDelete/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/BulkDelete/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/BulkDelete/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/BulkDelete/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/BulkDelete/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/BulkDelete/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/BulkDelete/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/BulkDelete/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/BulkDelete/#methods","text":"","title":"Methods"},{"location":"source/classes/BulkDelete/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/BulkDelete/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/BulkDelete/#context","text":"Context","title":"context"},{"location":"source/classes/BulkDelete/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/BulkDelete/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/BulkDelete/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/BulkDelete/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/BulkDelete/#context_1","text":"Context","title":"context"},{"location":"source/classes/BulkDelete/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkDelete/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/BulkDelete/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/BulkDelete/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/BulkDelete/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/BulkDelete/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/BulkDelete/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/BulkDelete/#context_2","text":"Context","title":"context"},{"location":"source/classes/BulkDelete/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkDelete/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/BulkInsert/","text":"Lambda ORM Lambda ORM / BulkInsert Class: BulkInsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:40 Extends Clause Constructors Constructor new BulkInsert ( pos , name , children , entity , alias ): BulkInsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns BulkInsert Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"BulkInsert"},{"location":"source/classes/BulkInsert/#class-bulkinsert","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:40","title":"Class: BulkInsert"},{"location":"source/classes/BulkInsert/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/BulkInsert/#constructors","text":"","title":"Constructors"},{"location":"source/classes/BulkInsert/#constructor","text":"new BulkInsert ( pos , name , children , entity , alias ): BulkInsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/BulkInsert/#parameters","text":"","title":"Parameters"},{"location":"source/classes/BulkInsert/#pos","text":"Position","title":"pos"},{"location":"source/classes/BulkInsert/#name","text":"string","title":"name"},{"location":"source/classes/BulkInsert/#children","text":"Operand []","title":"children"},{"location":"source/classes/BulkInsert/#entity","text":"string","title":"entity"},{"location":"source/classes/BulkInsert/#alias","text":"string","title":"alias"},{"location":"source/classes/BulkInsert/#returns","text":"BulkInsert","title":"Returns"},{"location":"source/classes/BulkInsert/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/BulkInsert/#properties","text":"","title":"Properties"},{"location":"source/classes/BulkInsert/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/BulkInsert/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/BulkInsert/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/BulkInsert/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/BulkInsert/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/BulkInsert/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/BulkInsert/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/BulkInsert/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/BulkInsert/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/BulkInsert/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/BulkInsert/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/BulkInsert/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/BulkInsert/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/BulkInsert/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/BulkInsert/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/BulkInsert/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/BulkInsert/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/BulkInsert/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/BulkInsert/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/BulkInsert/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/BulkInsert/#methods","text":"","title":"Methods"},{"location":"source/classes/BulkInsert/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/BulkInsert/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/BulkInsert/#context","text":"Context","title":"context"},{"location":"source/classes/BulkInsert/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/BulkInsert/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/BulkInsert/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/BulkInsert/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/BulkInsert/#context_1","text":"Context","title":"context"},{"location":"source/classes/BulkInsert/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkInsert/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/BulkInsert/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/BulkInsert/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/BulkInsert/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/BulkInsert/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/BulkInsert/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/BulkInsert/#context_2","text":"Context","title":"context"},{"location":"source/classes/BulkInsert/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkInsert/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/BulkMerge/","text":"Lambda ORM Lambda ORM / BulkMerge Class: BulkMerge Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:50 Extends Clause Constructors Constructor new BulkMerge ( pos , name , children , entity , alias ): BulkMerge Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns BulkMerge Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"BulkMerge"},{"location":"source/classes/BulkMerge/#class-bulkmerge","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:50","title":"Class: BulkMerge"},{"location":"source/classes/BulkMerge/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/BulkMerge/#constructors","text":"","title":"Constructors"},{"location":"source/classes/BulkMerge/#constructor","text":"new BulkMerge ( pos , name , children , entity , alias ): BulkMerge Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/BulkMerge/#parameters","text":"","title":"Parameters"},{"location":"source/classes/BulkMerge/#pos","text":"Position","title":"pos"},{"location":"source/classes/BulkMerge/#name","text":"string","title":"name"},{"location":"source/classes/BulkMerge/#children","text":"Operand []","title":"children"},{"location":"source/classes/BulkMerge/#entity","text":"string","title":"entity"},{"location":"source/classes/BulkMerge/#alias","text":"string","title":"alias"},{"location":"source/classes/BulkMerge/#returns","text":"BulkMerge","title":"Returns"},{"location":"source/classes/BulkMerge/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/BulkMerge/#properties","text":"","title":"Properties"},{"location":"source/classes/BulkMerge/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/BulkMerge/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/BulkMerge/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/BulkMerge/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/BulkMerge/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/BulkMerge/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/BulkMerge/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/BulkMerge/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/BulkMerge/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/BulkMerge/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/BulkMerge/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/BulkMerge/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/BulkMerge/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/BulkMerge/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/BulkMerge/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/BulkMerge/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/BulkMerge/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/BulkMerge/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/BulkMerge/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/BulkMerge/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/BulkMerge/#methods","text":"","title":"Methods"},{"location":"source/classes/BulkMerge/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/BulkMerge/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/BulkMerge/#context","text":"Context","title":"context"},{"location":"source/classes/BulkMerge/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/BulkMerge/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/BulkMerge/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/BulkMerge/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/BulkMerge/#context_1","text":"Context","title":"context"},{"location":"source/classes/BulkMerge/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkMerge/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/BulkMerge/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/BulkMerge/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/BulkMerge/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/BulkMerge/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/BulkMerge/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/BulkMerge/#context_2","text":"Context","title":"context"},{"location":"source/classes/BulkMerge/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/BulkMerge/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/Clause/","text":"Lambda ORM Lambda ORM / Clause Class: Clause Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:17 Extends Operand Extended by Map Filter GroupBy Having Sort Page From Join Insert BulkInsert Update Upsert Delete BulkDelete BulkMerge Constructors Constructor new Clause ( pos , name , children , entity , alias ): Clause Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Clause Overrides Operand.constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Operand.children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Operand.evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Operand.id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Operand.name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Operand.number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Operand.pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Operand.returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Operand.type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Operand.eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Operand.evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Operand.isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Operand.solve","title":"Clause"},{"location":"source/classes/Clause/#class-clause","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:17","title":"Class: Clause"},{"location":"source/classes/Clause/#extends","text":"Operand","title":"Extends"},{"location":"source/classes/Clause/#extended-by","text":"Map Filter GroupBy Having Sort Page From Join Insert BulkInsert Update Upsert Delete BulkDelete BulkMerge","title":"Extended by"},{"location":"source/classes/Clause/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Clause/#constructor","text":"new Clause ( pos , name , children , entity , alias ): Clause Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Clause/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Clause/#pos","text":"Position","title":"pos"},{"location":"source/classes/Clause/#name","text":"string","title":"name"},{"location":"source/classes/Clause/#children","text":"Operand []","title":"children"},{"location":"source/classes/Clause/#entity","text":"string","title":"entity"},{"location":"source/classes/Clause/#alias","text":"string","title":"alias"},{"location":"source/classes/Clause/#returns","text":"Clause","title":"Returns"},{"location":"source/classes/Clause/#overrides","text":"Operand.constructor","title":"Overrides"},{"location":"source/classes/Clause/#properties","text":"","title":"Properties"},{"location":"source/classes/Clause/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Clause/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Clause/#inherited-from","text":"Operand.children","title":"Inherited from"},{"location":"source/classes/Clause/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Clause/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Clause/#inherited-from_1","text":"Operand.evaluator","title":"Inherited from"},{"location":"source/classes/Clause/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Clause/#inherited-from_2","text":"Operand.id","title":"Inherited from"},{"location":"source/classes/Clause/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Clause/#inherited-from_3","text":"Operand.name","title":"Inherited from"},{"location":"source/classes/Clause/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Clause/#inherited-from_4","text":"Operand.number","title":"Inherited from"},{"location":"source/classes/Clause/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Clause/#inherited-from_5","text":"Operand.pos","title":"Inherited from"},{"location":"source/classes/Clause/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Clause/#inherited-from_6","text":"Operand.returnType","title":"Inherited from"},{"location":"source/classes/Clause/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Clause/#inherited-from_7","text":"Operand.type","title":"Inherited from"},{"location":"source/classes/Clause/#methods","text":"","title":"Methods"},{"location":"source/classes/Clause/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Clause/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Clause/#context","text":"Context","title":"context"},{"location":"source/classes/Clause/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Clause/#inherited-from_8","text":"Operand.eval","title":"Inherited from"},{"location":"source/classes/Clause/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Clause/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Clause/#context_1","text":"Context","title":"context"},{"location":"source/classes/Clause/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Clause/#inherited-from_9","text":"Operand.evalAsync","title":"Inherited from"},{"location":"source/classes/Clause/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Clause/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Clause/#inherited-from_10","text":"Operand.isAsync","title":"Inherited from"},{"location":"source/classes/Clause/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Clause/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Clause/#context_2","text":"Context","title":"context"},{"location":"source/classes/Clause/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Clause/#inherited-from_11","text":"Operand.solve","title":"Inherited from"},{"location":"source/classes/ConnectionError/","text":"Lambda ORM Lambda ORM / ConnectionError Class: ConnectionError Defined in: src/lib/connection/domain/errors.ts:1 Extends Error Constructors Constructor new ConnectionError ( message ): ConnectionError Defined in: src/lib/connection/domain/errors.ts:2 Parameters message string Returns ConnectionError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"ConnectionError"},{"location":"source/classes/ConnectionError/#class-connectionerror","text":"Defined in: src/lib/connection/domain/errors.ts:1","title":"Class: ConnectionError"},{"location":"source/classes/ConnectionError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/ConnectionError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ConnectionError/#constructor","text":"new ConnectionError ( message ): ConnectionError Defined in: src/lib/connection/domain/errors.ts:2","title":"Constructor"},{"location":"source/classes/ConnectionError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ConnectionError/#message","text":"string","title":"message"},{"location":"source/classes/ConnectionError/#returns","text":"ConnectionError","title":"Returns"},{"location":"source/classes/ConnectionError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/ConnectionError/#properties","text":"","title":"Properties"},{"location":"source/classes/ConnectionError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/ConnectionError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/ConnectionError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/ConnectionError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/ConnectionError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/ConnectionError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/ConnectionError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/ConnectionError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/ConnectionError/#methods","text":"","title":"Methods"},{"location":"source/classes/ConnectionError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/ConnectionError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ConnectionError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/ConnectionError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/ConnectionError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/ConnectionError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/ConnectionError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/ConnectionError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ConnectionError/#err","text":"Error","title":"err"},{"location":"source/classes/ConnectionError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/ConnectionError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/ConnectionError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/ConnectionError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/ConnectionFacade/","text":"Lambda ORM Lambda ORM / ConnectionFacade Class: ConnectionFacade Defined in: src/lib/connection/application/facade.ts:7 Constructors Constructor new ConnectionFacade ( dialectService , poolService , acquireConnection , releaseConnection ): ConnectionFacade Defined in: src/lib/connection/application/facade.ts:9 Parameters dialectService DialectPoolService poolService ConnectionPoolService acquireConnection AcquireConnection releaseConnection ReleaseConnection Returns ConnectionFacade Methods acquire() acquire ( name ): Promise \\< Connection > Defined in: src/lib/connection/application/facade.ts:32 Parameters name string Returns Promise \\< Connection > addDialect() addDialect ( dialect , classConnectionPool ): ConnectionFacade Defined in: src/lib/connection/application/facade.ts:15 Parameters dialect string classConnectionPool any Returns ConnectionFacade end() end (): Promise \\< void > Defined in: src/lib/connection/application/facade.ts:28 Returns Promise \\< void > getConfig() getConfig ( name ): ConnectionConfig Defined in: src/lib/connection/application/facade.ts:24 Parameters name string Returns ConnectionConfig load() load ( config ): void Defined in: src/lib/connection/application/facade.ts:20 Parameters config ConnectionConfig Returns void release() release ( connection ): Promise \\< void > Defined in: src/lib/connection/application/facade.ts:36 Parameters connection Connection Returns Promise \\< void >","title":"ConnectionFacade"},{"location":"source/classes/ConnectionFacade/#class-connectionfacade","text":"Defined in: src/lib/connection/application/facade.ts:7","title":"Class: ConnectionFacade"},{"location":"source/classes/ConnectionFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ConnectionFacade/#constructor","text":"new ConnectionFacade ( dialectService , poolService , acquireConnection , releaseConnection ): ConnectionFacade Defined in: src/lib/connection/application/facade.ts:9","title":"Constructor"},{"location":"source/classes/ConnectionFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#dialectservice","text":"DialectPoolService","title":"dialectService"},{"location":"source/classes/ConnectionFacade/#poolservice","text":"ConnectionPoolService","title":"poolService"},{"location":"source/classes/ConnectionFacade/#acquireconnection","text":"AcquireConnection","title":"acquireConnection"},{"location":"source/classes/ConnectionFacade/#releaseconnection","text":"ReleaseConnection","title":"releaseConnection"},{"location":"source/classes/ConnectionFacade/#returns","text":"ConnectionFacade","title":"Returns"},{"location":"source/classes/ConnectionFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/ConnectionFacade/#acquire","text":"acquire ( name ): Promise \\< Connection > Defined in: src/lib/connection/application/facade.ts:32","title":"acquire()"},{"location":"source/classes/ConnectionFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#name","text":"string","title":"name"},{"location":"source/classes/ConnectionFacade/#returns_1","text":"Promise \\< Connection >","title":"Returns"},{"location":"source/classes/ConnectionFacade/#adddialect","text":"addDialect ( dialect , classConnectionPool ): ConnectionFacade Defined in: src/lib/connection/application/facade.ts:15","title":"addDialect()"},{"location":"source/classes/ConnectionFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#dialect","text":"string","title":"dialect"},{"location":"source/classes/ConnectionFacade/#classconnectionpool","text":"any","title":"classConnectionPool"},{"location":"source/classes/ConnectionFacade/#returns_2","text":"ConnectionFacade","title":"Returns"},{"location":"source/classes/ConnectionFacade/#end","text":"end (): Promise \\< void > Defined in: src/lib/connection/application/facade.ts:28","title":"end()"},{"location":"source/classes/ConnectionFacade/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ConnectionFacade/#getconfig","text":"getConfig ( name ): ConnectionConfig Defined in: src/lib/connection/application/facade.ts:24","title":"getConfig()"},{"location":"source/classes/ConnectionFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#name_1","text":"string","title":"name"},{"location":"source/classes/ConnectionFacade/#returns_4","text":"ConnectionConfig","title":"Returns"},{"location":"source/classes/ConnectionFacade/#load","text":"load ( config ): void Defined in: src/lib/connection/application/facade.ts:20","title":"load()"},{"location":"source/classes/ConnectionFacade/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#config","text":"ConnectionConfig","title":"config"},{"location":"source/classes/ConnectionFacade/#returns_5","text":"void","title":"Returns"},{"location":"source/classes/ConnectionFacade/#release","text":"release ( connection ): Promise \\< void > Defined in: src/lib/connection/application/facade.ts:36","title":"release()"},{"location":"source/classes/ConnectionFacade/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/ConnectionFacade/#connection","text":"Connection","title":"connection"},{"location":"source/classes/ConnectionFacade/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ConnectionPoolService/","text":"Lambda ORM Lambda ORM / ConnectionPoolService Class: ConnectionPoolService Defined in: src/lib/connection/application/services/connectionPoolService.ts:4 Constructors Constructor new ConnectionPoolService ( dialectPoolService ): ConnectionPoolService Defined in: src/lib/connection/application/services/connectionPoolService.ts:7 Parameters dialectPoolService DialectPoolService Returns ConnectionPoolService Methods end() end ( name ): Promise \\< void > Defined in: src/lib/connection/application/services/connectionPoolService.ts:21 Parameters name string Returns Promise \\< void > endAll() endAll (): Promise \\< void > Defined in: src/lib/connection/application/services/connectionPoolService.ts:28 Returns Promise \\< void > get() get ( name ): ConnectionPool Defined in: src/lib/connection/application/services/connectionPoolService.ts:13 Parameters name string Returns ConnectionPool load() load ( config ): void Defined in: src/lib/connection/application/services/connectionPoolService.ts:9 Parameters config ConnectionConfig Returns void","title":"ConnectionPoolService"},{"location":"source/classes/ConnectionPoolService/#class-connectionpoolservice","text":"Defined in: src/lib/connection/application/services/connectionPoolService.ts:4","title":"Class: ConnectionPoolService"},{"location":"source/classes/ConnectionPoolService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ConnectionPoolService/#constructor","text":"new ConnectionPoolService ( dialectPoolService ): ConnectionPoolService Defined in: src/lib/connection/application/services/connectionPoolService.ts:7","title":"Constructor"},{"location":"source/classes/ConnectionPoolService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ConnectionPoolService/#dialectpoolservice","text":"DialectPoolService","title":"dialectPoolService"},{"location":"source/classes/ConnectionPoolService/#returns","text":"ConnectionPoolService","title":"Returns"},{"location":"source/classes/ConnectionPoolService/#methods","text":"","title":"Methods"},{"location":"source/classes/ConnectionPoolService/#end","text":"end ( name ): Promise \\< void > Defined in: src/lib/connection/application/services/connectionPoolService.ts:21","title":"end()"},{"location":"source/classes/ConnectionPoolService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ConnectionPoolService/#name","text":"string","title":"name"},{"location":"source/classes/ConnectionPoolService/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ConnectionPoolService/#endall","text":"endAll (): Promise \\< void > Defined in: src/lib/connection/application/services/connectionPoolService.ts:28","title":"endAll()"},{"location":"source/classes/ConnectionPoolService/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ConnectionPoolService/#get","text":"get ( name ): ConnectionPool Defined in: src/lib/connection/application/services/connectionPoolService.ts:13","title":"get()"},{"location":"source/classes/ConnectionPoolService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ConnectionPoolService/#name_1","text":"string","title":"name"},{"location":"source/classes/ConnectionPoolService/#returns_3","text":"ConnectionPool","title":"Returns"},{"location":"source/classes/ConnectionPoolService/#load","text":"load ( config ): void Defined in: src/lib/connection/application/services/connectionPoolService.ts:9","title":"load()"},{"location":"source/classes/ConnectionPoolService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ConnectionPoolService/#config","text":"ConnectionConfig","title":"config"},{"location":"source/classes/ConnectionPoolService/#returns_4","text":"void","title":"Returns"},{"location":"source/classes/Constant/","text":"Lambda ORM Lambda ORM / Constant Class: Constant Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:5 Extends Operand Constructors Constructor new Constant ( pos , name , type , children? , returnType? ): Constant Defined in: node_modules/3xpr/shared/domain/operand.d.ts:49 Parameters pos Position name any type OperandType children? Operand [] returnType? Type Returns Constant Inherited from Operand.constructor Properties children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Operand.children evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Operand.evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Operand.id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Operand.name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Operand.number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Operand.pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Operand.returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Operand.type Methods eval() eval (): any Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:6 Returns any Overrides Operand.eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Operand.evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Operand.isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Operand.solve","title":"Constant"},{"location":"source/classes/Constant/#class-constant","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:5","title":"Class: Constant"},{"location":"source/classes/Constant/#extends","text":"Operand","title":"Extends"},{"location":"source/classes/Constant/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Constant/#constructor","text":"new Constant ( pos , name , type , children? , returnType? ): Constant Defined in: node_modules/3xpr/shared/domain/operand.d.ts:49","title":"Constructor"},{"location":"source/classes/Constant/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Constant/#pos","text":"Position","title":"pos"},{"location":"source/classes/Constant/#name","text":"any","title":"name"},{"location":"source/classes/Constant/#type","text":"OperandType","title":"type"},{"location":"source/classes/Constant/#children","text":"Operand []","title":"children?"},{"location":"source/classes/Constant/#returntype","text":"Type","title":"returnType?"},{"location":"source/classes/Constant/#returns","text":"Constant","title":"Returns"},{"location":"source/classes/Constant/#inherited-from","text":"Operand.constructor","title":"Inherited from"},{"location":"source/classes/Constant/#properties","text":"","title":"Properties"},{"location":"source/classes/Constant/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Constant/#inherited-from_1","text":"Operand.children","title":"Inherited from"},{"location":"source/classes/Constant/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Constant/#inherited-from_2","text":"Operand.evaluator","title":"Inherited from"},{"location":"source/classes/Constant/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Constant/#inherited-from_3","text":"Operand.id","title":"Inherited from"},{"location":"source/classes/Constant/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Constant/#inherited-from_4","text":"Operand.name","title":"Inherited from"},{"location":"source/classes/Constant/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Constant/#inherited-from_5","text":"Operand.number","title":"Inherited from"},{"location":"source/classes/Constant/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Constant/#inherited-from_6","text":"Operand.pos","title":"Inherited from"},{"location":"source/classes/Constant/#returntype_1","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Constant/#inherited-from_7","text":"Operand.returnType","title":"Inherited from"},{"location":"source/classes/Constant/#type_1","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Constant/#inherited-from_8","text":"Operand.type","title":"Inherited from"},{"location":"source/classes/Constant/#methods","text":"","title":"Methods"},{"location":"source/classes/Constant/#eval","text":"eval (): any Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:6","title":"eval()"},{"location":"source/classes/Constant/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Constant/#overrides","text":"Operand.eval","title":"Overrides"},{"location":"source/classes/Constant/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Constant/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Constant/#context","text":"Context","title":"context"},{"location":"source/classes/Constant/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Constant/#inherited-from_9","text":"Operand.evalAsync","title":"Inherited from"},{"location":"source/classes/Constant/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Constant/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Constant/#inherited-from_10","text":"Operand.isAsync","title":"Inherited from"},{"location":"source/classes/Constant/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Constant/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Constant/#context_1","text":"Context","title":"context"},{"location":"source/classes/Constant/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Constant/#inherited-from_11","text":"Operand.solve","title":"Inherited from"},{"location":"source/classes/CreateEntitiesService/","text":"Lambda ORM Lambda ORM / CreateEntitiesService Class: CreateEntitiesService Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:4 Constructors Constructor new CreateEntitiesService ( helper ): CreateEntitiesService Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:6 Parameters helper SchemaHelper Returns CreateEntitiesService Methods getEntities() getEntities ( name , type ): Entity [] Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:7 Parameters name string type Type Returns Entity []","title":"CreateEntitiesService"},{"location":"source/classes/CreateEntitiesService/#class-createentitiesservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:4","title":"Class: CreateEntitiesService"},{"location":"source/classes/CreateEntitiesService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/CreateEntitiesService/#constructor","text":"new CreateEntitiesService ( helper ): CreateEntitiesService Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:6","title":"Constructor"},{"location":"source/classes/CreateEntitiesService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/CreateEntitiesService/#helper","text":"SchemaHelper","title":"helper"},{"location":"source/classes/CreateEntitiesService/#returns","text":"CreateEntitiesService","title":"Returns"},{"location":"source/classes/CreateEntitiesService/#methods","text":"","title":"Methods"},{"location":"source/classes/CreateEntitiesService/#getentities","text":"getEntities ( name , type ): Entity [] Defined in: node_modules/lambdaorm-base/schema/application/services/createEntitiesService.d.ts:7","title":"getEntities()"},{"location":"source/classes/CreateEntitiesService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/CreateEntitiesService/#name","text":"string","title":"name"},{"location":"source/classes/CreateEntitiesService/#type","text":"Type","title":"type"},{"location":"source/classes/CreateEntitiesService/#returns_1","text":"Entity []","title":"Returns"},{"location":"source/classes/CreateSchema/","text":"Lambda ORM Lambda ORM / CreateSchema Class: CreateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:3 Constructors Constructor new CreateSchema ( schemaService ): CreateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:5 Parameters schemaService SchemaService Returns CreateSchema Methods create() create ( dialect? , connection? ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:6 Parameters dialect? Dialect connection? any Returns Schema","title":"CreateSchema"},{"location":"source/classes/CreateSchema/#class-createschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:3","title":"Class: CreateSchema"},{"location":"source/classes/CreateSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/CreateSchema/#constructor","text":"new CreateSchema ( schemaService ): CreateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:5","title":"Constructor"},{"location":"source/classes/CreateSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/CreateSchema/#schemaservice","text":"SchemaService","title":"schemaService"},{"location":"source/classes/CreateSchema/#returns","text":"CreateSchema","title":"Returns"},{"location":"source/classes/CreateSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/CreateSchema/#create","text":"create ( dialect? , connection? ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/create.d.ts:6","title":"create()"},{"location":"source/classes/CreateSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/CreateSchema/#dialect","text":"Dialect","title":"dialect?"},{"location":"source/classes/CreateSchema/#connection","text":"any","title":"connection?"},{"location":"source/classes/CreateSchema/#returns_1","text":"Schema","title":"Returns"},{"location":"source/classes/CryptoHelper/","text":"Lambda ORM Lambda ORM / CryptoHelper Class: CryptoHelper Defined in: src/lib/shared/infrastructure/helper.ts:5 Constructors Constructor new CryptoHelper (): CryptoHelper Returns CryptoHelper Methods decrypt() decrypt ( value , key ): string Defined in: src/lib/shared/infrastructure/helper.ts:10 Parameters value string key string Returns string encrypt() encrypt ( value , key ): string Defined in: src/lib/shared/infrastructure/helper.ts:6 Parameters value string key string Returns string getBase64() getBase64 ( value ): string Defined in: src/lib/shared/infrastructure/helper.ts:18 Parameters value string Returns string toBase64() toBase64 ( value ): string Defined in: src/lib/shared/infrastructure/helper.ts:14 Parameters value string Returns string","title":"CryptoHelper"},{"location":"source/classes/CryptoHelper/#class-cryptohelper","text":"Defined in: src/lib/shared/infrastructure/helper.ts:5","title":"Class: CryptoHelper"},{"location":"source/classes/CryptoHelper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/CryptoHelper/#constructor","text":"new CryptoHelper (): CryptoHelper","title":"Constructor"},{"location":"source/classes/CryptoHelper/#returns","text":"CryptoHelper","title":"Returns"},{"location":"source/classes/CryptoHelper/#methods","text":"","title":"Methods"},{"location":"source/classes/CryptoHelper/#decrypt","text":"decrypt ( value , key ): string Defined in: src/lib/shared/infrastructure/helper.ts:10","title":"decrypt()"},{"location":"source/classes/CryptoHelper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/CryptoHelper/#value","text":"string","title":"value"},{"location":"source/classes/CryptoHelper/#key","text":"string","title":"key"},{"location":"source/classes/CryptoHelper/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/CryptoHelper/#encrypt","text":"encrypt ( value , key ): string Defined in: src/lib/shared/infrastructure/helper.ts:6","title":"encrypt()"},{"location":"source/classes/CryptoHelper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/CryptoHelper/#value_1","text":"string","title":"value"},{"location":"source/classes/CryptoHelper/#key_1","text":"string","title":"key"},{"location":"source/classes/CryptoHelper/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/CryptoHelper/#getbase64","text":"getBase64 ( value ): string Defined in: src/lib/shared/infrastructure/helper.ts:18","title":"getBase64()"},{"location":"source/classes/CryptoHelper/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/CryptoHelper/#value_2","text":"string","title":"value"},{"location":"source/classes/CryptoHelper/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/CryptoHelper/#tobase64","text":"toBase64 ( value ): string Defined in: src/lib/shared/infrastructure/helper.ts:14","title":"toBase64()"},{"location":"source/classes/CryptoHelper/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/CryptoHelper/#value_3","text":"string","title":"value"},{"location":"source/classes/CryptoHelper/#returns_4","text":"string","title":"Returns"},{"location":"source/classes/DDLBuilderService/","text":"Lambda ORM Lambda ORM / DDLBuilderService Class: DDLBuilderService Defined in: src/lib/language/application/services/ddlBuilder.ts:11 Constructors Constructor new DDLBuilderService ( schemaState , languages , stage , helper ): DDLBuilderService Defined in: src/lib/language/application/services/ddlBuilder.ts:13 Parameters schemaState SchemaState languages LanguagesService stage string helper OrmH3lp Returns DDLBuilderService Properties stage readonly stage : string Defined in: src/lib/language/application/services/ddlBuilder.ts:15 Methods drop() drop ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:21 Parameters mappings Mapping [] Returns Query [] sync() sync ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:47 Parameters mappings Mapping [] Returns Query [] truncate() truncate ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:34 Parameters mappings Mapping [] Returns Query []","title":"DDLBuilderService"},{"location":"source/classes/DDLBuilderService/#class-ddlbuilderservice","text":"Defined in: src/lib/language/application/services/ddlBuilder.ts:11","title":"Class: DDLBuilderService"},{"location":"source/classes/DDLBuilderService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/DDLBuilderService/#constructor","text":"new DDLBuilderService ( schemaState , languages , stage , helper ): DDLBuilderService Defined in: src/lib/language/application/services/ddlBuilder.ts:13","title":"Constructor"},{"location":"source/classes/DDLBuilderService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/DDLBuilderService/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/DDLBuilderService/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/DDLBuilderService/#stage","text":"string","title":"stage"},{"location":"source/classes/DDLBuilderService/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/DDLBuilderService/#returns","text":"DDLBuilderService","title":"Returns"},{"location":"source/classes/DDLBuilderService/#properties","text":"","title":"Properties"},{"location":"source/classes/DDLBuilderService/#stage_1","text":"readonly stage : string Defined in: src/lib/language/application/services/ddlBuilder.ts:15","title":"stage"},{"location":"source/classes/DDLBuilderService/#methods","text":"","title":"Methods"},{"location":"source/classes/DDLBuilderService/#drop","text":"drop ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:21","title":"drop()"},{"location":"source/classes/DDLBuilderService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/DDLBuilderService/#mappings","text":"Mapping []","title":"mappings"},{"location":"source/classes/DDLBuilderService/#returns_1","text":"Query []","title":"Returns"},{"location":"source/classes/DDLBuilderService/#sync","text":"sync ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:47","title":"sync()"},{"location":"source/classes/DDLBuilderService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/DDLBuilderService/#mappings_1","text":"Mapping []","title":"mappings"},{"location":"source/classes/DDLBuilderService/#returns_2","text":"Query []","title":"Returns"},{"location":"source/classes/DDLBuilderService/#truncate","text":"truncate ( mappings ): Query [] Defined in: src/lib/language/application/services/ddlBuilder.ts:34","title":"truncate()"},{"location":"source/classes/DDLBuilderService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/DDLBuilderService/#mappings_2","text":"Mapping []","title":"mappings"},{"location":"source/classes/DDLBuilderService/#returns_3","text":"Query []","title":"Returns"},{"location":"source/classes/Data/","text":"Lambda ORM Lambda ORM / Data Class: Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:1 Constructors Constructor new Data ( data , parent? ): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:4 Parameters data any parent? Data Returns Data Properties data data : any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:2 parent parent : any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:3 Methods clone() clone (): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:6 Returns Data contains() contains ( name ): boolean Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:8 Parameters name string Returns boolean get() get ( name ): any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:9 Parameters name string Returns any getData() getData ( variable ): any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:7 Parameters variable string Returns any init() init ( name , value ): void Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:11 Parameters name string value any Returns void newData() newData (): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:5 Returns Data set() set ( name , value ): void Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:10 Parameters name string value any Returns void","title":"Data"},{"location":"source/classes/Data/#class-data","text":"Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:1","title":"Class: Data"},{"location":"source/classes/Data/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Data/#constructor","text":"new Data ( data , parent? ): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:4","title":"Constructor"},{"location":"source/classes/Data/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Data/#data","text":"any","title":"data"},{"location":"source/classes/Data/#parent","text":"Data","title":"parent?"},{"location":"source/classes/Data/#returns","text":"Data","title":"Returns"},{"location":"source/classes/Data/#properties","text":"","title":"Properties"},{"location":"source/classes/Data/#data_1","text":"data : any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:2","title":"data"},{"location":"source/classes/Data/#parent_1","text":"parent : any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:3","title":"parent"},{"location":"source/classes/Data/#methods","text":"","title":"Methods"},{"location":"source/classes/Data/#clone","text":"clone (): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:6","title":"clone()"},{"location":"source/classes/Data/#returns_1","text":"Data","title":"Returns"},{"location":"source/classes/Data/#contains","text":"contains ( name ): boolean Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:8","title":"contains()"},{"location":"source/classes/Data/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Data/#name","text":"string","title":"name"},{"location":"source/classes/Data/#returns_2","text":"boolean","title":"Returns"},{"location":"source/classes/Data/#get","text":"get ( name ): any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:9","title":"get()"},{"location":"source/classes/Data/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Data/#name_1","text":"string","title":"name"},{"location":"source/classes/Data/#returns_3","text":"any","title":"Returns"},{"location":"source/classes/Data/#getdata","text":"getData ( variable ): any Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:7","title":"getData()"},{"location":"source/classes/Data/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Data/#variable","text":"string","title":"variable"},{"location":"source/classes/Data/#returns_4","text":"any","title":"Returns"},{"location":"source/classes/Data/#init","text":"init ( name , value ): void Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:11","title":"init()"},{"location":"source/classes/Data/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/Data/#name_2","text":"string","title":"name"},{"location":"source/classes/Data/#value","text":"any","title":"value"},{"location":"source/classes/Data/#returns_5","text":"void","title":"Returns"},{"location":"source/classes/Data/#newdata","text":"newData (): Data Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:5","title":"newData()"},{"location":"source/classes/Data/#returns_6","text":"Data","title":"Returns"},{"location":"source/classes/Data/#set","text":"set ( name , value ): void Defined in: node_modules/lambdaorm-base/query/domain/data.d.ts:10","title":"set()"},{"location":"source/classes/Data/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/Data/#name_3","text":"string","title":"name"},{"location":"source/classes/Data/#value_1","text":"any","title":"value"},{"location":"source/classes/Data/#returns_7","text":"void","title":"Returns"},{"location":"source/classes/DataSourceConfigService/","text":"Lambda ORM Lambda ORM / DataSourceConfigService Class: DataSourceConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:2 Constructors Constructor new DataSourceConfigService (): DataSourceConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:5 Returns DataSourceConfigService Properties default? optional default : string Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:4 sources sources : Source [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:3 Methods get() get ( name? ): Source Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:7 Parameters name? string Returns Source load() load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:6 Parameters value Source Returns void","title":"DataSourceConfigService"},{"location":"source/classes/DataSourceConfigService/#class-datasourceconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:2","title":"Class: DataSourceConfigService"},{"location":"source/classes/DataSourceConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/DataSourceConfigService/#constructor","text":"new DataSourceConfigService (): DataSourceConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:5","title":"Constructor"},{"location":"source/classes/DataSourceConfigService/#returns","text":"DataSourceConfigService","title":"Returns"},{"location":"source/classes/DataSourceConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/DataSourceConfigService/#default","text":"optional default : string Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:4","title":"default?"},{"location":"source/classes/DataSourceConfigService/#sources","text":"sources : Source [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:3","title":"sources"},{"location":"source/classes/DataSourceConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/DataSourceConfigService/#get","text":"get ( name? ): Source Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:7","title":"get()"},{"location":"source/classes/DataSourceConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/DataSourceConfigService/#name","text":"string","title":"name?"},{"location":"source/classes/DataSourceConfigService/#returns_1","text":"Source","title":"Returns"},{"location":"source/classes/DataSourceConfigService/#load","text":"load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/dataSourceConfigService.d.ts:6","title":"load()"},{"location":"source/classes/DataSourceConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/DataSourceConfigService/#value","text":"Source","title":"value"},{"location":"source/classes/DataSourceConfigService/#returns_2","text":"void","title":"Returns"},{"location":"source/classes/Delete/","text":"Lambda ORM Lambda ORM / Delete Class: Delete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:46 Extends Clause Constructors Constructor new Delete ( pos , name , children , entity , alias ): Delete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Delete Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Delete"},{"location":"source/classes/Delete/#class-delete","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:46","title":"Class: Delete"},{"location":"source/classes/Delete/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Delete/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Delete/#constructor","text":"new Delete ( pos , name , children , entity , alias ): Delete Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Delete/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Delete/#pos","text":"Position","title":"pos"},{"location":"source/classes/Delete/#name","text":"string","title":"name"},{"location":"source/classes/Delete/#children","text":"Operand []","title":"children"},{"location":"source/classes/Delete/#entity","text":"string","title":"entity"},{"location":"source/classes/Delete/#alias","text":"string","title":"alias"},{"location":"source/classes/Delete/#returns","text":"Delete","title":"Returns"},{"location":"source/classes/Delete/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Delete/#properties","text":"","title":"Properties"},{"location":"source/classes/Delete/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Delete/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Delete/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Delete/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Delete/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Delete/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Delete/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Delete/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Delete/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Delete/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Delete/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Delete/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Delete/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Delete/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Delete/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Delete/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Delete/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Delete/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Delete/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Delete/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Delete/#methods","text":"","title":"Methods"},{"location":"source/classes/Delete/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Delete/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Delete/#context","text":"Context","title":"context"},{"location":"source/classes/Delete/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Delete/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Delete/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Delete/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Delete/#context_1","text":"Context","title":"context"},{"location":"source/classes/Delete/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Delete/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Delete/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Delete/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Delete/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Delete/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Delete/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Delete/#context_2","text":"Context","title":"context"},{"location":"source/classes/Delete/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Delete/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/DialectPoolService/","text":"Lambda ORM Lambda ORM / DialectPoolService Class: DialectPoolService Defined in: src/lib/connection/application/services/dialectPoolService.ts:4 Constructors Constructor new DialectPoolService ( helper ): DialectPoolService Defined in: src/lib/connection/application/services/dialectPoolService.ts:6 Parameters helper OrmH3lp Returns DialectPoolService Methods add() add ( dialect , classConnectionPool ): void Defined in: src/lib/connection/application/services/dialectPoolService.ts:10 Parameters dialect string classConnectionPool any Returns void create() create ( config ): ConnectionPool Defined in: src/lib/connection/application/services/dialectPoolService.ts:14 Parameters config ConnectionConfig Returns ConnectionPool","title":"DialectPoolService"},{"location":"source/classes/DialectPoolService/#class-dialectpoolservice","text":"Defined in: src/lib/connection/application/services/dialectPoolService.ts:4","title":"Class: DialectPoolService"},{"location":"source/classes/DialectPoolService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/DialectPoolService/#constructor","text":"new DialectPoolService ( helper ): DialectPoolService Defined in: src/lib/connection/application/services/dialectPoolService.ts:6","title":"Constructor"},{"location":"source/classes/DialectPoolService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/DialectPoolService/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/DialectPoolService/#returns","text":"DialectPoolService","title":"Returns"},{"location":"source/classes/DialectPoolService/#methods","text":"","title":"Methods"},{"location":"source/classes/DialectPoolService/#add","text":"add ( dialect , classConnectionPool ): void Defined in: src/lib/connection/application/services/dialectPoolService.ts:10","title":"add()"},{"location":"source/classes/DialectPoolService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/DialectPoolService/#dialect","text":"string","title":"dialect"},{"location":"source/classes/DialectPoolService/#classconnectionpool","text":"any","title":"classConnectionPool"},{"location":"source/classes/DialectPoolService/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/DialectPoolService/#create","text":"create ( config ): ConnectionPool Defined in: src/lib/connection/application/services/dialectPoolService.ts:14","title":"create()"},{"location":"source/classes/DialectPoolService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/DialectPoolService/#config","text":"ConnectionConfig","title":"config"},{"location":"source/classes/DialectPoolService/#returns_2","text":"ConnectionPool","title":"Returns"},{"location":"source/classes/DialectServiceImpl/","text":"Lambda ORM Lambda ORM / DialectServiceImpl Class: DialectServiceImpl Defined in: src/lib/language/application/services/dialectService.ts:3 Implements DialectService Constructors Constructor new DialectServiceImpl ( name , data ): DialectServiceImpl Defined in: src/lib/language/application/services/dialectService.ts:15 Parameters name string data any Returns DialectServiceImpl Properties format format : DialectFormat Defined in: src/lib/language/application/services/dialectService.ts:5 Implementation of DialectService . format name name : string Defined in: src/lib/language/application/services/dialectService.ts:4 Implementation of DialectService . name Accessors solveComposite Get Signature get solveComposite (): boolean Defined in: src/lib/language/application/services/dialectService.ts:77 Returns boolean Implementation of DialectService . solveComposite Methods dbType() dbType ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:109 Parameters name string Returns string Implementation of DialectService . dbType ddl() ddl ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:105 Parameters name string Returns string Implementation of DialectService . ddl delimiter() delimiter ( name , force , excludeUnderscore ): string Defined in: src/lib/language/application/services/dialectService.ts:121 Parameters name string force boolean = false excludeUnderscore boolean = false Returns string Implementation of DialectService . delimiter dml() dml ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:97 Parameters name string Returns string Implementation of DialectService . dml function() function ( name ): any Defined in: src/lib/language/application/services/dialectService.ts:89 Parameters name string Returns any Implementation of DialectService . function getFunctionMetadata() getFunctionMetadata ( name ): null | string Defined in: src/lib/language/application/services/dialectService.ts:150 Parameters name string Returns null | string Implementation of DialectService . getFunctionMetadata getOperatorMetadata() getOperatorMetadata ( name , operands ): null | string Defined in: src/lib/language/application/services/dialectService.ts:138 Parameters name string operands number Returns null | string Implementation of DialectService . getOperatorMetadata isReservedWord() isReservedWord ( name ): boolean Defined in: src/lib/language/application/services/dialectService.ts:81 Parameters name string Returns boolean Implementation of DialectService . isReservedWord operator() operator ( name , operands ): string Defined in: src/lib/language/application/services/dialectService.ts:85 Parameters name string operands number Returns string Implementation of DialectService . operator other() other ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:101 Parameters name string Returns string Implementation of DialectService . other string() string ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:133 Parameters name string Returns string Implementation of DialectService . string support() support ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:93 Parameters name string Returns string Implementation of DialectService . support type() type ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:113 Parameters name string Returns string Implementation of DialectService . type","title":"DialectServiceImpl"},{"location":"source/classes/DialectServiceImpl/#class-dialectserviceimpl","text":"Defined in: src/lib/language/application/services/dialectService.ts:3","title":"Class: DialectServiceImpl"},{"location":"source/classes/DialectServiceImpl/#implements","text":"DialectService","title":"Implements"},{"location":"source/classes/DialectServiceImpl/#constructors","text":"","title":"Constructors"},{"location":"source/classes/DialectServiceImpl/#constructor","text":"new DialectServiceImpl ( name , data ): DialectServiceImpl Defined in: src/lib/language/application/services/dialectService.ts:15","title":"Constructor"},{"location":"source/classes/DialectServiceImpl/#parameters","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#data","text":"any","title":"data"},{"location":"source/classes/DialectServiceImpl/#returns","text":"DialectServiceImpl","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#properties","text":"","title":"Properties"},{"location":"source/classes/DialectServiceImpl/#format","text":"format : DialectFormat Defined in: src/lib/language/application/services/dialectService.ts:5","title":"format"},{"location":"source/classes/DialectServiceImpl/#implementation-of","text":"DialectService . format","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#name_1","text":"name : string Defined in: src/lib/language/application/services/dialectService.ts:4","title":"name"},{"location":"source/classes/DialectServiceImpl/#implementation-of_1","text":"DialectService . name","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#accessors","text":"","title":"Accessors"},{"location":"source/classes/DialectServiceImpl/#solvecomposite","text":"","title":"solveComposite"},{"location":"source/classes/DialectServiceImpl/#get-signature","text":"get solveComposite (): boolean Defined in: src/lib/language/application/services/dialectService.ts:77","title":"Get Signature"},{"location":"source/classes/DialectServiceImpl/#returns_1","text":"boolean","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_2","text":"DialectService . solveComposite","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#methods","text":"","title":"Methods"},{"location":"source/classes/DialectServiceImpl/#dbtype","text":"dbType ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:109","title":"dbType()"},{"location":"source/classes/DialectServiceImpl/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_2","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_3","text":"DialectService . dbType","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#ddl","text":"ddl ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:105","title":"ddl()"},{"location":"source/classes/DialectServiceImpl/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_3","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_4","text":"DialectService . ddl","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#delimiter","text":"delimiter ( name , force , excludeUnderscore ): string Defined in: src/lib/language/application/services/dialectService.ts:121","title":"delimiter()"},{"location":"source/classes/DialectServiceImpl/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_4","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#force","text":"boolean = false","title":"force"},{"location":"source/classes/DialectServiceImpl/#excludeunderscore","text":"boolean = false","title":"excludeUnderscore"},{"location":"source/classes/DialectServiceImpl/#returns_4","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_5","text":"DialectService . delimiter","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#dml","text":"dml ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:97","title":"dml()"},{"location":"source/classes/DialectServiceImpl/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_5","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_6","text":"DialectService . dml","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#function","text":"function ( name ): any Defined in: src/lib/language/application/services/dialectService.ts:89","title":"function()"},{"location":"source/classes/DialectServiceImpl/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_6","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_6","text":"any","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_7","text":"DialectService . function","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#getfunctionmetadata","text":"getFunctionMetadata ( name ): null | string Defined in: src/lib/language/application/services/dialectService.ts:150","title":"getFunctionMetadata()"},{"location":"source/classes/DialectServiceImpl/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_7","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_7","text":"null | string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_8","text":"DialectService . getFunctionMetadata","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#getoperatormetadata","text":"getOperatorMetadata ( name , operands ): null | string Defined in: src/lib/language/application/services/dialectService.ts:138","title":"getOperatorMetadata()"},{"location":"source/classes/DialectServiceImpl/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_8","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#operands","text":"number","title":"operands"},{"location":"source/classes/DialectServiceImpl/#returns_8","text":"null | string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_9","text":"DialectService . getOperatorMetadata","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#isreservedword","text":"isReservedWord ( name ): boolean Defined in: src/lib/language/application/services/dialectService.ts:81","title":"isReservedWord()"},{"location":"source/classes/DialectServiceImpl/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_9","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_9","text":"boolean","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_10","text":"DialectService . isReservedWord","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#operator","text":"operator ( name , operands ): string Defined in: src/lib/language/application/services/dialectService.ts:85","title":"operator()"},{"location":"source/classes/DialectServiceImpl/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_10","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#operands_1","text":"number","title":"operands"},{"location":"source/classes/DialectServiceImpl/#returns_10","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_11","text":"DialectService . operator","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#other","text":"other ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:101","title":"other()"},{"location":"source/classes/DialectServiceImpl/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_11","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_11","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_12","text":"DialectService . other","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#string","text":"string ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:133","title":"string()"},{"location":"source/classes/DialectServiceImpl/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_12","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_12","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_13","text":"DialectService . string","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#support","text":"support ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:93","title":"support()"},{"location":"source/classes/DialectServiceImpl/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_13","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_13","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_14","text":"DialectService . support","title":"Implementation of"},{"location":"source/classes/DialectServiceImpl/#type","text":"type ( name ): string Defined in: src/lib/language/application/services/dialectService.ts:113","title":"type()"},{"location":"source/classes/DialectServiceImpl/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/DialectServiceImpl/#name_14","text":"string","title":"name"},{"location":"source/classes/DialectServiceImpl/#returns_14","text":"string","title":"Returns"},{"location":"source/classes/DialectServiceImpl/#implementation-of_15","text":"DialectService . type","title":"Implementation of"},{"location":"source/classes/DomainConfigService/","text":"Lambda ORM Lambda ORM / DomainConfigService Class: DomainConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:3 Extends DomainConfigServiceBase \\< Entity , Property > Constructors Constructor new DomainConfigService ( entities? , enums? ): DomainConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:6 Parameters entities? Entity [] enums? Enum [] Returns DomainConfigService Overrides DomainConfigServiceBase<Entity, Property>.constructor Properties entities entities : Entity [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:4 Overrides DomainConfigServiceBase.entities enums enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:5 Overrides DomainConfigServiceBase.enums Methods existsProperty() existsProperty ( entityName , name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:9 Parameters entityName string name string Returns boolean Inherited from DomainConfigServiceBase.existsProperty getAutoIncrement() getAutoIncrement ( entityName ): undefined | Property Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:11 Parameters entityName string Returns undefined | Property Inherited from DomainConfigServiceBase.getAutoIncrement getEntity() getEntity ( name ): undefined | Entity Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:5 Parameters name string Returns undefined | Entity Inherited from DomainConfigServiceBase.getEntity getEnum() getEnum ( name ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:7 Parameters name string Returns undefined | Enum Inherited from DomainConfigServiceBase.getEnum getFieldIds() getFieldIds ( entityName ): undefined | Property [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:12 Parameters entityName string Returns undefined | Property [] Inherited from DomainConfigServiceBase.getFieldIds getForcedEntity() getForcedEntity ( name ): Entity Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:6 Parameters name string Returns Entity Inherited from DomainConfigServiceBase.getForcedEntity getProperty() getProperty ( entityName , name ): Property Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:10 Parameters entityName string name string Returns Property Inherited from DomainConfigServiceBase.getProperty getRelation() getRelation ( entity , relation ): RelationInfo Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:44 Parameters entity string relation string Returns RelationInfo Inherited from DomainConfigServiceBase.getRelation isChild() isChild ( entityName ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:8 Parameters entityName string Returns boolean Inherited from DomainConfigServiceBase.isChild listEntities() listEntities (): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:13 Returns string [] Inherited from DomainConfigServiceBase.listEntities sortByDependencies() sortByDependencies ( entities? ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:25 Sort a list of entities according to their dependencies Parameters entities? string [] entities to order Returns string [] returns the sorted entities Inherited from DomainConfigServiceBase.sortByDependencies sortByRelations() sortByRelations ( mainEntities , allEntities ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:19 Sort a list of entities according to their relationships Parameters mainEntities string [] allEntities string [] entities to order Returns string [] returns the sorted entities Inherited from DomainConfigServiceBase.sortByRelations","title":"DomainConfigService"},{"location":"source/classes/DomainConfigService/#class-domainconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:3","title":"Class: DomainConfigService"},{"location":"source/classes/DomainConfigService/#extends","text":"DomainConfigServiceBase \\< Entity , Property >","title":"Extends"},{"location":"source/classes/DomainConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/DomainConfigService/#constructor","text":"new DomainConfigService ( entities? , enums? ): DomainConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:6","title":"Constructor"},{"location":"source/classes/DomainConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entities","text":"Entity []","title":"entities?"},{"location":"source/classes/DomainConfigService/#enums","text":"Enum []","title":"enums?"},{"location":"source/classes/DomainConfigService/#returns","text":"DomainConfigService","title":"Returns"},{"location":"source/classes/DomainConfigService/#overrides","text":"DomainConfigServiceBase<Entity, Property>.constructor","title":"Overrides"},{"location":"source/classes/DomainConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/DomainConfigService/#entities_1","text":"entities : Entity [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:4","title":"entities"},{"location":"source/classes/DomainConfigService/#overrides_1","text":"DomainConfigServiceBase.entities","title":"Overrides"},{"location":"source/classes/DomainConfigService/#enums_1","text":"enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigService.d.ts:5","title":"enums"},{"location":"source/classes/DomainConfigService/#overrides_2","text":"DomainConfigServiceBase.enums","title":"Overrides"},{"location":"source/classes/DomainConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/DomainConfigService/#existsproperty","text":"existsProperty ( entityName , name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:9","title":"existsProperty()"},{"location":"source/classes/DomainConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entityname","text":"string","title":"entityName"},{"location":"source/classes/DomainConfigService/#name","text":"string","title":"name"},{"location":"source/classes/DomainConfigService/#returns_1","text":"boolean","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from","text":"DomainConfigServiceBase.existsProperty","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getautoincrement","text":"getAutoIncrement ( entityName ): undefined | Property Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:11","title":"getAutoIncrement()"},{"location":"source/classes/DomainConfigService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entityname_1","text":"string","title":"entityName"},{"location":"source/classes/DomainConfigService/#returns_2","text":"undefined | Property","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_1","text":"DomainConfigServiceBase.getAutoIncrement","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getentity","text":"getEntity ( name ): undefined | Entity Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:5","title":"getEntity()"},{"location":"source/classes/DomainConfigService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#name_1","text":"string","title":"name"},{"location":"source/classes/DomainConfigService/#returns_3","text":"undefined | Entity","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_2","text":"DomainConfigServiceBase.getEntity","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getenum","text":"getEnum ( name ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:7","title":"getEnum()"},{"location":"source/classes/DomainConfigService/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#name_2","text":"string","title":"name"},{"location":"source/classes/DomainConfigService/#returns_4","text":"undefined | Enum","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_3","text":"DomainConfigServiceBase.getEnum","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getfieldids","text":"getFieldIds ( entityName ): undefined | Property [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:12","title":"getFieldIds()"},{"location":"source/classes/DomainConfigService/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entityname_2","text":"string","title":"entityName"},{"location":"source/classes/DomainConfigService/#returns_5","text":"undefined | Property []","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_4","text":"DomainConfigServiceBase.getFieldIds","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getforcedentity","text":"getForcedEntity ( name ): Entity Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:6","title":"getForcedEntity()"},{"location":"source/classes/DomainConfigService/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#name_3","text":"string","title":"name"},{"location":"source/classes/DomainConfigService/#returns_6","text":"Entity","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_5","text":"DomainConfigServiceBase.getForcedEntity","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getproperty","text":"getProperty ( entityName , name ): Property Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:10","title":"getProperty()"},{"location":"source/classes/DomainConfigService/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entityname_3","text":"string","title":"entityName"},{"location":"source/classes/DomainConfigService/#name_4","text":"string","title":"name"},{"location":"source/classes/DomainConfigService/#returns_7","text":"Property","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_6","text":"DomainConfigServiceBase.getProperty","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#getrelation","text":"getRelation ( entity , relation ): RelationInfo Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:44","title":"getRelation()"},{"location":"source/classes/DomainConfigService/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entity","text":"string","title":"entity"},{"location":"source/classes/DomainConfigService/#relation","text":"string","title":"relation"},{"location":"source/classes/DomainConfigService/#returns_8","text":"RelationInfo","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_7","text":"DomainConfigServiceBase.getRelation","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#ischild","text":"isChild ( entityName ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:8","title":"isChild()"},{"location":"source/classes/DomainConfigService/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entityname_4","text":"string","title":"entityName"},{"location":"source/classes/DomainConfigService/#returns_9","text":"boolean","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_8","text":"DomainConfigServiceBase.isChild","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#listentities","text":"listEntities (): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:13","title":"listEntities()"},{"location":"source/classes/DomainConfigService/#returns_10","text":"string []","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_9","text":"DomainConfigServiceBase.listEntities","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#sortbydependencies","text":"sortByDependencies ( entities? ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:25 Sort a list of entities according to their dependencies","title":"sortByDependencies()"},{"location":"source/classes/DomainConfigService/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#entities_2","text":"string [] entities to order","title":"entities?"},{"location":"source/classes/DomainConfigService/#returns_11","text":"string [] returns the sorted entities","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_10","text":"DomainConfigServiceBase.sortByDependencies","title":"Inherited from"},{"location":"source/classes/DomainConfigService/#sortbyrelations","text":"sortByRelations ( mainEntities , allEntities ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:19 Sort a list of entities according to their relationships","title":"sortByRelations()"},{"location":"source/classes/DomainConfigService/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/DomainConfigService/#mainentities","text":"string []","title":"mainEntities"},{"location":"source/classes/DomainConfigService/#allentities","text":"string [] entities to order","title":"allEntities"},{"location":"source/classes/DomainConfigService/#returns_12","text":"string [] returns the sorted entities","title":"Returns"},{"location":"source/classes/DomainConfigService/#inherited-from_11","text":"DomainConfigServiceBase.sortByRelations","title":"Inherited from"},{"location":"source/classes/ExecutionActionObserver/","text":"Lambda ORM Lambda ORM / ExecutionActionObserver Class: ExecutionActionObserver Defined in: src/lib/execution/application/services/observer.ts:5 Extends ActionObserver Constructors Constructor new ExecutionActionObserver ( config , expressions ): ExecutionActionObserver Defined in: src/lib/execution/application/services/observer.ts:6 Parameters config ListenerConfig expressions Expressions Returns ExecutionActionObserver Overrides ActionObserver . constructor Properties condition? optional condition : string Defined in: src/lib/execution/domain/executor.ts:24 Inherited from ActionObserver . condition on on : SentenceCategory [] Defined in: src/lib/execution/domain/executor.ts:23 Inherited from ActionObserver . on transactional? optional transactional : boolean Defined in: src/lib/execution/domain/executor.ts:25 Inherited from ActionObserver . transactional Methods after() after ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:16 Parameters args ActionObserverArgs Returns Promise \\< void > Overrides ActionObserver . after before() before ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:10 Parameters args ActionObserverArgs Returns Promise \\< void > Overrides ActionObserver . before error() error ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:22 Parameters args ActionObserverArgs Returns Promise \\< void > Overrides ActionObserver . error","title":"ExecutionActionObserver"},{"location":"source/classes/ExecutionActionObserver/#class-executionactionobserver","text":"Defined in: src/lib/execution/application/services/observer.ts:5","title":"Class: ExecutionActionObserver"},{"location":"source/classes/ExecutionActionObserver/#extends","text":"ActionObserver","title":"Extends"},{"location":"source/classes/ExecutionActionObserver/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ExecutionActionObserver/#constructor","text":"new ExecutionActionObserver ( config , expressions ): ExecutionActionObserver Defined in: src/lib/execution/application/services/observer.ts:6","title":"Constructor"},{"location":"source/classes/ExecutionActionObserver/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ExecutionActionObserver/#config","text":"ListenerConfig","title":"config"},{"location":"source/classes/ExecutionActionObserver/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/ExecutionActionObserver/#returns","text":"ExecutionActionObserver","title":"Returns"},{"location":"source/classes/ExecutionActionObserver/#overrides","text":"ActionObserver . constructor","title":"Overrides"},{"location":"source/classes/ExecutionActionObserver/#properties","text":"","title":"Properties"},{"location":"source/classes/ExecutionActionObserver/#condition","text":"optional condition : string Defined in: src/lib/execution/domain/executor.ts:24","title":"condition?"},{"location":"source/classes/ExecutionActionObserver/#inherited-from","text":"ActionObserver . condition","title":"Inherited from"},{"location":"source/classes/ExecutionActionObserver/#on","text":"on : SentenceCategory [] Defined in: src/lib/execution/domain/executor.ts:23","title":"on"},{"location":"source/classes/ExecutionActionObserver/#inherited-from_1","text":"ActionObserver . on","title":"Inherited from"},{"location":"source/classes/ExecutionActionObserver/#transactional","text":"optional transactional : boolean Defined in: src/lib/execution/domain/executor.ts:25","title":"transactional?"},{"location":"source/classes/ExecutionActionObserver/#inherited-from_2","text":"ActionObserver . transactional","title":"Inherited from"},{"location":"source/classes/ExecutionActionObserver/#methods","text":"","title":"Methods"},{"location":"source/classes/ExecutionActionObserver/#after","text":"after ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:16","title":"after()"},{"location":"source/classes/ExecutionActionObserver/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ExecutionActionObserver/#args","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ExecutionActionObserver/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ExecutionActionObserver/#overrides_1","text":"ActionObserver . after","title":"Overrides"},{"location":"source/classes/ExecutionActionObserver/#before","text":"before ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:10","title":"before()"},{"location":"source/classes/ExecutionActionObserver/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ExecutionActionObserver/#args_1","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ExecutionActionObserver/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ExecutionActionObserver/#overrides_2","text":"ActionObserver . before","title":"Overrides"},{"location":"source/classes/ExecutionActionObserver/#error","text":"error ( args ): Promise \\< void > Defined in: src/lib/execution/application/services/observer.ts:22","title":"error()"},{"location":"source/classes/ExecutionActionObserver/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ExecutionActionObserver/#args_2","text":"ActionObserverArgs","title":"args"},{"location":"source/classes/ExecutionActionObserver/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ExecutionActionObserver/#overrides_3","text":"ActionObserver . error","title":"Overrides"},{"location":"source/classes/ExecutionError/","text":"Lambda ORM Lambda ORM / ExecutionError Class: ExecutionError Defined in: src/lib/connection/domain/errors.ts:8 Extends Error Constructors Constructor new ExecutionError ( source , entity , sentence , message , data ): ExecutionError Defined in: src/lib/connection/domain/errors.ts:9 Parameters source string entity string sentence string message string data any = {} Returns ExecutionError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"ExecutionError"},{"location":"source/classes/ExecutionError/#class-executionerror","text":"Defined in: src/lib/connection/domain/errors.ts:8","title":"Class: ExecutionError"},{"location":"source/classes/ExecutionError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/ExecutionError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ExecutionError/#constructor","text":"new ExecutionError ( source , entity , sentence , message , data ): ExecutionError Defined in: src/lib/connection/domain/errors.ts:9","title":"Constructor"},{"location":"source/classes/ExecutionError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ExecutionError/#source","text":"string","title":"source"},{"location":"source/classes/ExecutionError/#entity","text":"string","title":"entity"},{"location":"source/classes/ExecutionError/#sentence","text":"string","title":"sentence"},{"location":"source/classes/ExecutionError/#message","text":"string","title":"message"},{"location":"source/classes/ExecutionError/#data","text":"any = {}","title":"data"},{"location":"source/classes/ExecutionError/#returns","text":"ExecutionError","title":"Returns"},{"location":"source/classes/ExecutionError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/ExecutionError/#properties","text":"","title":"Properties"},{"location":"source/classes/ExecutionError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/ExecutionError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/ExecutionError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/ExecutionError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/ExecutionError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/ExecutionError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/ExecutionError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/ExecutionError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/ExecutionError/#methods","text":"","title":"Methods"},{"location":"source/classes/ExecutionError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/ExecutionError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ExecutionError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/ExecutionError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/ExecutionError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/ExecutionError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/ExecutionError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/ExecutionError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ExecutionError/#err","text":"Error","title":"err"},{"location":"source/classes/ExecutionError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/ExecutionError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/ExecutionError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/ExecutionError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/ExecutorImpl/","text":"Lambda ORM Lambda ORM / ExecutorImpl Class: ExecutorImpl Defined in: src/lib/execution/application/services/executor.ts:10 Implements Executor ObservableExecutor Constructors Constructor new ExecutorImpl ( connectionFacade , languages , schemaState , expressions , helper ): ExecutorImpl Defined in: src/lib/execution/application/services/executor.ts:12 Parameters connectionFacade ConnectionFacade languages LanguagesService schemaState SchemaState expressions Expressions helper OrmH3lp Returns ExecutorImpl Methods execute() execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/application/services/executor.ts:33 Parameters query Query data any options QueryOptions Returns Promise \\< any > Implementation of Executor . execute executeList() executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/application/services/executor.ts:56 Parameters queries Query [] options QueryOptions Returns Promise \\< ExecuteResult []> Implementation of Executor . executeList subscribe() subscribe ( observer ): void Defined in: src/lib/execution/application/services/executor.ts:21 Parameters observer ActionObserver Returns void Implementation of ObservableExecutor . subscribe transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/application/services/executor.ts:86 Create a transaction Parameters options QueryOptions QueryOptions callback ( tr ) => Promise \\< void > Code to be executed in transaction Returns Promise \\< void > Implementation of Executor . transaction unsubscribe() unsubscribe ( observer ): void Defined in: src/lib/execution/application/services/executor.ts:25 Parameters observer ActionObserver Returns void Implementation of ObservableExecutor . unsubscribe","title":"ExecutorImpl"},{"location":"source/classes/ExecutorImpl/#class-executorimpl","text":"Defined in: src/lib/execution/application/services/executor.ts:10","title":"Class: ExecutorImpl"},{"location":"source/classes/ExecutorImpl/#implements","text":"Executor ObservableExecutor","title":"Implements"},{"location":"source/classes/ExecutorImpl/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ExecutorImpl/#constructor","text":"new ExecutorImpl ( connectionFacade , languages , schemaState , expressions , helper ): ExecutorImpl Defined in: src/lib/execution/application/services/executor.ts:12","title":"Constructor"},{"location":"source/classes/ExecutorImpl/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#connectionfacade","text":"ConnectionFacade","title":"connectionFacade"},{"location":"source/classes/ExecutorImpl/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/ExecutorImpl/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/ExecutorImpl/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/ExecutorImpl/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/ExecutorImpl/#returns","text":"ExecutorImpl","title":"Returns"},{"location":"source/classes/ExecutorImpl/#methods","text":"","title":"Methods"},{"location":"source/classes/ExecutorImpl/#execute","text":"execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/application/services/executor.ts:33","title":"execute()"},{"location":"source/classes/ExecutorImpl/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#query","text":"Query","title":"query"},{"location":"source/classes/ExecutorImpl/#data","text":"any","title":"data"},{"location":"source/classes/ExecutorImpl/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/ExecutorImpl/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/ExecutorImpl/#implementation-of","text":"Executor . execute","title":"Implementation of"},{"location":"source/classes/ExecutorImpl/#executelist","text":"executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/application/services/executor.ts:56","title":"executeList()"},{"location":"source/classes/ExecutorImpl/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#queries","text":"Query []","title":"queries"},{"location":"source/classes/ExecutorImpl/#options_1","text":"QueryOptions","title":"options"},{"location":"source/classes/ExecutorImpl/#returns_2","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/ExecutorImpl/#implementation-of_1","text":"Executor . executeList","title":"Implementation of"},{"location":"source/classes/ExecutorImpl/#subscribe","text":"subscribe ( observer ): void Defined in: src/lib/execution/application/services/executor.ts:21","title":"subscribe()"},{"location":"source/classes/ExecutorImpl/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#observer","text":"ActionObserver","title":"observer"},{"location":"source/classes/ExecutorImpl/#returns_3","text":"void","title":"Returns"},{"location":"source/classes/ExecutorImpl/#implementation-of_2","text":"ObservableExecutor . subscribe","title":"Implementation of"},{"location":"source/classes/ExecutorImpl/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/application/services/executor.ts:86 Create a transaction","title":"transaction()"},{"location":"source/classes/ExecutorImpl/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#options_2","text":"QueryOptions QueryOptions","title":"options"},{"location":"source/classes/ExecutorImpl/#callback","text":"( tr ) => Promise \\< void > Code to be executed in transaction","title":"callback"},{"location":"source/classes/ExecutorImpl/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/ExecutorImpl/#implementation-of_3","text":"Executor . transaction","title":"Implementation of"},{"location":"source/classes/ExecutorImpl/#unsubscribe","text":"unsubscribe ( observer ): void Defined in: src/lib/execution/application/services/executor.ts:25","title":"unsubscribe()"},{"location":"source/classes/ExecutorImpl/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/ExecutorImpl/#observer_1","text":"ActionObserver","title":"observer"},{"location":"source/classes/ExecutorImpl/#returns_5","text":"void","title":"Returns"},{"location":"source/classes/ExecutorImpl/#implementation-of_4","text":"ObservableExecutor . unsubscribe","title":"Implementation of"},{"location":"source/classes/ExpressionFacade/","text":"Lambda ORM Lambda ORM / ExpressionFacade Class: ExpressionFacade Defined in: src/lib/expressions/application/facade.ts:19 Constructors Constructor new ExpressionFacade ( sentenceFacade , schemaState , languages , executor , expressions , cache , helper ): ExpressionFacade Defined in: src/lib/expressions/application/facade.ts:24 Parameters sentenceFacade SentenceFacade schemaState SchemaState languages LanguagesService executor Executor expressions Expressions cache ICache \\< string , string > helper OrmH3lp Returns ExpressionFacade Methods build() build ( query , options? ): Query Defined in: src/lib/expressions/application/facade.ts:38 Parameters query string options? QueryOptions Returns Query execute() execute ( query , data , options? ): Promise \\< any > Defined in: src/lib/expressions/application/facade.ts:50 Parameters query string data any = {} options? QueryOptions Returns Promise \\< any > executeList() executeList ( queries , options? ): Promise \\< any > Defined in: src/lib/expressions/application/facade.ts:54 Parameters queries string [] options? QueryOptions Returns Promise \\< any > plan() plan ( query , options? ): QueryPlan Defined in: src/lib/expressions/application/facade.ts:42 Parameters query string options? QueryOptions Returns QueryPlan solveQueryOptions() solveQueryOptions ( options? ): QueryOptions Defined in: src/lib/expressions/application/facade.ts:46 Parameters options? QueryOptions Returns QueryOptions transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/expressions/application/facade.ts:58 Parameters options undefined | QueryOptions callback ( tr ) => Promise \\< void > Returns Promise \\< void >","title":"ExpressionFacade"},{"location":"source/classes/ExpressionFacade/#class-expressionfacade","text":"Defined in: src/lib/expressions/application/facade.ts:19","title":"Class: ExpressionFacade"},{"location":"source/classes/ExpressionFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ExpressionFacade/#constructor","text":"new ExpressionFacade ( sentenceFacade , schemaState , languages , executor , expressions , cache , helper ): ExpressionFacade Defined in: src/lib/expressions/application/facade.ts:24","title":"Constructor"},{"location":"source/classes/ExpressionFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#sentencefacade","text":"SentenceFacade","title":"sentenceFacade"},{"location":"source/classes/ExpressionFacade/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/ExpressionFacade/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/ExpressionFacade/#executor","text":"Executor","title":"executor"},{"location":"source/classes/ExpressionFacade/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/ExpressionFacade/#cache","text":"ICache \\< string , string >","title":"cache"},{"location":"source/classes/ExpressionFacade/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/ExpressionFacade/#returns","text":"ExpressionFacade","title":"Returns"},{"location":"source/classes/ExpressionFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/ExpressionFacade/#build","text":"build ( query , options? ): Query Defined in: src/lib/expressions/application/facade.ts:38","title":"build()"},{"location":"source/classes/ExpressionFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#query","text":"string","title":"query"},{"location":"source/classes/ExpressionFacade/#options","text":"QueryOptions","title":"options?"},{"location":"source/classes/ExpressionFacade/#returns_1","text":"Query","title":"Returns"},{"location":"source/classes/ExpressionFacade/#execute","text":"execute ( query , data , options? ): Promise \\< any > Defined in: src/lib/expressions/application/facade.ts:50","title":"execute()"},{"location":"source/classes/ExpressionFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#query_1","text":"string","title":"query"},{"location":"source/classes/ExpressionFacade/#data","text":"any = {}","title":"data"},{"location":"source/classes/ExpressionFacade/#options_1","text":"QueryOptions","title":"options?"},{"location":"source/classes/ExpressionFacade/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/ExpressionFacade/#executelist","text":"executeList ( queries , options? ): Promise \\< any > Defined in: src/lib/expressions/application/facade.ts:54","title":"executeList()"},{"location":"source/classes/ExpressionFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#queries","text":"string []","title":"queries"},{"location":"source/classes/ExpressionFacade/#options_2","text":"QueryOptions","title":"options?"},{"location":"source/classes/ExpressionFacade/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/ExpressionFacade/#plan","text":"plan ( query , options? ): QueryPlan Defined in: src/lib/expressions/application/facade.ts:42","title":"plan()"},{"location":"source/classes/ExpressionFacade/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#query_2","text":"string","title":"query"},{"location":"source/classes/ExpressionFacade/#options_3","text":"QueryOptions","title":"options?"},{"location":"source/classes/ExpressionFacade/#returns_4","text":"QueryPlan","title":"Returns"},{"location":"source/classes/ExpressionFacade/#solvequeryoptions","text":"solveQueryOptions ( options? ): QueryOptions Defined in: src/lib/expressions/application/facade.ts:46","title":"solveQueryOptions()"},{"location":"source/classes/ExpressionFacade/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#options_4","text":"QueryOptions","title":"options?"},{"location":"source/classes/ExpressionFacade/#returns_5","text":"QueryOptions","title":"Returns"},{"location":"source/classes/ExpressionFacade/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/expressions/application/facade.ts:58","title":"transaction()"},{"location":"source/classes/ExpressionFacade/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/ExpressionFacade/#options_5","text":"undefined | QueryOptions","title":"options"},{"location":"source/classes/ExpressionFacade/#callback","text":"( tr ) => Promise \\< void >","title":"callback"},{"location":"source/classes/ExpressionFacade/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/Field/","text":"Lambda ORM Lambda ORM / Field Class: Field Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:8 Extends Operand Constructors Constructor new Field ( pos , entity , name , returnType? , alias? , isRoot? ): Field Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:13 Parameters pos Position entity string name string returnType? Type alias? string isRoot? boolean Returns Field Overrides Operand.constructor Properties alias? optional alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:10 children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Operand.children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:9 evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Operand.evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Operand.id isRoot? optional isRoot : boolean Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:11 name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Operand.name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Operand.number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Operand.pos prefix? optional prefix : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:12 returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Operand.returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Operand.type Methods clone() clone (): Field Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:15 Returns Field eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Operand.eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Operand.evalAsync fieldName() fieldName (): any Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:14 Returns any isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Operand.isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Operand.solve","title":"Field"},{"location":"source/classes/Field/#class-field","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:8","title":"Class: Field"},{"location":"source/classes/Field/#extends","text":"Operand","title":"Extends"},{"location":"source/classes/Field/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Field/#constructor","text":"new Field ( pos , entity , name , returnType? , alias? , isRoot? ): Field Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:13","title":"Constructor"},{"location":"source/classes/Field/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Field/#pos","text":"Position","title":"pos"},{"location":"source/classes/Field/#entity","text":"string","title":"entity"},{"location":"source/classes/Field/#name","text":"string","title":"name"},{"location":"source/classes/Field/#returntype","text":"Type","title":"returnType?"},{"location":"source/classes/Field/#alias","text":"string","title":"alias?"},{"location":"source/classes/Field/#isroot","text":"boolean","title":"isRoot?"},{"location":"source/classes/Field/#returns","text":"Field","title":"Returns"},{"location":"source/classes/Field/#overrides","text":"Operand.constructor","title":"Overrides"},{"location":"source/classes/Field/#properties","text":"","title":"Properties"},{"location":"source/classes/Field/#alias_1","text":"optional alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:10","title":"alias?"},{"location":"source/classes/Field/#children","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Field/#inherited-from","text":"Operand.children","title":"Inherited from"},{"location":"source/classes/Field/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:9","title":"entity"},{"location":"source/classes/Field/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Field/#inherited-from_1","text":"Operand.evaluator","title":"Inherited from"},{"location":"source/classes/Field/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Field/#inherited-from_2","text":"Operand.id","title":"Inherited from"},{"location":"source/classes/Field/#isroot_1","text":"optional isRoot : boolean Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:11","title":"isRoot?"},{"location":"source/classes/Field/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Field/#inherited-from_3","text":"Operand.name","title":"Inherited from"},{"location":"source/classes/Field/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Field/#inherited-from_4","text":"Operand.number","title":"Inherited from"},{"location":"source/classes/Field/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Field/#inherited-from_5","text":"Operand.pos","title":"Inherited from"},{"location":"source/classes/Field/#prefix","text":"optional prefix : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:12","title":"prefix?"},{"location":"source/classes/Field/#returntype_1","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Field/#inherited-from_6","text":"Operand.returnType","title":"Inherited from"},{"location":"source/classes/Field/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Field/#inherited-from_7","text":"Operand.type","title":"Inherited from"},{"location":"source/classes/Field/#methods","text":"","title":"Methods"},{"location":"source/classes/Field/#clone","text":"clone (): Field Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:15","title":"clone()"},{"location":"source/classes/Field/#returns_1","text":"Field","title":"Returns"},{"location":"source/classes/Field/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Field/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Field/#context","text":"Context","title":"context"},{"location":"source/classes/Field/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/Field/#inherited-from_8","text":"Operand.eval","title":"Inherited from"},{"location":"source/classes/Field/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Field/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Field/#context_1","text":"Context","title":"context"},{"location":"source/classes/Field/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Field/#inherited-from_9","text":"Operand.evalAsync","title":"Inherited from"},{"location":"source/classes/Field/#fieldname","text":"fieldName (): any Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:14","title":"fieldName()"},{"location":"source/classes/Field/#returns_4","text":"any","title":"Returns"},{"location":"source/classes/Field/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Field/#returns_5","text":"boolean","title":"Returns"},{"location":"source/classes/Field/#inherited-from_10","text":"Operand.isAsync","title":"Inherited from"},{"location":"source/classes/Field/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Field/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Field/#context_2","text":"Context","title":"context"},{"location":"source/classes/Field/#returns_6","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Field/#inherited-from_11","text":"Operand.solve","title":"Inherited from"},{"location":"source/classes/Filter/","text":"Lambda ORM Lambda ORM / Filter Class: Filter Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:24 Extends Clause Constructors Constructor new Filter ( pos , name , children , entity , alias ): Filter Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Filter Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Filter"},{"location":"source/classes/Filter/#class-filter","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:24","title":"Class: Filter"},{"location":"source/classes/Filter/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Filter/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Filter/#constructor","text":"new Filter ( pos , name , children , entity , alias ): Filter Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Filter/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Filter/#pos","text":"Position","title":"pos"},{"location":"source/classes/Filter/#name","text":"string","title":"name"},{"location":"source/classes/Filter/#children","text":"Operand []","title":"children"},{"location":"source/classes/Filter/#entity","text":"string","title":"entity"},{"location":"source/classes/Filter/#alias","text":"string","title":"alias"},{"location":"source/classes/Filter/#returns","text":"Filter","title":"Returns"},{"location":"source/classes/Filter/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Filter/#properties","text":"","title":"Properties"},{"location":"source/classes/Filter/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Filter/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Filter/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Filter/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Filter/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Filter/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Filter/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Filter/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Filter/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Filter/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Filter/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Filter/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Filter/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Filter/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Filter/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Filter/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Filter/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Filter/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Filter/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Filter/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Filter/#methods","text":"","title":"Methods"},{"location":"source/classes/Filter/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Filter/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Filter/#context","text":"Context","title":"context"},{"location":"source/classes/Filter/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Filter/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Filter/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Filter/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Filter/#context_1","text":"Context","title":"context"},{"location":"source/classes/Filter/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Filter/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Filter/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Filter/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Filter/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Filter/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Filter/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Filter/#context_2","text":"Context","title":"context"},{"location":"source/classes/Filter/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Filter/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/FilterAction/","text":"Lambda ORM Lambda ORM / FilterAction Class: FilterAction\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:54 Extends QueryAction Type Parameters T T Constructors Constructor new FilterAction \\< T >( actions , query ): FilterAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns FilterAction \\< T > Inherited from QueryAction . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from QueryAction . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from QueryAction . execute filter() filter ( predicate ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:56 Parameters predicate ( value , index , array ) => unknown Returns QueryAction metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from QueryAction . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from QueryAction . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from QueryAction . normalize parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from QueryAction . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from QueryAction . sentence","title":"FilterAction"},{"location":"source/classes/FilterAction/#class-filteractiont","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:54","title":"Class: FilterAction\\&lt;T>"},{"location":"source/classes/FilterAction/#extends","text":"QueryAction","title":"Extends"},{"location":"source/classes/FilterAction/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/FilterAction/#t","text":"T","title":"T"},{"location":"source/classes/FilterAction/#constructors","text":"","title":"Constructors"},{"location":"source/classes/FilterAction/#constructor","text":"new FilterAction \\< T >( actions , query ): FilterAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/FilterAction/#parameters","text":"","title":"Parameters"},{"location":"source/classes/FilterAction/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/FilterAction/#query","text":"string","title":"query"},{"location":"source/classes/FilterAction/#returns","text":"FilterAction \\< T >","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from","text":"QueryAction . constructor","title":"Inherited from"},{"location":"source/classes/FilterAction/#methods","text":"","title":"Methods"},{"location":"source/classes/FilterAction/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/FilterAction/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_1","text":"QueryAction . constraints","title":"Inherited from"},{"location":"source/classes/FilterAction/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/FilterAction/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/FilterAction/#data","text":"any","title":"data"},{"location":"source/classes/FilterAction/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_2","text":"QueryAction . execute","title":"Inherited from"},{"location":"source/classes/FilterAction/#filter","text":"filter ( predicate ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:56","title":"filter()"},{"location":"source/classes/FilterAction/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/FilterAction/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterAction/#returns_3","text":"QueryAction","title":"Returns"},{"location":"source/classes/FilterAction/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/FilterAction/#returns_4","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_3","text":"QueryAction . metadata","title":"Inherited from"},{"location":"source/classes/FilterAction/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/FilterAction/#returns_5","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_4","text":"QueryAction . model","title":"Inherited from"},{"location":"source/classes/FilterAction/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/FilterAction/#returns_6","text":"string","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_5","text":"QueryAction . normalize","title":"Inherited from"},{"location":"source/classes/FilterAction/#parameters_3","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/FilterAction/#returns_7","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_6","text":"QueryAction . parameters","title":"Inherited from"},{"location":"source/classes/FilterAction/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/FilterAction/#returns_8","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/FilterAction/#inherited-from_7","text":"QueryAction . sentence","title":"Inherited from"},{"location":"source/classes/FilterClauses/","text":"Lambda ORM Lambda ORM / FilterClauses Class: FilterClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:48 Extends HavingClauses \\< T > Type Parameters T T Constructors Constructor new FilterClauses \\< T >( actions , query ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns FilterClauses \\< T > Inherited from HavingClauses . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from HavingClauses . constraints distinct() distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . distinct execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from HavingClauses . execute first() first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . first having() having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:52 Parameters predicate ( value , index , array ) => unknown Returns HavingClauses \\< T > include() include ( predicate ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:50 Parameters predicate ( value , index , array ) => unknown Returns IncludeClauses \\< T > last() last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . last map() map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . map metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from HavingClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from HavingClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from HavingClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from HavingClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from HavingClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from HavingClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses Inherited from HavingClauses . sort","title":"FilterClauses"},{"location":"source/classes/FilterClauses/#class-filterclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:48","title":"Class: FilterClauses\\&lt;T>"},{"location":"source/classes/FilterClauses/#extends","text":"HavingClauses \\< T >","title":"Extends"},{"location":"source/classes/FilterClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/FilterClauses/#t","text":"T","title":"T"},{"location":"source/classes/FilterClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/FilterClauses/#constructor","text":"new FilterClauses \\< T >( actions , query ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/FilterClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/FilterClauses/#query","text":"string","title":"query"},{"location":"source/classes/FilterClauses/#returns","text":"FilterClauses \\< T >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from","text":"HavingClauses . constructor","title":"Inherited from"},{"location":"source/classes/FilterClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/FilterClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/FilterClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_1","text":"HavingClauses . constraints","title":"Inherited from"},{"location":"source/classes/FilterClauses/#distinct","text":"distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36","title":"distinct()"},{"location":"source/classes/FilterClauses/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/classes/FilterClauses/#u","text":"U","title":"U"},{"location":"source/classes/FilterClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_2","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_2","text":"HavingClauses . distinct","title":"Inherited from"},{"location":"source/classes/FilterClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/FilterClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#data","text":"any","title":"data"},{"location":"source/classes/FilterClauses/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_3","text":"HavingClauses . execute","title":"Inherited from"},{"location":"source/classes/FilterClauses/#first","text":"first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32","title":"first()"},{"location":"source/classes/FilterClauses/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/classes/FilterClauses/#u_1","text":"U","title":"U"},{"location":"source/classes/FilterClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_1","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_4","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_4","text":"HavingClauses . first","title":"Inherited from"},{"location":"source/classes/FilterClauses/#having","text":"having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:52","title":"having()"},{"location":"source/classes/FilterClauses/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_2","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_5","text":"HavingClauses \\< T >","title":"Returns"},{"location":"source/classes/FilterClauses/#include","text":"include ( predicate ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:50","title":"include()"},{"location":"source/classes/FilterClauses/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_3","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_6","text":"IncludeClauses \\< T >","title":"Returns"},{"location":"source/classes/FilterClauses/#last","text":"last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34","title":"last()"},{"location":"source/classes/FilterClauses/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/classes/FilterClauses/#u_2","text":"U","title":"U"},{"location":"source/classes/FilterClauses/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_4","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_7","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_5","text":"HavingClauses . last","title":"Inherited from"},{"location":"source/classes/FilterClauses/#map","text":"map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30","title":"map()"},{"location":"source/classes/FilterClauses/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/classes/FilterClauses/#u_3","text":"U","title":"U"},{"location":"source/classes/FilterClauses/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_5","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_8","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_6","text":"HavingClauses . map","title":"Inherited from"},{"location":"source/classes/FilterClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/FilterClauses/#returns_9","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_7","text":"HavingClauses . metadata","title":"Inherited from"},{"location":"source/classes/FilterClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/FilterClauses/#returns_10","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_8","text":"HavingClauses . model","title":"Inherited from"},{"location":"source/classes/FilterClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/FilterClauses/#returns_11","text":"string","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_9","text":"HavingClauses . normalize","title":"Inherited from"},{"location":"source/classes/FilterClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/FilterClauses/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/FilterClauses/#records","text":"number","title":"records"},{"location":"source/classes/FilterClauses/#returns_12","text":"QueryAction","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_10","text":"HavingClauses . page","title":"Inherited from"},{"location":"source/classes/FilterClauses/#parameters_9","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/FilterClauses/#returns_13","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_11","text":"HavingClauses . parameters","title":"Inherited from"},{"location":"source/classes/FilterClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/FilterClauses/#returns_14","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_12","text":"HavingClauses . sentence","title":"Inherited from"},{"location":"source/classes/FilterClauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/FilterClauses/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/FilterClauses/#predicate_6","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterClauses/#returns_15","text":"PageClauses","title":"Returns"},{"location":"source/classes/FilterClauses/#inherited-from_13","text":"HavingClauses . sort","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/","text":"Lambda ORM Lambda ORM / FilterIncludeClauses Class: FilterIncludeClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:38 Extends HavingClauses \\< T > Type Parameters T T Constructors Constructor new FilterIncludeClauses \\< T >( actions , query ): FilterIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns FilterIncludeClauses \\< T > Inherited from HavingClauses . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from HavingClauses . constraints distinct() distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . distinct execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from HavingClauses . execute first() first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . first having() having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:40 Parameters predicate ( value , index , array ) => unknown Returns HavingClauses \\< T > last() last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . last map() map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . map metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from HavingClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from HavingClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from HavingClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from HavingClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from HavingClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from HavingClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses Inherited from HavingClauses . sort","title":"FilterIncludeClauses"},{"location":"source/classes/FilterIncludeClauses/#class-filterincludeclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:38","title":"Class: FilterIncludeClauses\\&lt;T>"},{"location":"source/classes/FilterIncludeClauses/#extends","text":"HavingClauses \\< T >","title":"Extends"},{"location":"source/classes/FilterIncludeClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/FilterIncludeClauses/#t","text":"T","title":"T"},{"location":"source/classes/FilterIncludeClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/FilterIncludeClauses/#constructor","text":"new FilterIncludeClauses \\< T >( actions , query ): FilterIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/FilterIncludeClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/FilterIncludeClauses/#query","text":"string","title":"query"},{"location":"source/classes/FilterIncludeClauses/#returns","text":"FilterIncludeClauses \\< T >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from","text":"HavingClauses . constructor","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/FilterIncludeClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/FilterIncludeClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_1","text":"HavingClauses . constraints","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#distinct","text":"distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36","title":"distinct()"},{"location":"source/classes/FilterIncludeClauses/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/classes/FilterIncludeClauses/#u","text":"U","title":"U"},{"location":"source/classes/FilterIncludeClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_2","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_2","text":"HavingClauses . distinct","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/FilterIncludeClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#data","text":"any","title":"data"},{"location":"source/classes/FilterIncludeClauses/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_3","text":"HavingClauses . execute","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#first","text":"first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32","title":"first()"},{"location":"source/classes/FilterIncludeClauses/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/classes/FilterIncludeClauses/#u_1","text":"U","title":"U"},{"location":"source/classes/FilterIncludeClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate_1","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_4","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_4","text":"HavingClauses . first","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#having","text":"having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:40","title":"having()"},{"location":"source/classes/FilterIncludeClauses/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate_2","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_5","text":"HavingClauses \\< T >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#last","text":"last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34","title":"last()"},{"location":"source/classes/FilterIncludeClauses/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/classes/FilterIncludeClauses/#u_2","text":"U","title":"U"},{"location":"source/classes/FilterIncludeClauses/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate_3","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_6","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_5","text":"HavingClauses . last","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#map","text":"map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30","title":"map()"},{"location":"source/classes/FilterIncludeClauses/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/classes/FilterIncludeClauses/#u_3","text":"U","title":"U"},{"location":"source/classes/FilterIncludeClauses/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate_4","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_7","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_6","text":"HavingClauses . map","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/FilterIncludeClauses/#returns_8","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_7","text":"HavingClauses . metadata","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/FilterIncludeClauses/#returns_9","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_8","text":"HavingClauses . model","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/FilterIncludeClauses/#returns_10","text":"string","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_9","text":"HavingClauses . normalize","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/FilterIncludeClauses/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/FilterIncludeClauses/#records","text":"number","title":"records"},{"location":"source/classes/FilterIncludeClauses/#returns_11","text":"QueryAction","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_10","text":"HavingClauses . page","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#parameters_8","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/FilterIncludeClauses/#returns_12","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_11","text":"HavingClauses . parameters","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/FilterIncludeClauses/#returns_13","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_12","text":"HavingClauses . sentence","title":"Inherited from"},{"location":"source/classes/FilterIncludeClauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/FilterIncludeClauses/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/FilterIncludeClauses/#predicate_5","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/FilterIncludeClauses/#returns_14","text":"PageClauses","title":"Returns"},{"location":"source/classes/FilterIncludeClauses/#inherited-from_13","text":"HavingClauses . sort","title":"Inherited from"},{"location":"source/classes/From/","text":"Lambda ORM Lambda ORM / From Class: From Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:34 Extends Clause Constructors Constructor new From ( pos , name , children , entity , alias ): From Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns From Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"From"},{"location":"source/classes/From/#class-from","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:34","title":"Class: From"},{"location":"source/classes/From/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/From/#constructors","text":"","title":"Constructors"},{"location":"source/classes/From/#constructor","text":"new From ( pos , name , children , entity , alias ): From Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/From/#parameters","text":"","title":"Parameters"},{"location":"source/classes/From/#pos","text":"Position","title":"pos"},{"location":"source/classes/From/#name","text":"string","title":"name"},{"location":"source/classes/From/#children","text":"Operand []","title":"children"},{"location":"source/classes/From/#entity","text":"string","title":"entity"},{"location":"source/classes/From/#alias","text":"string","title":"alias"},{"location":"source/classes/From/#returns","text":"From","title":"Returns"},{"location":"source/classes/From/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/From/#properties","text":"","title":"Properties"},{"location":"source/classes/From/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/From/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/From/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/From/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/From/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/From/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/From/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/From/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/From/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/From/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/From/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/From/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/From/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/From/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/From/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/From/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/From/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/From/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/From/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/From/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/From/#methods","text":"","title":"Methods"},{"location":"source/classes/From/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/From/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/From/#context","text":"Context","title":"context"},{"location":"source/classes/From/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/From/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/From/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/From/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/From/#context_1","text":"Context","title":"context"},{"location":"source/classes/From/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/From/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/From/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/From/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/From/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/From/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/From/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/From/#context_2","text":"Context","title":"context"},{"location":"source/classes/From/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/From/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/GetSchemaSchema/","text":"Lambda ORM Lambda ORM / GetSchemaSchema Class: GetSchemaSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:4 Constructors Constructor new GetSchemaSchema ( interpretSchemaDataService ): GetSchemaSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:6 Parameters interpretSchemaDataService InterpretSchemaDataService Returns GetSchemaSchema Methods getData() getData ( data , name , type ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:7 Parameters data any name string type Type Returns SchemaData","title":"GetSchemaSchema"},{"location":"source/classes/GetSchemaSchema/#class-getschemaschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:4","title":"Class: GetSchemaSchema"},{"location":"source/classes/GetSchemaSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/GetSchemaSchema/#constructor","text":"new GetSchemaSchema ( interpretSchemaDataService ): GetSchemaSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:6","title":"Constructor"},{"location":"source/classes/GetSchemaSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/GetSchemaSchema/#interpretschemadataservice","text":"InterpretSchemaDataService","title":"interpretSchemaDataService"},{"location":"source/classes/GetSchemaSchema/#returns","text":"GetSchemaSchema","title":"Returns"},{"location":"source/classes/GetSchemaSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/GetSchemaSchema/#getdata","text":"getData ( data , name , type ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/useCases/getSchemaData.d.ts:7","title":"getData()"},{"location":"source/classes/GetSchemaSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/GetSchemaSchema/#data","text":"any","title":"data"},{"location":"source/classes/GetSchemaSchema/#name","text":"string","title":"name"},{"location":"source/classes/GetSchemaSchema/#type","text":"Type","title":"type"},{"location":"source/classes/GetSchemaSchema/#returns_1","text":"SchemaData","title":"Returns"},{"location":"source/classes/GroupBy/","text":"Lambda ORM Lambda ORM / GroupBy Class: GroupBy Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:26 Extends Clause Constructors Constructor new GroupBy ( pos , name , children , entity , alias ): GroupBy Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns GroupBy Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"GroupBy"},{"location":"source/classes/GroupBy/#class-groupby","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:26","title":"Class: GroupBy"},{"location":"source/classes/GroupBy/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/GroupBy/#constructors","text":"","title":"Constructors"},{"location":"source/classes/GroupBy/#constructor","text":"new GroupBy ( pos , name , children , entity , alias ): GroupBy Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/GroupBy/#parameters","text":"","title":"Parameters"},{"location":"source/classes/GroupBy/#pos","text":"Position","title":"pos"},{"location":"source/classes/GroupBy/#name","text":"string","title":"name"},{"location":"source/classes/GroupBy/#children","text":"Operand []","title":"children"},{"location":"source/classes/GroupBy/#entity","text":"string","title":"entity"},{"location":"source/classes/GroupBy/#alias","text":"string","title":"alias"},{"location":"source/classes/GroupBy/#returns","text":"GroupBy","title":"Returns"},{"location":"source/classes/GroupBy/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/GroupBy/#properties","text":"","title":"Properties"},{"location":"source/classes/GroupBy/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/GroupBy/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/GroupBy/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/GroupBy/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/GroupBy/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/GroupBy/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/GroupBy/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/GroupBy/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/GroupBy/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/GroupBy/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/GroupBy/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/GroupBy/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/GroupBy/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/GroupBy/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/GroupBy/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/GroupBy/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/GroupBy/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/GroupBy/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/GroupBy/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/GroupBy/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/GroupBy/#methods","text":"","title":"Methods"},{"location":"source/classes/GroupBy/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/GroupBy/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/GroupBy/#context","text":"Context","title":"context"},{"location":"source/classes/GroupBy/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/GroupBy/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/GroupBy/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/GroupBy/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/GroupBy/#context_1","text":"Context","title":"context"},{"location":"source/classes/GroupBy/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/GroupBy/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/GroupBy/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/GroupBy/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/GroupBy/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/GroupBy/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/GroupBy/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/GroupBy/#context_2","text":"Context","title":"context"},{"location":"source/classes/GroupBy/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/GroupBy/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/Having/","text":"Lambda ORM Lambda ORM / Having Class: Having Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:28 Extends Clause Constructors Constructor new Having ( pos , name , children , entity , alias ): Having Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Having Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Having"},{"location":"source/classes/Having/#class-having","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:28","title":"Class: Having"},{"location":"source/classes/Having/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Having/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Having/#constructor","text":"new Having ( pos , name , children , entity , alias ): Having Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Having/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Having/#pos","text":"Position","title":"pos"},{"location":"source/classes/Having/#name","text":"string","title":"name"},{"location":"source/classes/Having/#children","text":"Operand []","title":"children"},{"location":"source/classes/Having/#entity","text":"string","title":"entity"},{"location":"source/classes/Having/#alias","text":"string","title":"alias"},{"location":"source/classes/Having/#returns","text":"Having","title":"Returns"},{"location":"source/classes/Having/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Having/#properties","text":"","title":"Properties"},{"location":"source/classes/Having/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Having/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Having/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Having/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Having/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Having/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Having/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Having/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Having/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Having/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Having/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Having/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Having/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Having/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Having/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Having/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Having/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Having/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Having/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Having/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Having/#methods","text":"","title":"Methods"},{"location":"source/classes/Having/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Having/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Having/#context","text":"Context","title":"context"},{"location":"source/classes/Having/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Having/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Having/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Having/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Having/#context_1","text":"Context","title":"context"},{"location":"source/classes/Having/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Having/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Having/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Having/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Having/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Having/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Having/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Having/#context_2","text":"Context","title":"context"},{"location":"source/classes/Having/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Having/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/HavingClauses/","text":"Lambda ORM Lambda ORM / HavingClauses Class: HavingClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:28 Extends MapClauses \\< T > Extended by FilterIncludeClauses IncludeClauses FilterClauses Queryable Type Parameters T T Constructors Constructor new HavingClauses \\< T >( actions , query ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns HavingClauses \\< T > Inherited from MapClauses . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from MapClauses . constraints distinct() distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from MapClauses . execute first() first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > last() last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > map() map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from MapClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from MapClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from MapClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from MapClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from MapClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from MapClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses Inherited from MapClauses . sort","title":"HavingClauses"},{"location":"source/classes/HavingClauses/#class-havingclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:28","title":"Class: HavingClauses\\&lt;T>"},{"location":"source/classes/HavingClauses/#extends","text":"MapClauses \\< T >","title":"Extends"},{"location":"source/classes/HavingClauses/#extended-by","text":"FilterIncludeClauses IncludeClauses FilterClauses Queryable","title":"Extended by"},{"location":"source/classes/HavingClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/HavingClauses/#t","text":"T","title":"T"},{"location":"source/classes/HavingClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/HavingClauses/#constructor","text":"new HavingClauses \\< T >( actions , query ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/HavingClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/HavingClauses/#query","text":"string","title":"query"},{"location":"source/classes/HavingClauses/#returns","text":"HavingClauses \\< T >","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from","text":"MapClauses . constructor","title":"Inherited from"},{"location":"source/classes/HavingClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/HavingClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/HavingClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_1","text":"MapClauses . constraints","title":"Inherited from"},{"location":"source/classes/HavingClauses/#distinct","text":"distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36","title":"distinct()"},{"location":"source/classes/HavingClauses/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/classes/HavingClauses/#u","text":"U","title":"U"},{"location":"source/classes/HavingClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/HavingClauses/#returns_2","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/HavingClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/HavingClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#data","text":"any","title":"data"},{"location":"source/classes/HavingClauses/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_2","text":"MapClauses . execute","title":"Inherited from"},{"location":"source/classes/HavingClauses/#first","text":"first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32","title":"first()"},{"location":"source/classes/HavingClauses/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/classes/HavingClauses/#u_1","text":"U","title":"U"},{"location":"source/classes/HavingClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#predicate_1","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/HavingClauses/#returns_4","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/HavingClauses/#last","text":"last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34","title":"last()"},{"location":"source/classes/HavingClauses/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/classes/HavingClauses/#u_2","text":"U","title":"U"},{"location":"source/classes/HavingClauses/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#predicate_2","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/HavingClauses/#returns_5","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/HavingClauses/#map","text":"map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30","title":"map()"},{"location":"source/classes/HavingClauses/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/classes/HavingClauses/#u_3","text":"U","title":"U"},{"location":"source/classes/HavingClauses/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#predicate_3","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/HavingClauses/#returns_6","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/HavingClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/HavingClauses/#returns_7","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_3","text":"MapClauses . metadata","title":"Inherited from"},{"location":"source/classes/HavingClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/HavingClauses/#returns_8","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_4","text":"MapClauses . model","title":"Inherited from"},{"location":"source/classes/HavingClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/HavingClauses/#returns_9","text":"string","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_5","text":"MapClauses . normalize","title":"Inherited from"},{"location":"source/classes/HavingClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/HavingClauses/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/HavingClauses/#records","text":"number","title":"records"},{"location":"source/classes/HavingClauses/#returns_10","text":"QueryAction","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_6","text":"MapClauses . page","title":"Inherited from"},{"location":"source/classes/HavingClauses/#parameters_7","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/HavingClauses/#returns_11","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_7","text":"MapClauses . parameters","title":"Inherited from"},{"location":"source/classes/HavingClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/HavingClauses/#returns_12","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_8","text":"MapClauses . sentence","title":"Inherited from"},{"location":"source/classes/HavingClauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/HavingClauses/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/HavingClauses/#predicate_4","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/HavingClauses/#returns_13","text":"PageClauses","title":"Returns"},{"location":"source/classes/HavingClauses/#inherited-from_9","text":"MapClauses . sort","title":"Inherited from"},{"location":"source/classes/Include/","text":"Lambda ORM Lambda ORM / Include Class: Include Defined in: src/lib/query/domain/query.ts:57 Constructors Constructor new Include ( name , query , relation ): Include Defined in: src/lib/query/domain/query.ts:61 Parameters name string query Query relation Relation Returns Include Properties name name : string Defined in: src/lib/query/domain/query.ts:58 query query : Query Defined in: src/lib/query/domain/query.ts:59 relation relation : Relation Defined in: src/lib/query/domain/query.ts:60","title":"Include"},{"location":"source/classes/Include/#class-include","text":"Defined in: src/lib/query/domain/query.ts:57","title":"Class: Include"},{"location":"source/classes/Include/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Include/#constructor","text":"new Include ( name , query , relation ): Include Defined in: src/lib/query/domain/query.ts:61","title":"Constructor"},{"location":"source/classes/Include/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Include/#name","text":"string","title":"name"},{"location":"source/classes/Include/#query","text":"Query","title":"query"},{"location":"source/classes/Include/#relation","text":"Relation","title":"relation"},{"location":"source/classes/Include/#returns","text":"Include","title":"Returns"},{"location":"source/classes/Include/#properties","text":"","title":"Properties"},{"location":"source/classes/Include/#name_1","text":"name : string Defined in: src/lib/query/domain/query.ts:58","title":"name"},{"location":"source/classes/Include/#query_1","text":"query : Query Defined in: src/lib/query/domain/query.ts:59","title":"query"},{"location":"source/classes/Include/#relation_1","text":"relation : Relation Defined in: src/lib/query/domain/query.ts:60","title":"relation"},{"location":"source/classes/IncludeAction/","text":"Lambda ORM Lambda ORM / IncludeAction Class: IncludeAction\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:58 Extends QueryAction Type Parameters T T Constructors Constructor new IncludeAction \\< T >( actions , query ): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns IncludeAction \\< T > Inherited from QueryAction . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from QueryAction . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from QueryAction . execute include() include ( predicate ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:60 Parameters predicate ( value , index , array ) => unknown Returns QueryAction metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from QueryAction . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from QueryAction . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from QueryAction . normalize parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from QueryAction . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from QueryAction . sentence","title":"IncludeAction"},{"location":"source/classes/IncludeAction/#class-includeactiont","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:58","title":"Class: IncludeAction\\&lt;T>"},{"location":"source/classes/IncludeAction/#extends","text":"QueryAction","title":"Extends"},{"location":"source/classes/IncludeAction/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeAction/#t","text":"T","title":"T"},{"location":"source/classes/IncludeAction/#constructors","text":"","title":"Constructors"},{"location":"source/classes/IncludeAction/#constructor","text":"new IncludeAction \\< T >( actions , query ): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/IncludeAction/#parameters","text":"","title":"Parameters"},{"location":"source/classes/IncludeAction/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/IncludeAction/#query","text":"string","title":"query"},{"location":"source/classes/IncludeAction/#returns","text":"IncludeAction \\< T >","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from","text":"QueryAction . constructor","title":"Inherited from"},{"location":"source/classes/IncludeAction/#methods","text":"","title":"Methods"},{"location":"source/classes/IncludeAction/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/IncludeAction/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_1","text":"QueryAction . constraints","title":"Inherited from"},{"location":"source/classes/IncludeAction/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/IncludeAction/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/IncludeAction/#data","text":"any","title":"data"},{"location":"source/classes/IncludeAction/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_2","text":"QueryAction . execute","title":"Inherited from"},{"location":"source/classes/IncludeAction/#include","text":"include ( predicate ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:60","title":"include()"},{"location":"source/classes/IncludeAction/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/IncludeAction/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/IncludeAction/#returns_3","text":"QueryAction","title":"Returns"},{"location":"source/classes/IncludeAction/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/IncludeAction/#returns_4","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_3","text":"QueryAction . metadata","title":"Inherited from"},{"location":"source/classes/IncludeAction/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/IncludeAction/#returns_5","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_4","text":"QueryAction . model","title":"Inherited from"},{"location":"source/classes/IncludeAction/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/IncludeAction/#returns_6","text":"string","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_5","text":"QueryAction . normalize","title":"Inherited from"},{"location":"source/classes/IncludeAction/#parameters_3","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/IncludeAction/#returns_7","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_6","text":"QueryAction . parameters","title":"Inherited from"},{"location":"source/classes/IncludeAction/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/IncludeAction/#returns_8","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/IncludeAction/#inherited-from_7","text":"QueryAction . sentence","title":"Inherited from"},{"location":"source/classes/IncludeClauses/","text":"Lambda ORM Lambda ORM / IncludeClauses Class: IncludeClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:42 Extends HavingClauses \\< T > Type Parameters T T Constructors Constructor new IncludeClauses \\< T >( actions , query ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns IncludeClauses \\< T > Inherited from HavingClauses . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from HavingClauses . constraints distinct() distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . distinct execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from HavingClauses . execute filter() filter ( predicate ): FilterIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:44 Parameters predicate ( value , index , array ) => unknown Returns FilterIncludeClauses \\< T > first() first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . first having() having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:46 Parameters predicate ( value , index , array ) => unknown Returns HavingClauses \\< T > last() last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . last map() map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . map metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from HavingClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from HavingClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from HavingClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from HavingClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from HavingClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from HavingClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses Inherited from HavingClauses . sort","title":"IncludeClauses"},{"location":"source/classes/IncludeClauses/#class-includeclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:42","title":"Class: IncludeClauses\\&lt;T>"},{"location":"source/classes/IncludeClauses/#extends","text":"HavingClauses \\< T >","title":"Extends"},{"location":"source/classes/IncludeClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeClauses/#t","text":"T","title":"T"},{"location":"source/classes/IncludeClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/IncludeClauses/#constructor","text":"new IncludeClauses \\< T >( actions , query ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/IncludeClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/IncludeClauses/#query","text":"string","title":"query"},{"location":"source/classes/IncludeClauses/#returns","text":"IncludeClauses \\< T >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from","text":"HavingClauses . constructor","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/IncludeClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/IncludeClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_1","text":"HavingClauses . constraints","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#distinct","text":"distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36","title":"distinct()"},{"location":"source/classes/IncludeClauses/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeClauses/#u","text":"U","title":"U"},{"location":"source/classes/IncludeClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_2","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_2","text":"HavingClauses . distinct","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/IncludeClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#data","text":"any","title":"data"},{"location":"source/classes/IncludeClauses/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_3","text":"HavingClauses . execute","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#filter","text":"filter ( predicate ): FilterIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:44","title":"filter()"},{"location":"source/classes/IncludeClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_1","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_4","text":"FilterIncludeClauses \\< T >","title":"Returns"},{"location":"source/classes/IncludeClauses/#first","text":"first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32","title":"first()"},{"location":"source/classes/IncludeClauses/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeClauses/#u_1","text":"U","title":"U"},{"location":"source/classes/IncludeClauses/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_2","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_5","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_4","text":"HavingClauses . first","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#having","text":"having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:46","title":"having()"},{"location":"source/classes/IncludeClauses/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_3","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_6","text":"HavingClauses \\< T >","title":"Returns"},{"location":"source/classes/IncludeClauses/#last","text":"last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34","title":"last()"},{"location":"source/classes/IncludeClauses/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeClauses/#u_2","text":"U","title":"U"},{"location":"source/classes/IncludeClauses/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_4","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_7","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_5","text":"HavingClauses . last","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#map","text":"map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30","title":"map()"},{"location":"source/classes/IncludeClauses/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/classes/IncludeClauses/#u_3","text":"U","title":"U"},{"location":"source/classes/IncludeClauses/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_5","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_8","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_6","text":"HavingClauses . map","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/IncludeClauses/#returns_9","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_7","text":"HavingClauses . metadata","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/IncludeClauses/#returns_10","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_8","text":"HavingClauses . model","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/IncludeClauses/#returns_11","text":"string","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_9","text":"HavingClauses . normalize","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/IncludeClauses/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/IncludeClauses/#records","text":"number","title":"records"},{"location":"source/classes/IncludeClauses/#returns_12","text":"QueryAction","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_10","text":"HavingClauses . page","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#parameters_9","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/IncludeClauses/#returns_13","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_11","text":"HavingClauses . parameters","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/IncludeClauses/#returns_14","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_12","text":"HavingClauses . sentence","title":"Inherited from"},{"location":"source/classes/IncludeClauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/IncludeClauses/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/IncludeClauses/#predicate_6","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/IncludeClauses/#returns_15","text":"PageClauses","title":"Returns"},{"location":"source/classes/IncludeClauses/#inherited-from_13","text":"HavingClauses . sort","title":"Inherited from"},{"location":"source/classes/InitializeSchema/","text":"Lambda ORM Lambda ORM / InitializeSchema Class: InitializeSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:3 Constructors Constructor new InitializeSchema ( schemaService ): InitializeSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:5 Parameters schemaService SchemaService Returns InitializeSchema Methods initialize() initialize ( schema , args ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:6 Parameters schema Schema args InitializeSchemaArgs Returns Schema","title":"InitializeSchema"},{"location":"source/classes/InitializeSchema/#class-initializeschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:3","title":"Class: InitializeSchema"},{"location":"source/classes/InitializeSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/InitializeSchema/#constructor","text":"new InitializeSchema ( schemaService ): InitializeSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:5","title":"Constructor"},{"location":"source/classes/InitializeSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/InitializeSchema/#schemaservice","text":"SchemaService","title":"schemaService"},{"location":"source/classes/InitializeSchema/#returns","text":"InitializeSchema","title":"Returns"},{"location":"source/classes/InitializeSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/InitializeSchema/#initialize","text":"initialize ( schema , args ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/initialize.d.ts:6","title":"initialize()"},{"location":"source/classes/InitializeSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/InitializeSchema/#schema","text":"Schema","title":"schema"},{"location":"source/classes/InitializeSchema/#args","text":"InitializeSchemaArgs","title":"args"},{"location":"source/classes/InitializeSchema/#returns_1","text":"Schema","title":"Returns"},{"location":"source/classes/Insert/","text":"Lambda ORM Lambda ORM / Insert Class: Insert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:38 Extends Clause Constructors Constructor new Insert ( pos , name , children , entity , alias ): Insert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Insert Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Insert"},{"location":"source/classes/Insert/#class-insert","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:38","title":"Class: Insert"},{"location":"source/classes/Insert/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Insert/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Insert/#constructor","text":"new Insert ( pos , name , children , entity , alias ): Insert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Insert/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Insert/#pos","text":"Position","title":"pos"},{"location":"source/classes/Insert/#name","text":"string","title":"name"},{"location":"source/classes/Insert/#children","text":"Operand []","title":"children"},{"location":"source/classes/Insert/#entity","text":"string","title":"entity"},{"location":"source/classes/Insert/#alias","text":"string","title":"alias"},{"location":"source/classes/Insert/#returns","text":"Insert","title":"Returns"},{"location":"source/classes/Insert/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Insert/#properties","text":"","title":"Properties"},{"location":"source/classes/Insert/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Insert/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Insert/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Insert/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Insert/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Insert/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Insert/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Insert/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Insert/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Insert/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Insert/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Insert/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Insert/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Insert/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Insert/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Insert/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Insert/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Insert/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Insert/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Insert/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Insert/#methods","text":"","title":"Methods"},{"location":"source/classes/Insert/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Insert/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Insert/#context","text":"Context","title":"context"},{"location":"source/classes/Insert/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Insert/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Insert/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Insert/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Insert/#context_1","text":"Context","title":"context"},{"location":"source/classes/Insert/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Insert/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Insert/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Insert/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Insert/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Insert/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Insert/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Insert/#context_2","text":"Context","title":"context"},{"location":"source/classes/Insert/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Insert/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/InterpretSchemaDataService/","text":"Lambda ORM Lambda ORM / InterpretSchemaDataService Class: InterpretSchemaDataService Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:4 Constructors Constructor new InterpretSchemaDataService ( helper ): InterpretSchemaDataService Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:6 Parameters helper SchemaHelper Returns InterpretSchemaDataService Methods completeSchemaData() completeSchemaData ( source , name , type , schemaData ): void Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:7 Parameters source any name string type Type schemaData SchemaData Returns void","title":"InterpretSchemaDataService"},{"location":"source/classes/InterpretSchemaDataService/#class-interpretschemadataservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:4","title":"Class: InterpretSchemaDataService"},{"location":"source/classes/InterpretSchemaDataService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/InterpretSchemaDataService/#constructor","text":"new InterpretSchemaDataService ( helper ): InterpretSchemaDataService Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:6","title":"Constructor"},{"location":"source/classes/InterpretSchemaDataService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/InterpretSchemaDataService/#helper","text":"SchemaHelper","title":"helper"},{"location":"source/classes/InterpretSchemaDataService/#returns","text":"InterpretSchemaDataService","title":"Returns"},{"location":"source/classes/InterpretSchemaDataService/#methods","text":"","title":"Methods"},{"location":"source/classes/InterpretSchemaDataService/#completeschemadata","text":"completeSchemaData ( source , name , type , schemaData ): void Defined in: node_modules/lambdaorm-base/schema/application/services/interpretSchemaDataService.d.ts:7","title":"completeSchemaData()"},{"location":"source/classes/InterpretSchemaDataService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/InterpretSchemaDataService/#source","text":"any","title":"source"},{"location":"source/classes/InterpretSchemaDataService/#name","text":"string","title":"name"},{"location":"source/classes/InterpretSchemaDataService/#type","text":"Type","title":"type"},{"location":"source/classes/InterpretSchemaDataService/#schemadata","text":"SchemaData","title":"schemaData"},{"location":"source/classes/InterpretSchemaDataService/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/Join/","text":"Lambda ORM Lambda ORM / Join Class: Join Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:36 Extends Clause Constructors Constructor new Join ( pos , name , children , entity , alias ): Join Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Join Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Join"},{"location":"source/classes/Join/#class-join","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:36","title":"Class: Join"},{"location":"source/classes/Join/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Join/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Join/#constructor","text":"new Join ( pos , name , children , entity , alias ): Join Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Join/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Join/#pos","text":"Position","title":"pos"},{"location":"source/classes/Join/#name","text":"string","title":"name"},{"location":"source/classes/Join/#children","text":"Operand []","title":"children"},{"location":"source/classes/Join/#entity","text":"string","title":"entity"},{"location":"source/classes/Join/#alias","text":"string","title":"alias"},{"location":"source/classes/Join/#returns","text":"Join","title":"Returns"},{"location":"source/classes/Join/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Join/#properties","text":"","title":"Properties"},{"location":"source/classes/Join/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Join/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Join/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Join/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Join/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Join/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Join/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Join/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Join/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Join/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Join/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Join/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Join/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Join/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Join/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Join/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Join/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Join/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Join/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Join/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Join/#methods","text":"","title":"Methods"},{"location":"source/classes/Join/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Join/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Join/#context","text":"Context","title":"context"},{"location":"source/classes/Join/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Join/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Join/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Join/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Join/#context_1","text":"Context","title":"context"},{"location":"source/classes/Join/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Join/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Join/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Join/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Join/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Join/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Join/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Join/#context_2","text":"Context","title":"context"},{"location":"source/classes/Join/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Join/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/LanguageError/","text":"Lambda ORM Lambda ORM / LanguageError Class: LanguageError Defined in: src/lib/language/domain/errors.ts:1 Extends Error Constructors Constructor new LanguageError ( message ): LanguageError Defined in: src/lib/language/domain/errors.ts:2 Parameters message string Returns LanguageError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"LanguageError"},{"location":"source/classes/LanguageError/#class-languageerror","text":"Defined in: src/lib/language/domain/errors.ts:1","title":"Class: LanguageError"},{"location":"source/classes/LanguageError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/LanguageError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/LanguageError/#constructor","text":"new LanguageError ( message ): LanguageError Defined in: src/lib/language/domain/errors.ts:2","title":"Constructor"},{"location":"source/classes/LanguageError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/LanguageError/#message","text":"string","title":"message"},{"location":"source/classes/LanguageError/#returns","text":"LanguageError","title":"Returns"},{"location":"source/classes/LanguageError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/LanguageError/#properties","text":"","title":"Properties"},{"location":"source/classes/LanguageError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/LanguageError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/LanguageError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/LanguageError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/LanguageError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/LanguageError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/LanguageError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/LanguageError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/LanguageError/#methods","text":"","title":"Methods"},{"location":"source/classes/LanguageError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/LanguageError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/LanguageError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/LanguageError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/LanguageError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/LanguageError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/LanguageError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/LanguageError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/LanguageError/#err","text":"Error","title":"err"},{"location":"source/classes/LanguageError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/LanguageError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/LanguageError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/LanguageError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/LanguagesService/","text":"Lambda ORM Lambda ORM / LanguagesService Class: LanguagesService Defined in: src/lib/language/application/services/languagesService.ts:4 Constructors Constructor new LanguagesService (): LanguagesService Defined in: src/lib/language/application/services/languagesService.ts:8 Returns LanguagesService Properties dialects dialects : any Defined in: src/lib/language/application/services/languagesService.ts:5 Methods add() add ( language ): LanguagesService Defined in: src/lib/language/application/services/languagesService.ts:13 Parameters language Language Returns LanguagesService get() get ( name ): Language Defined in: src/lib/language/application/services/languagesService.ts:23 Parameters name string Returns Language getByDialect() getByDialect ( dialect ): Language Defined in: src/lib/language/application/services/languagesService.ts:31 Parameters dialect string Returns Language getDialect() getDialect ( name ): DialectService Defined in: src/lib/language/application/services/languagesService.ts:42 Parameters name string Returns DialectService","title":"LanguagesService"},{"location":"source/classes/LanguagesService/#class-languagesservice","text":"Defined in: src/lib/language/application/services/languagesService.ts:4","title":"Class: LanguagesService"},{"location":"source/classes/LanguagesService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/LanguagesService/#constructor","text":"new LanguagesService (): LanguagesService Defined in: src/lib/language/application/services/languagesService.ts:8","title":"Constructor"},{"location":"source/classes/LanguagesService/#returns","text":"LanguagesService","title":"Returns"},{"location":"source/classes/LanguagesService/#properties","text":"","title":"Properties"},{"location":"source/classes/LanguagesService/#dialects","text":"dialects : any Defined in: src/lib/language/application/services/languagesService.ts:5","title":"dialects"},{"location":"source/classes/LanguagesService/#methods","text":"","title":"Methods"},{"location":"source/classes/LanguagesService/#add","text":"add ( language ): LanguagesService Defined in: src/lib/language/application/services/languagesService.ts:13","title":"add()"},{"location":"source/classes/LanguagesService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/LanguagesService/#language","text":"Language","title":"language"},{"location":"source/classes/LanguagesService/#returns_1","text":"LanguagesService","title":"Returns"},{"location":"source/classes/LanguagesService/#get","text":"get ( name ): Language Defined in: src/lib/language/application/services/languagesService.ts:23","title":"get()"},{"location":"source/classes/LanguagesService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/LanguagesService/#name","text":"string","title":"name"},{"location":"source/classes/LanguagesService/#returns_2","text":"Language","title":"Returns"},{"location":"source/classes/LanguagesService/#getbydialect","text":"getByDialect ( dialect ): Language Defined in: src/lib/language/application/services/languagesService.ts:31","title":"getByDialect()"},{"location":"source/classes/LanguagesService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/LanguagesService/#dialect","text":"string","title":"dialect"},{"location":"source/classes/LanguagesService/#returns_3","text":"Language","title":"Returns"},{"location":"source/classes/LanguagesService/#getdialect","text":"getDialect ( name ): DialectService Defined in: src/lib/language/application/services/languagesService.ts:42","title":"getDialect()"},{"location":"source/classes/LanguagesService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/LanguagesService/#name_1","text":"string","title":"name"},{"location":"source/classes/LanguagesService/#returns_4","text":"DialectService","title":"Returns"},{"location":"source/classes/LoadSchema/","text":"Lambda ORM Lambda ORM / LoadSchema Class: LoadSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:8 Constructors Constructor new LoadSchema ( source , domain , mapping , stage , view , helper ): LoadSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:15 Parameters source DataSourceConfigService domain DomainConfigService mapping MappingsConfigService stage StageConfigService view ViewsConfigService helper OrmBaseH3lp Returns LoadSchema Methods load() load ( source ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:16 Parameters source Schema Returns Schema","title":"LoadSchema"},{"location":"source/classes/LoadSchema/#class-loadschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:8","title":"Class: LoadSchema"},{"location":"source/classes/LoadSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/LoadSchema/#constructor","text":"new LoadSchema ( source , domain , mapping , stage , view , helper ): LoadSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:15","title":"Constructor"},{"location":"source/classes/LoadSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/LoadSchema/#source","text":"DataSourceConfigService","title":"source"},{"location":"source/classes/LoadSchema/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/LoadSchema/#mapping","text":"MappingsConfigService","title":"mapping"},{"location":"source/classes/LoadSchema/#stage","text":"StageConfigService","title":"stage"},{"location":"source/classes/LoadSchema/#view","text":"ViewsConfigService","title":"view"},{"location":"source/classes/LoadSchema/#helper","text":"OrmBaseH3lp","title":"helper"},{"location":"source/classes/LoadSchema/#returns","text":"LoadSchema","title":"Returns"},{"location":"source/classes/LoadSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/LoadSchema/#load","text":"load ( source ): Schema Defined in: node_modules/lambdaorm-base/schema/application/useCases/load.d.ts:16","title":"load()"},{"location":"source/classes/LoadSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/LoadSchema/#source_1","text":"Schema","title":"source"},{"location":"source/classes/LoadSchema/#returns_1","text":"Schema","title":"Returns"},{"location":"source/classes/Logger/","text":"Lambda ORM Lambda ORM / Logger Class: abstract Logger Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:5 Constructors Constructor new Logger (): Logger Returns Logger Methods log() log ( message , level? ): Promise \\< void > Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:6 Parameters message any level? LogLevel Returns Promise \\< void >","title":"Logger"},{"location":"source/classes/Logger/#class-abstract-logger","text":"Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:5","title":"Class: abstract Logger"},{"location":"source/classes/Logger/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Logger/#constructor","text":"new Logger (): Logger","title":"Constructor"},{"location":"source/classes/Logger/#returns","text":"Logger","title":"Returns"},{"location":"source/classes/Logger/#methods","text":"","title":"Methods"},{"location":"source/classes/Logger/#log","text":"log ( message , level? ): Promise \\< void > Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:6","title":"log()"},{"location":"source/classes/Logger/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Logger/#message","text":"any","title":"message"},{"location":"source/classes/Logger/#level","text":"LogLevel","title":"level?"},{"location":"source/classes/Logger/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/LoggerBuilder/","text":"Lambda ORM Lambda ORM / LoggerBuilder Class: LoggerBuilder Defined in: node_modules/lambdaorm-base/shared/infrastructure/loggerBuilder.d.ts:2 Constructors Constructor new LoggerBuilder (): LoggerBuilder Returns LoggerBuilder Methods build() build ( name? ): Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/loggerBuilder.d.ts:3 Parameters name? string Returns Logger","title":"LoggerBuilder"},{"location":"source/classes/LoggerBuilder/#class-loggerbuilder","text":"Defined in: node_modules/lambdaorm-base/shared/infrastructure/loggerBuilder.d.ts:2","title":"Class: LoggerBuilder"},{"location":"source/classes/LoggerBuilder/#constructors","text":"","title":"Constructors"},{"location":"source/classes/LoggerBuilder/#constructor","text":"new LoggerBuilder (): LoggerBuilder","title":"Constructor"},{"location":"source/classes/LoggerBuilder/#returns","text":"LoggerBuilder","title":"Returns"},{"location":"source/classes/LoggerBuilder/#methods","text":"","title":"Methods"},{"location":"source/classes/LoggerBuilder/#build","text":"build ( name? ): Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/loggerBuilder.d.ts:3","title":"build()"},{"location":"source/classes/LoggerBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/classes/LoggerBuilder/#name","text":"string","title":"name?"},{"location":"source/classes/LoggerBuilder/#returns_1","text":"Logger","title":"Returns"},{"location":"source/classes/Map/","text":"Lambda ORM Lambda ORM / Map Class: Map Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:22 Extends Clause Constructors Constructor new Map ( pos , name , children , entity , alias ): Map Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Map Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Map"},{"location":"source/classes/Map/#class-map","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:22","title":"Class: Map"},{"location":"source/classes/Map/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Map/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Map/#constructor","text":"new Map ( pos , name , children , entity , alias ): Map Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Map/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Map/#pos","text":"Position","title":"pos"},{"location":"source/classes/Map/#name","text":"string","title":"name"},{"location":"source/classes/Map/#children","text":"Operand []","title":"children"},{"location":"source/classes/Map/#entity","text":"string","title":"entity"},{"location":"source/classes/Map/#alias","text":"string","title":"alias"},{"location":"source/classes/Map/#returns","text":"Map","title":"Returns"},{"location":"source/classes/Map/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Map/#properties","text":"","title":"Properties"},{"location":"source/classes/Map/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Map/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Map/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Map/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Map/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Map/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Map/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Map/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Map/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Map/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Map/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Map/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Map/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Map/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Map/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Map/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Map/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Map/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Map/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Map/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Map/#methods","text":"","title":"Methods"},{"location":"source/classes/Map/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Map/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Map/#context","text":"Context","title":"context"},{"location":"source/classes/Map/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Map/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Map/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Map/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Map/#context_1","text":"Context","title":"context"},{"location":"source/classes/Map/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Map/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Map/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Map/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Map/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Map/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Map/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Map/#context_2","text":"Context","title":"context"},{"location":"source/classes/Map/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Map/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/Map2Clauses/","text":"Lambda ORM Lambda ORM / Map2Clauses Class: Map2Clauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:24 Extends QueryAction Type Parameters T T Constructors Constructor new Map2Clauses \\< T >( actions , query ): Map2Clauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns Map2Clauses \\< T > Inherited from QueryAction . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from QueryAction . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from QueryAction . execute metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from QueryAction . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from QueryAction . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from QueryAction . normalize parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from QueryAction . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from QueryAction . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:26 Parameters predicate ( value , index , array ) => unknown Returns PageClauses","title":"Map2Clauses"},{"location":"source/classes/Map2Clauses/#class-map2clausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:24","title":"Class: Map2Clauses\\&lt;T>"},{"location":"source/classes/Map2Clauses/#extends","text":"QueryAction","title":"Extends"},{"location":"source/classes/Map2Clauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/Map2Clauses/#t","text":"T","title":"T"},{"location":"source/classes/Map2Clauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Map2Clauses/#constructor","text":"new Map2Clauses \\< T >( actions , query ): Map2Clauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/Map2Clauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Map2Clauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/Map2Clauses/#query","text":"string","title":"query"},{"location":"source/classes/Map2Clauses/#returns","text":"Map2Clauses \\< T >","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from","text":"QueryAction . constructor","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#methods","text":"","title":"Methods"},{"location":"source/classes/Map2Clauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/Map2Clauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_1","text":"QueryAction . constraints","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/Map2Clauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Map2Clauses/#data","text":"any","title":"data"},{"location":"source/classes/Map2Clauses/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_2","text":"QueryAction . execute","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/Map2Clauses/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_3","text":"QueryAction . metadata","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/Map2Clauses/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_4","text":"QueryAction . model","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/Map2Clauses/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_5","text":"QueryAction . normalize","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#parameters_2","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/Map2Clauses/#returns_6","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_6","text":"QueryAction . parameters","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/Map2Clauses/#returns_7","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/Map2Clauses/#inherited-from_7","text":"QueryAction . sentence","title":"Inherited from"},{"location":"source/classes/Map2Clauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:26","title":"sort()"},{"location":"source/classes/Map2Clauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Map2Clauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Map2Clauses/#returns_8","text":"PageClauses","title":"Returns"},{"location":"source/classes/MapClauses/","text":"Lambda ORM Lambda ORM / MapClauses Class: MapClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:20 Extends PageClauses Extended by HavingClauses Type Parameters T T Constructors Constructor new MapClauses \\< T >( actions , query ): MapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns MapClauses \\< T > Inherited from PageClauses . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from PageClauses . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from PageClauses . execute metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from PageClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from PageClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from PageClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from PageClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from PageClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from PageClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses","title":"MapClauses"},{"location":"source/classes/MapClauses/#class-mapclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:20","title":"Class: MapClauses\\&lt;T>"},{"location":"source/classes/MapClauses/#extends","text":"PageClauses","title":"Extends"},{"location":"source/classes/MapClauses/#extended-by","text":"HavingClauses","title":"Extended by"},{"location":"source/classes/MapClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/MapClauses/#t","text":"T","title":"T"},{"location":"source/classes/MapClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/MapClauses/#constructor","text":"new MapClauses \\< T >( actions , query ): MapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/MapClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/MapClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/MapClauses/#query","text":"string","title":"query"},{"location":"source/classes/MapClauses/#returns","text":"MapClauses \\< T >","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from","text":"PageClauses . constructor","title":"Inherited from"},{"location":"source/classes/MapClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/MapClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/MapClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_1","text":"PageClauses . constraints","title":"Inherited from"},{"location":"source/classes/MapClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/MapClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/MapClauses/#data","text":"any","title":"data"},{"location":"source/classes/MapClauses/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_2","text":"PageClauses . execute","title":"Inherited from"},{"location":"source/classes/MapClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/MapClauses/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_3","text":"PageClauses . metadata","title":"Inherited from"},{"location":"source/classes/MapClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/MapClauses/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_4","text":"PageClauses . model","title":"Inherited from"},{"location":"source/classes/MapClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/MapClauses/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_5","text":"PageClauses . normalize","title":"Inherited from"},{"location":"source/classes/MapClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/MapClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/MapClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/MapClauses/#records","text":"number","title":"records"},{"location":"source/classes/MapClauses/#returns_6","text":"QueryAction","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_6","text":"PageClauses . page","title":"Inherited from"},{"location":"source/classes/MapClauses/#parameters_3","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/MapClauses/#returns_7","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_7","text":"PageClauses . parameters","title":"Inherited from"},{"location":"source/classes/MapClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/MapClauses/#returns_8","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/MapClauses/#inherited-from_8","text":"PageClauses . sentence","title":"Inherited from"},{"location":"source/classes/MapClauses/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/MapClauses/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/MapClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/MapClauses/#returns_9","text":"PageClauses","title":"Returns"},{"location":"source/classes/MappingConfigService/","text":"Lambda ORM Lambda ORM / MappingConfigService Class: MappingConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:3 Extends DomainConfigServiceBase \\< EntityMapping , PropertyMapping > Constructors Constructor new MappingConfigService ( mapping , enums? ): MappingConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:6 Parameters mapping Mapping enums? Enum [] Returns MappingConfigService Overrides DomainConfigServiceBase<EntityMapping, PropertyMapping>.constructor Properties enums enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:5 Overrides DomainConfigServiceBase.enums Accessors entities Get Signature get entities (): EntityMapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:11 Returns EntityMapping [] Overrides DomainConfigServiceBase.entities format Get Signature get format (): undefined | FormatMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:8 Returns undefined | FormatMapping name Get Signature get name (): string Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:7 Returns string Methods entityMapping() entityMapping ( entityName ): undefined | string Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:12 Parameters entityName string Returns undefined | string existsProperty() existsProperty ( entityName , name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:9 Parameters entityName string name string Returns boolean Inherited from DomainConfigServiceBase.existsProperty get() get (): Mapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:9 Returns Mapping getAutoIncrement() getAutoIncrement ( entityName ): undefined | PropertyMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:11 Parameters entityName string Returns undefined | PropertyMapping Inherited from DomainConfigServiceBase.getAutoIncrement getEntity() getEntity ( name ): undefined | EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:5 Parameters name string Returns undefined | EntityMapping Inherited from DomainConfigServiceBase.getEntity getEnum() getEnum ( name ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:7 Parameters name string Returns undefined | Enum Inherited from DomainConfigServiceBase.getEnum getFieldIds() getFieldIds ( entityName ): undefined | PropertyMapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:12 Parameters entityName string Returns undefined | PropertyMapping [] Inherited from DomainConfigServiceBase.getFieldIds getForcedEntity() getForcedEntity ( name ): EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:6 Parameters name string Returns EntityMapping Inherited from DomainConfigServiceBase.getForcedEntity getProperty() getProperty ( entityName , name ): PropertyMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:10 Parameters entityName string name string Returns PropertyMapping Inherited from DomainConfigServiceBase.getProperty getRelation() getRelation ( entity , relation ): RelationInfo Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:44 Parameters entity string relation string Returns RelationInfo Inherited from DomainConfigServiceBase.getRelation isChild() isChild ( entityName ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:8 Parameters entityName string Returns boolean Inherited from DomainConfigServiceBase.isChild listEntities() listEntities (): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:13 Returns string [] Inherited from DomainConfigServiceBase.listEntities set() set ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:10 Parameters value Mapping Returns void sortByDependencies() sortByDependencies ( entities? ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:25 Sort a list of entities according to their dependencies Parameters entities? string [] entities to order Returns string [] returns the sorted entities Inherited from DomainConfigServiceBase.sortByDependencies sortByRelations() sortByRelations ( mainEntities , allEntities ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:19 Sort a list of entities according to their relationships Parameters mainEntities string [] allEntities string [] entities to order Returns string [] returns the sorted entities Inherited from DomainConfigServiceBase.sortByRelations","title":"MappingConfigService"},{"location":"source/classes/MappingConfigService/#class-mappingconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:3","title":"Class: MappingConfigService"},{"location":"source/classes/MappingConfigService/#extends","text":"DomainConfigServiceBase \\< EntityMapping , PropertyMapping >","title":"Extends"},{"location":"source/classes/MappingConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/MappingConfigService/#constructor","text":"new MappingConfigService ( mapping , enums? ): MappingConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:6","title":"Constructor"},{"location":"source/classes/MappingConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#mapping","text":"Mapping","title":"mapping"},{"location":"source/classes/MappingConfigService/#enums","text":"Enum []","title":"enums?"},{"location":"source/classes/MappingConfigService/#returns","text":"MappingConfigService","title":"Returns"},{"location":"source/classes/MappingConfigService/#overrides","text":"DomainConfigServiceBase<EntityMapping, PropertyMapping>.constructor","title":"Overrides"},{"location":"source/classes/MappingConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/MappingConfigService/#enums_1","text":"enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:5","title":"enums"},{"location":"source/classes/MappingConfigService/#overrides_1","text":"DomainConfigServiceBase.enums","title":"Overrides"},{"location":"source/classes/MappingConfigService/#accessors","text":"","title":"Accessors"},{"location":"source/classes/MappingConfigService/#entities","text":"","title":"entities"},{"location":"source/classes/MappingConfigService/#get-signature","text":"get entities (): EntityMapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:11","title":"Get Signature"},{"location":"source/classes/MappingConfigService/#returns_1","text":"EntityMapping []","title":"Returns"},{"location":"source/classes/MappingConfigService/#overrides_2","text":"DomainConfigServiceBase.entities","title":"Overrides"},{"location":"source/classes/MappingConfigService/#format","text":"","title":"format"},{"location":"source/classes/MappingConfigService/#get-signature_1","text":"get format (): undefined | FormatMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:8","title":"Get Signature"},{"location":"source/classes/MappingConfigService/#returns_2","text":"undefined | FormatMapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#name","text":"","title":"name"},{"location":"source/classes/MappingConfigService/#get-signature_2","text":"get name (): string Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:7","title":"Get Signature"},{"location":"source/classes/MappingConfigService/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/MappingConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/MappingConfigService/#entitymapping","text":"entityMapping ( entityName ): undefined | string Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:12","title":"entityMapping()"},{"location":"source/classes/MappingConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#returns_4","text":"undefined | string","title":"Returns"},{"location":"source/classes/MappingConfigService/#existsproperty","text":"existsProperty ( entityName , name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:9","title":"existsProperty()"},{"location":"source/classes/MappingConfigService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname_1","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#name_1","text":"string","title":"name"},{"location":"source/classes/MappingConfigService/#returns_5","text":"boolean","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from","text":"DomainConfigServiceBase.existsProperty","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#get","text":"get (): Mapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:9","title":"get()"},{"location":"source/classes/MappingConfigService/#returns_6","text":"Mapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#getautoincrement","text":"getAutoIncrement ( entityName ): undefined | PropertyMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:11","title":"getAutoIncrement()"},{"location":"source/classes/MappingConfigService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname_2","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#returns_7","text":"undefined | PropertyMapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_1","text":"DomainConfigServiceBase.getAutoIncrement","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getentity","text":"getEntity ( name ): undefined | EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:5","title":"getEntity()"},{"location":"source/classes/MappingConfigService/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#name_2","text":"string","title":"name"},{"location":"source/classes/MappingConfigService/#returns_8","text":"undefined | EntityMapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_2","text":"DomainConfigServiceBase.getEntity","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getenum","text":"getEnum ( name ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:7","title":"getEnum()"},{"location":"source/classes/MappingConfigService/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#name_3","text":"string","title":"name"},{"location":"source/classes/MappingConfigService/#returns_9","text":"undefined | Enum","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_3","text":"DomainConfigServiceBase.getEnum","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getfieldids","text":"getFieldIds ( entityName ): undefined | PropertyMapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:12","title":"getFieldIds()"},{"location":"source/classes/MappingConfigService/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname_3","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#returns_10","text":"undefined | PropertyMapping []","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_4","text":"DomainConfigServiceBase.getFieldIds","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getforcedentity","text":"getForcedEntity ( name ): EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:6","title":"getForcedEntity()"},{"location":"source/classes/MappingConfigService/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#name_4","text":"string","title":"name"},{"location":"source/classes/MappingConfigService/#returns_11","text":"EntityMapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_5","text":"DomainConfigServiceBase.getForcedEntity","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getproperty","text":"getProperty ( entityName , name ): PropertyMapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:10","title":"getProperty()"},{"location":"source/classes/MappingConfigService/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname_4","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#name_5","text":"string","title":"name"},{"location":"source/classes/MappingConfigService/#returns_12","text":"PropertyMapping","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_6","text":"DomainConfigServiceBase.getProperty","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#getrelation","text":"getRelation ( entity , relation ): RelationInfo Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:44","title":"getRelation()"},{"location":"source/classes/MappingConfigService/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entity","text":"string","title":"entity"},{"location":"source/classes/MappingConfigService/#relation","text":"string","title":"relation"},{"location":"source/classes/MappingConfigService/#returns_13","text":"RelationInfo","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_7","text":"DomainConfigServiceBase.getRelation","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#ischild","text":"isChild ( entityName ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:8","title":"isChild()"},{"location":"source/classes/MappingConfigService/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entityname_5","text":"string","title":"entityName"},{"location":"source/classes/MappingConfigService/#returns_14","text":"boolean","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_8","text":"DomainConfigServiceBase.isChild","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#listentities","text":"listEntities (): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:13","title":"listEntities()"},{"location":"source/classes/MappingConfigService/#returns_15","text":"string []","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_9","text":"DomainConfigServiceBase.listEntities","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#set","text":"set ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingConfigService.d.ts:10","title":"set()"},{"location":"source/classes/MappingConfigService/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#value","text":"Mapping","title":"value"},{"location":"source/classes/MappingConfigService/#returns_16","text":"void","title":"Returns"},{"location":"source/classes/MappingConfigService/#sortbydependencies","text":"sortByDependencies ( entities? ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:25 Sort a list of entities according to their dependencies","title":"sortByDependencies()"},{"location":"source/classes/MappingConfigService/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#entities_1","text":"string [] entities to order","title":"entities?"},{"location":"source/classes/MappingConfigService/#returns_17","text":"string [] returns the sorted entities","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_10","text":"DomainConfigServiceBase.sortByDependencies","title":"Inherited from"},{"location":"source/classes/MappingConfigService/#sortbyrelations","text":"sortByRelations ( mainEntities , allEntities ): string [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/domainConfigServiceBase.d.ts:19 Sort a list of entities according to their relationships","title":"sortByRelations()"},{"location":"source/classes/MappingConfigService/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/MappingConfigService/#mainentities","text":"string []","title":"mainEntities"},{"location":"source/classes/MappingConfigService/#allentities","text":"string [] entities to order","title":"allEntities"},{"location":"source/classes/MappingConfigService/#returns_18","text":"string [] returns the sorted entities","title":"Returns"},{"location":"source/classes/MappingConfigService/#inherited-from_11","text":"DomainConfigServiceBase.sortByRelations","title":"Inherited from"},{"location":"source/classes/MappingsConfigService/","text":"Lambda ORM Lambda ORM / MappingsConfigService Class: MappingsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:3 Constructors Constructor new MappingsConfigService (): MappingsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:5 Returns MappingsConfigService Properties mappings mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:4 Methods delete() delete ( name ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:7 Parameters name string Returns void get() get ( name ): Mapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:8 Parameters name string Returns Mapping getInstance() getInstance ( name ): MappingConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:9 Parameters name string Returns MappingConfigService load() load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:6 Parameters value Mapping Returns void","title":"MappingsConfigService"},{"location":"source/classes/MappingsConfigService/#class-mappingsconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:3","title":"Class: MappingsConfigService"},{"location":"source/classes/MappingsConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/MappingsConfigService/#constructor","text":"new MappingsConfigService (): MappingsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:5","title":"Constructor"},{"location":"source/classes/MappingsConfigService/#returns","text":"MappingsConfigService","title":"Returns"},{"location":"source/classes/MappingsConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/MappingsConfigService/#mappings","text":"mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:4","title":"mappings"},{"location":"source/classes/MappingsConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/MappingsConfigService/#delete","text":"delete ( name ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:7","title":"delete()"},{"location":"source/classes/MappingsConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/MappingsConfigService/#name","text":"string","title":"name"},{"location":"source/classes/MappingsConfigService/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/MappingsConfigService/#get","text":"get ( name ): Mapping Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:8","title":"get()"},{"location":"source/classes/MappingsConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/MappingsConfigService/#name_1","text":"string","title":"name"},{"location":"source/classes/MappingsConfigService/#returns_2","text":"Mapping","title":"Returns"},{"location":"source/classes/MappingsConfigService/#getinstance","text":"getInstance ( name ): MappingConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:9","title":"getInstance()"},{"location":"source/classes/MappingsConfigService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/MappingsConfigService/#name_2","text":"string","title":"name"},{"location":"source/classes/MappingsConfigService/#returns_3","text":"MappingConfigService","title":"Returns"},{"location":"source/classes/MappingsConfigService/#load","text":"load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/mappingsConfigService.d.ts:6","title":"load()"},{"location":"source/classes/MappingsConfigService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/MappingsConfigService/#value","text":"Mapping","title":"value"},{"location":"source/classes/MappingsConfigService/#returns_4","text":"void","title":"Returns"},{"location":"source/classes/MatchSchema/","text":"Lambda ORM Lambda ORM / MatchSchema Class: MatchSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:4 Constructors Constructor new MatchSchema ( schemaService , helper ): MatchSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:7 Parameters schemaService SchemaService helper SchemaHelper Returns MatchSchema Methods match() match ( schema , mappings , options ): void Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:8 Parameters schema Schema mappings Mapping [] options MatchOptions Returns void","title":"MatchSchema"},{"location":"source/classes/MatchSchema/#class-matchschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:4","title":"Class: MatchSchema"},{"location":"source/classes/MatchSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/MatchSchema/#constructor","text":"new MatchSchema ( schemaService , helper ): MatchSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:7","title":"Constructor"},{"location":"source/classes/MatchSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/MatchSchema/#schemaservice","text":"SchemaService","title":"schemaService"},{"location":"source/classes/MatchSchema/#helper","text":"SchemaHelper","title":"helper"},{"location":"source/classes/MatchSchema/#returns","text":"MatchSchema","title":"Returns"},{"location":"source/classes/MatchSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/MatchSchema/#match","text":"match ( schema , mappings , options ): void Defined in: node_modules/lambdaorm-base/schema/application/useCases/match.d.ts:8","title":"match()"},{"location":"source/classes/MatchSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/MatchSchema/#schema","text":"Schema","title":"schema"},{"location":"source/classes/MatchSchema/#mappings","text":"Mapping []","title":"mappings"},{"location":"source/classes/MatchSchema/#options","text":"MatchOptions","title":"options"},{"location":"source/classes/MatchSchema/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/MethodNotImplemented/","text":"Lambda ORM Lambda ORM / MethodNotImplemented Class: MethodNotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:4 Extends Error Constructors Constructor new MethodNotImplemented ( _class , method ): MethodNotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:5 Parameters _class string method string Returns MethodNotImplemented Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"MethodNotImplemented"},{"location":"source/classes/MethodNotImplemented/#class-methodnotimplemented","text":"Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:4","title":"Class: MethodNotImplemented"},{"location":"source/classes/MethodNotImplemented/#extends","text":"Error","title":"Extends"},{"location":"source/classes/MethodNotImplemented/#constructors","text":"","title":"Constructors"},{"location":"source/classes/MethodNotImplemented/#constructor","text":"new MethodNotImplemented ( _class , method ): MethodNotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:5","title":"Constructor"},{"location":"source/classes/MethodNotImplemented/#parameters","text":"","title":"Parameters"},{"location":"source/classes/MethodNotImplemented/#_class","text":"string","title":"_class"},{"location":"source/classes/MethodNotImplemented/#method","text":"string","title":"method"},{"location":"source/classes/MethodNotImplemented/#returns","text":"MethodNotImplemented","title":"Returns"},{"location":"source/classes/MethodNotImplemented/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/MethodNotImplemented/#properties","text":"","title":"Properties"},{"location":"source/classes/MethodNotImplemented/#message","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/MethodNotImplemented/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/MethodNotImplemented/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/MethodNotImplemented/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/MethodNotImplemented/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/MethodNotImplemented/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/MethodNotImplemented/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/MethodNotImplemented/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/MethodNotImplemented/#methods","text":"","title":"Methods"},{"location":"source/classes/MethodNotImplemented/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/MethodNotImplemented/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/MethodNotImplemented/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/MethodNotImplemented/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/MethodNotImplemented/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/MethodNotImplemented/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/MethodNotImplemented/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/MethodNotImplemented/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/MethodNotImplemented/#err","text":"Error","title":"err"},{"location":"source/classes/MethodNotImplemented/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/MethodNotImplemented/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/MethodNotImplemented/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/MethodNotImplemented/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/ModificableClauses/","text":"Lambda ORM Lambda ORM / ModificableClauses Class: ModificableClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:62 Extends QueryAction Type Parameters T T Constructors Constructor new ModificableClauses \\< T >( actions , query ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns ModificableClauses \\< T > Inherited from QueryAction . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from QueryAction . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from QueryAction . execute filter() filter ( predicate ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:64 Parameters predicate ( value , index , array ) => unknown Returns FilterClauses \\< T > include() include ( predicate ): FilterAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:66 Parameters predicate ( value , index , array ) => unknown Returns FilterAction \\< T > metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from QueryAction . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from QueryAction . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from QueryAction . normalize parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from QueryAction . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from QueryAction . sentence","title":"ModificableClauses"},{"location":"source/classes/ModificableClauses/#class-modificableclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:62","title":"Class: ModificableClauses\\&lt;T>"},{"location":"source/classes/ModificableClauses/#extends","text":"QueryAction","title":"Extends"},{"location":"source/classes/ModificableClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/ModificableClauses/#t","text":"T","title":"T"},{"location":"source/classes/ModificableClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ModificableClauses/#constructor","text":"new ModificableClauses \\< T >( actions , query ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/ModificableClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ModificableClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/ModificableClauses/#query","text":"string","title":"query"},{"location":"source/classes/ModificableClauses/#returns","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from","text":"QueryAction . constructor","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/ModificableClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/ModificableClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_1","text":"QueryAction . constraints","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/ModificableClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ModificableClauses/#data","text":"any","title":"data"},{"location":"source/classes/ModificableClauses/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_2","text":"QueryAction . execute","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#filter","text":"filter ( predicate ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:64","title":"filter()"},{"location":"source/classes/ModificableClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ModificableClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/ModificableClauses/#returns_3","text":"FilterClauses \\< T >","title":"Returns"},{"location":"source/classes/ModificableClauses/#include","text":"include ( predicate ): FilterAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:66","title":"include()"},{"location":"source/classes/ModificableClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ModificableClauses/#predicate_1","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/ModificableClauses/#returns_4","text":"FilterAction \\< T >","title":"Returns"},{"location":"source/classes/ModificableClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/ModificableClauses/#returns_5","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_3","text":"QueryAction . metadata","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/ModificableClauses/#returns_6","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_4","text":"QueryAction . model","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/ModificableClauses/#returns_7","text":"string","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_5","text":"QueryAction . normalize","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#parameters_4","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/ModificableClauses/#returns_8","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_6","text":"QueryAction . parameters","title":"Inherited from"},{"location":"source/classes/ModificableClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/ModificableClauses/#returns_9","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/ModificableClauses/#inherited-from_7","text":"QueryAction . sentence","title":"Inherited from"},{"location":"source/classes/NotImplemented/","text":"Lambda ORM Lambda ORM / NotImplemented Class: NotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:7 Extends Error Constructors Constructor new NotImplemented ( message ): NotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:8 Parameters message string Returns NotImplemented Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"NotImplemented"},{"location":"source/classes/NotImplemented/#class-notimplemented","text":"Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:7","title":"Class: NotImplemented"},{"location":"source/classes/NotImplemented/#extends","text":"Error","title":"Extends"},{"location":"source/classes/NotImplemented/#constructors","text":"","title":"Constructors"},{"location":"source/classes/NotImplemented/#constructor","text":"new NotImplemented ( message ): NotImplemented Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:8","title":"Constructor"},{"location":"source/classes/NotImplemented/#parameters","text":"","title":"Parameters"},{"location":"source/classes/NotImplemented/#message","text":"string","title":"message"},{"location":"source/classes/NotImplemented/#returns","text":"NotImplemented","title":"Returns"},{"location":"source/classes/NotImplemented/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/NotImplemented/#properties","text":"","title":"Properties"},{"location":"source/classes/NotImplemented/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/NotImplemented/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/NotImplemented/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/NotImplemented/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/NotImplemented/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/NotImplemented/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/NotImplemented/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/NotImplemented/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/NotImplemented/#methods","text":"","title":"Methods"},{"location":"source/classes/NotImplemented/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/NotImplemented/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/NotImplemented/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/NotImplemented/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/NotImplemented/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/NotImplemented/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/NotImplemented/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/NotImplemented/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/NotImplemented/#err","text":"Error","title":"err"},{"location":"source/classes/NotImplemented/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/NotImplemented/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/NotImplemented/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/NotImplemented/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/OperandFacade/","text":"Lambda ORM Lambda ORM / OperandFacade Class: OperandFacade Defined in: src/lib/operand/application/facade.ts:10 Constructors Constructor new OperandFacade ( expressions , schemaState , cache , operandSerializer , operandHelper , helper ): OperandFacade Defined in: src/lib/operand/application/facade.ts:13 Parameters expressions Expressions schemaState SchemaState cache ICache \\< string , string > operandSerializer OperandSerializer operandHelper OrmOperandHelper helper OrmH3lp Returns OperandFacade Methods build() build ( expression ): Operand Defined in: src/lib/operand/application/facade.ts:27 Parameters expression string Returns Operand getClauses() getClauses ( operand ): any Defined in: src/lib/operand/application/facade.ts:35 Parameters operand Operand Returns any normalize() normalize ( expression ): string Defined in: src/lib/operand/application/facade.ts:31 Parameters expression string Returns string","title":"OperandFacade"},{"location":"source/classes/OperandFacade/#class-operandfacade","text":"Defined in: src/lib/operand/application/facade.ts:10","title":"Class: OperandFacade"},{"location":"source/classes/OperandFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/OperandFacade/#constructor","text":"new OperandFacade ( expressions , schemaState , cache , operandSerializer , operandHelper , helper ): OperandFacade Defined in: src/lib/operand/application/facade.ts:13","title":"Constructor"},{"location":"source/classes/OperandFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/OperandFacade/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/OperandFacade/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/OperandFacade/#cache","text":"ICache \\< string , string >","title":"cache"},{"location":"source/classes/OperandFacade/#operandserializer","text":"OperandSerializer","title":"operandSerializer"},{"location":"source/classes/OperandFacade/#operandhelper","text":"OrmOperandHelper","title":"operandHelper"},{"location":"source/classes/OperandFacade/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/OperandFacade/#returns","text":"OperandFacade","title":"Returns"},{"location":"source/classes/OperandFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/OperandFacade/#build","text":"build ( expression ): Operand Defined in: src/lib/operand/application/facade.ts:27","title":"build()"},{"location":"source/classes/OperandFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/OperandFacade/#expression","text":"string","title":"expression"},{"location":"source/classes/OperandFacade/#returns_1","text":"Operand","title":"Returns"},{"location":"source/classes/OperandFacade/#getclauses","text":"getClauses ( operand ): any Defined in: src/lib/operand/application/facade.ts:35","title":"getClauses()"},{"location":"source/classes/OperandFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/OperandFacade/#operand","text":"Operand","title":"operand"},{"location":"source/classes/OperandFacade/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/OperandFacade/#normalize","text":"normalize ( expression ): string Defined in: src/lib/operand/application/facade.ts:31","title":"normalize()"},{"location":"source/classes/OperandFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/OperandFacade/#expression_1","text":"string","title":"expression"},{"location":"source/classes/OperandFacade/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/Orm/","text":"Lambda ORM Lambda ORM / Orm Class: Orm Defined in: src/lib/orm/infrastructure/orm.ts:29 Facade through which you can access all the functionalities of the library. Implements IOrm Constructors Constructor new Orm ( _logger? ): Orm Defined in: src/lib/orm/infrastructure/orm.ts:42 Parameters _logger? Logger Returns Orm Properties connection connection : ConnectionFacade Defined in: src/lib/orm/infrastructure/orm.ts:30 exp exp : Expressions Defined in: src/lib/orm/infrastructure/orm.ts:32 Implementation of IOrm . exp helper helper : OrmH3lp Defined in: src/lib/orm/infrastructure/orm.ts:36 language language : LanguagesService Defined in: src/lib/orm/infrastructure/orm.ts:31 schema schema : SchemaFacade Defined in: src/lib/orm/infrastructure/orm.ts:33 Implementation of IOrm . schema stage stage : StageFacade Defined in: src/lib/orm/infrastructure/orm.ts:35 Implementation of IOrm . stage state state : SchemaState Defined in: src/lib/orm/infrastructure/orm.ts:34 Implementation of IOrm . state Accessors defaultStage Get Signature get defaultStage (): Stage Defined in: src/lib/orm/infrastructure/orm.ts:66 Returns Stage logger Get Signature get logger (): Logger Defined in: src/lib/orm/infrastructure/orm.ts:58 Returns Logger Set Signature set logger ( value ): void Defined in: src/lib/orm/infrastructure/orm.ts:62 Parameters value Logger Returns void Methods constraints() Call Signature constraints ( query ): MetadataConstraint Defined in: src/lib/orm/infrastructure/orm.ts:179 Get constraints of query Parameters query Function query expression Returns MetadataConstraint Constraints of query Implementation of IOrm . constraints Call Signature constraints ( query ): MetadataConstraint Defined in: src/lib/orm/infrastructure/orm.ts:180 Get constraints of query Parameters query string query expression Returns MetadataConstraint Constraints of query Implementation of IOrm . constraints dialect() dialect ( source ): Dialect Defined in: src/lib/orm/infrastructure/orm.ts:134 Get dialect of source Parameters source string Name of source Returns Dialect Implementation of IOrm . dialect end() end (): Promise \\< void > Defined in: src/lib/orm/infrastructure/orm.ts:116 Frees the resources used, for example the connection pools Returns Promise \\< void > Implementation of IOrm . end execute() Call Signature execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/infrastructure/orm.ts:218 Execute query Parameters query Function query expression data? any Data with variables options? QueryOptions options of execution Returns Promise \\< any > Result of execution Implementation of IOrm . execute Call Signature execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/infrastructure/orm.ts:219 Execute query Parameters query string query expression data? any Data with variables options? QueryOptions options of execution Returns Promise \\< any > Result of execution Implementation of IOrm . execute init() init ( source? , connect? ): Promise \\< Schema > Defined in: src/lib/orm/infrastructure/orm.ts:75 initialize the orm library Parameters source? optional parameter to specify the location of the configuration file. In the case that it is not passed, it is assumed that it is \"lambdaORM.yaml\" in the root of the project string | Schema connect? boolean = true Returns Promise \\< Schema > promise void Implementation of IOrm . init metadata() Call Signature metadata ( query ): Metadata Defined in: src/lib/orm/infrastructure/orm.ts:191 Get metadata of query Parameters query Function query expression Returns Metadata metadata of query Implementation of IOrm . metadata Call Signature metadata ( query ): Metadata Defined in: src/lib/orm/infrastructure/orm.ts:192 Get metadata of query Parameters query string query expression Returns Metadata metadata of query Implementation of IOrm . metadata model() Call Signature model ( query ): MetadataModel [] Defined in: src/lib/orm/infrastructure/orm.ts:155 Get model of query Parameters query Function query expression Returns MetadataModel [] Model of query Implementation of IOrm . model Call Signature model ( query ): MetadataModel [] Defined in: src/lib/orm/infrastructure/orm.ts:156 Get model of query Parameters query string query expression Returns MetadataModel [] Model of query Implementation of IOrm . model normalize() Call Signature normalize ( query ): string Defined in: src/lib/orm/infrastructure/orm.ts:143 Normalize query Parameters query Function query expression Returns string Expression normalized Implementation of IOrm . normalize Call Signature normalize ( query ): string Defined in: src/lib/orm/infrastructure/orm.ts:144 Normalize query Parameters query string query expression Returns string Expression normalized Implementation of IOrm . normalize parameters() Call Signature parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/infrastructure/orm.ts:167 Get parameters of query Parameters query Function query expression Returns MetadataParameter [] Parameters of query Implementation of IOrm . parameters Call Signature parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/infrastructure/orm.ts:168 Get parameters of query Parameters query string query expression Returns MetadataParameter [] Parameters of query Implementation of IOrm . parameters plan() Call Signature plan ( query , options? ): QueryPlan Defined in: src/lib/orm/infrastructure/orm.ts:203 Get getInfo of query Parameters query Function query expression options? QueryOptions options of execution Returns QueryPlan Implementation of IOrm . plan Call Signature plan ( query , options? ): QueryPlan Defined in: src/lib/orm/infrastructure/orm.ts:204 Get getInfo of query Parameters query string query expression options? QueryOptions options of execution Returns QueryPlan Implementation of IOrm . plan subscribe() subscribe ( observer ): void Defined in: src/lib/orm/infrastructure/orm.ts:246 Parameters observer ActionObserver Returns void transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/orm/infrastructure/orm.ts:238 Create a transaction Parameters options options of execution undefined | QueryOptions callback ( tr ) => Promise \\< void > Code to be executed in transaction Returns Promise \\< void > Implementation of IOrm . transaction unsubscribe() unsubscribe ( observer ): void Defined in: src/lib/orm/infrastructure/orm.ts:250 Parameters observer ActionObserver Returns void","title":"Orm"},{"location":"source/classes/Orm/#class-orm","text":"Defined in: src/lib/orm/infrastructure/orm.ts:29 Facade through which you can access all the functionalities of the library.","title":"Class: Orm"},{"location":"source/classes/Orm/#implements","text":"IOrm","title":"Implements"},{"location":"source/classes/Orm/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Orm/#constructor","text":"new Orm ( _logger? ): Orm Defined in: src/lib/orm/infrastructure/orm.ts:42","title":"Constructor"},{"location":"source/classes/Orm/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Orm/#_logger","text":"Logger","title":"_logger?"},{"location":"source/classes/Orm/#returns","text":"Orm","title":"Returns"},{"location":"source/classes/Orm/#properties","text":"","title":"Properties"},{"location":"source/classes/Orm/#connection","text":"connection : ConnectionFacade Defined in: src/lib/orm/infrastructure/orm.ts:30","title":"connection"},{"location":"source/classes/Orm/#exp","text":"exp : Expressions Defined in: src/lib/orm/infrastructure/orm.ts:32","title":"exp"},{"location":"source/classes/Orm/#implementation-of","text":"IOrm . exp","title":"Implementation of"},{"location":"source/classes/Orm/#helper","text":"helper : OrmH3lp Defined in: src/lib/orm/infrastructure/orm.ts:36","title":"helper"},{"location":"source/classes/Orm/#language","text":"language : LanguagesService Defined in: src/lib/orm/infrastructure/orm.ts:31","title":"language"},{"location":"source/classes/Orm/#schema","text":"schema : SchemaFacade Defined in: src/lib/orm/infrastructure/orm.ts:33","title":"schema"},{"location":"source/classes/Orm/#implementation-of_1","text":"IOrm . schema","title":"Implementation of"},{"location":"source/classes/Orm/#stage","text":"stage : StageFacade Defined in: src/lib/orm/infrastructure/orm.ts:35","title":"stage"},{"location":"source/classes/Orm/#implementation-of_2","text":"IOrm . stage","title":"Implementation of"},{"location":"source/classes/Orm/#state","text":"state : SchemaState Defined in: src/lib/orm/infrastructure/orm.ts:34","title":"state"},{"location":"source/classes/Orm/#implementation-of_3","text":"IOrm . state","title":"Implementation of"},{"location":"source/classes/Orm/#accessors","text":"","title":"Accessors"},{"location":"source/classes/Orm/#defaultstage","text":"","title":"defaultStage"},{"location":"source/classes/Orm/#get-signature","text":"get defaultStage (): Stage Defined in: src/lib/orm/infrastructure/orm.ts:66","title":"Get Signature"},{"location":"source/classes/Orm/#returns_1","text":"Stage","title":"Returns"},{"location":"source/classes/Orm/#logger","text":"","title":"logger"},{"location":"source/classes/Orm/#get-signature_1","text":"get logger (): Logger Defined in: src/lib/orm/infrastructure/orm.ts:58","title":"Get Signature"},{"location":"source/classes/Orm/#returns_2","text":"Logger","title":"Returns"},{"location":"source/classes/Orm/#set-signature","text":"set logger ( value ): void Defined in: src/lib/orm/infrastructure/orm.ts:62","title":"Set Signature"},{"location":"source/classes/Orm/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Orm/#value","text":"Logger","title":"value"},{"location":"source/classes/Orm/#returns_3","text":"void","title":"Returns"},{"location":"source/classes/Orm/#methods","text":"","title":"Methods"},{"location":"source/classes/Orm/#constraints","text":"","title":"constraints()"},{"location":"source/classes/Orm/#call-signature","text":"constraints ( query ): MetadataConstraint Defined in: src/lib/orm/infrastructure/orm.ts:179 Get constraints of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#returns_4","text":"MetadataConstraint Constraints of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_4","text":"IOrm . constraints","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_1","text":"constraints ( query ): MetadataConstraint Defined in: src/lib/orm/infrastructure/orm.ts:180 Get constraints of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_1","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#returns_5","text":"MetadataConstraint Constraints of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_5","text":"IOrm . constraints","title":"Implementation of"},{"location":"source/classes/Orm/#dialect","text":"dialect ( source ): Dialect Defined in: src/lib/orm/infrastructure/orm.ts:134 Get dialect of source","title":"dialect()"},{"location":"source/classes/Orm/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/Orm/#source","text":"string Name of source","title":"source"},{"location":"source/classes/Orm/#returns_6","text":"Dialect","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_6","text":"IOrm . dialect","title":"Implementation of"},{"location":"source/classes/Orm/#end","text":"end (): Promise \\< void > Defined in: src/lib/orm/infrastructure/orm.ts:116 Frees the resources used, for example the connection pools","title":"end()"},{"location":"source/classes/Orm/#returns_7","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_7","text":"IOrm . end","title":"Implementation of"},{"location":"source/classes/Orm/#execute","text":"","title":"execute()"},{"location":"source/classes/Orm/#call-signature_2","text":"execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/infrastructure/orm.ts:218 Execute query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_2","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#data","text":"any Data with variables","title":"data?"},{"location":"source/classes/Orm/#options","text":"QueryOptions options of execution","title":"options?"},{"location":"source/classes/Orm/#returns_8","text":"Promise \\< any > Result of execution","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_8","text":"IOrm . execute","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_3","text":"execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/infrastructure/orm.ts:219 Execute query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_3","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#data_1","text":"any Data with variables","title":"data?"},{"location":"source/classes/Orm/#options_1","text":"QueryOptions options of execution","title":"options?"},{"location":"source/classes/Orm/#returns_9","text":"Promise \\< any > Result of execution","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_9","text":"IOrm . execute","title":"Implementation of"},{"location":"source/classes/Orm/#init","text":"init ( source? , connect? ): Promise \\< Schema > Defined in: src/lib/orm/infrastructure/orm.ts:75 initialize the orm library","title":"init()"},{"location":"source/classes/Orm/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/Orm/#source_1","text":"optional parameter to specify the location of the configuration file. In the case that it is not passed, it is assumed that it is \"lambdaORM.yaml\" in the root of the project string | Schema","title":"source?"},{"location":"source/classes/Orm/#connect","text":"boolean = true","title":"connect?"},{"location":"source/classes/Orm/#returns_10","text":"Promise \\< Schema > promise void","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_10","text":"IOrm . init","title":"Implementation of"},{"location":"source/classes/Orm/#metadata","text":"","title":"metadata()"},{"location":"source/classes/Orm/#call-signature_4","text":"metadata ( query ): Metadata Defined in: src/lib/orm/infrastructure/orm.ts:191 Get metadata of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_4","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#returns_11","text":"Metadata metadata of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_11","text":"IOrm . metadata","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_5","text":"metadata ( query ): Metadata Defined in: src/lib/orm/infrastructure/orm.ts:192 Get metadata of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_5","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#returns_12","text":"Metadata metadata of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_12","text":"IOrm . metadata","title":"Implementation of"},{"location":"source/classes/Orm/#model","text":"","title":"model()"},{"location":"source/classes/Orm/#call-signature_6","text":"model ( query ): MetadataModel [] Defined in: src/lib/orm/infrastructure/orm.ts:155 Get model of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_6","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#returns_13","text":"MetadataModel [] Model of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_13","text":"IOrm . model","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_7","text":"model ( query ): MetadataModel [] Defined in: src/lib/orm/infrastructure/orm.ts:156 Get model of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_7","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#returns_14","text":"MetadataModel [] Model of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_14","text":"IOrm . model","title":"Implementation of"},{"location":"source/classes/Orm/#normalize","text":"","title":"normalize()"},{"location":"source/classes/Orm/#call-signature_8","text":"normalize ( query ): string Defined in: src/lib/orm/infrastructure/orm.ts:143 Normalize query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_8","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#returns_15","text":"string Expression normalized","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_15","text":"IOrm . normalize","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_9","text":"normalize ( query ): string Defined in: src/lib/orm/infrastructure/orm.ts:144 Normalize query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_9","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#returns_16","text":"string Expression normalized","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_16","text":"IOrm . normalize","title":"Implementation of"},{"location":"source/classes/Orm/#parameters_14","text":"","title":"parameters()"},{"location":"source/classes/Orm/#call-signature_10","text":"parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/infrastructure/orm.ts:167 Get parameters of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_15","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_10","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#returns_17","text":"MetadataParameter [] Parameters of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_17","text":"IOrm . parameters","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_11","text":"parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/infrastructure/orm.ts:168 Get parameters of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_16","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_11","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#returns_18","text":"MetadataParameter [] Parameters of query","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_18","text":"IOrm . parameters","title":"Implementation of"},{"location":"source/classes/Orm/#plan","text":"","title":"plan()"},{"location":"source/classes/Orm/#call-signature_12","text":"plan ( query , options? ): QueryPlan Defined in: src/lib/orm/infrastructure/orm.ts:203 Get getInfo of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_17","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_12","text":"Function query expression","title":"query"},{"location":"source/classes/Orm/#options_2","text":"QueryOptions options of execution","title":"options?"},{"location":"source/classes/Orm/#returns_19","text":"QueryPlan","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_19","text":"IOrm . plan","title":"Implementation of"},{"location":"source/classes/Orm/#call-signature_13","text":"plan ( query , options? ): QueryPlan Defined in: src/lib/orm/infrastructure/orm.ts:204 Get getInfo of query","title":"Call Signature"},{"location":"source/classes/Orm/#parameters_18","text":"","title":"Parameters"},{"location":"source/classes/Orm/#query_13","text":"string query expression","title":"query"},{"location":"source/classes/Orm/#options_3","text":"QueryOptions options of execution","title":"options?"},{"location":"source/classes/Orm/#returns_20","text":"QueryPlan","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_20","text":"IOrm . plan","title":"Implementation of"},{"location":"source/classes/Orm/#subscribe","text":"subscribe ( observer ): void Defined in: src/lib/orm/infrastructure/orm.ts:246","title":"subscribe()"},{"location":"source/classes/Orm/#parameters_19","text":"","title":"Parameters"},{"location":"source/classes/Orm/#observer","text":"ActionObserver","title":"observer"},{"location":"source/classes/Orm/#returns_21","text":"void","title":"Returns"},{"location":"source/classes/Orm/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/orm/infrastructure/orm.ts:238 Create a transaction","title":"transaction()"},{"location":"source/classes/Orm/#parameters_20","text":"","title":"Parameters"},{"location":"source/classes/Orm/#options_4","text":"options of execution undefined | QueryOptions","title":"options"},{"location":"source/classes/Orm/#callback","text":"( tr ) => Promise \\< void > Code to be executed in transaction","title":"callback"},{"location":"source/classes/Orm/#returns_22","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/Orm/#implementation-of_21","text":"IOrm . transaction","title":"Implementation of"},{"location":"source/classes/Orm/#unsubscribe","text":"unsubscribe ( observer ): void Defined in: src/lib/orm/infrastructure/orm.ts:250","title":"unsubscribe()"},{"location":"source/classes/Orm/#parameters_21","text":"","title":"Parameters"},{"location":"source/classes/Orm/#observer_1","text":"ActionObserver","title":"observer"},{"location":"source/classes/Orm/#returns_23","text":"void","title":"Returns"},{"location":"source/classes/OrmBaseH3lp/","text":"Lambda ORM Lambda ORM / OrmBaseH3lp Class: OrmBaseH3lp Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:33 Extends ExprH3lp Extended by OrmH3lp Constructors Constructor new OrmBaseH3lp ( h3lp , logger ): OrmBaseH3lp Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:39 Parameters h3lp H3lp logger Logger Returns OrmBaseH3lp Overrides ExprH3lp.constructor Properties array readonly array : IArrayHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:10 Inherited from ExprH3lp.array expression expression : ExpressionHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:5 Inherited from ExprH3lp.expression fs readonly fs : IFsHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:5 Inherited from ExprH3lp.fs http readonly http : IHttpHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:6 Inherited from ExprH3lp.http logger readonly logger : Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:34 obj readonly obj : IObjectHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:7 Inherited from ExprH3lp.obj operand operand : OperandHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:6 Inherited from ExprH3lp.operand query query : QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:37 schema schema : SchemaHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:35 str readonly str : IStringHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:8 Inherited from ExprH3lp.str test readonly test : ITestHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:9 Inherited from ExprH3lp.test utils readonly utils : IUtils Defined in: node_modules/h3lp/application/h3lp.d.ts:3 Inherited from ExprH3lp.utils uuid uuid : UUIDWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:38 val readonly val : IValidator Defined in: node_modules/h3lp/application/h3lp.d.ts:4 Inherited from ExprH3lp.val yaml yaml : YamlWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:36","title":"OrmBaseH3lp"},{"location":"source/classes/OrmBaseH3lp/#class-ormbaseh3lp","text":"Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:33","title":"Class: OrmBaseH3lp"},{"location":"source/classes/OrmBaseH3lp/#extends","text":"ExprH3lp","title":"Extends"},{"location":"source/classes/OrmBaseH3lp/#extended-by","text":"OrmH3lp","title":"Extended by"},{"location":"source/classes/OrmBaseH3lp/#constructors","text":"","title":"Constructors"},{"location":"source/classes/OrmBaseH3lp/#constructor","text":"new OrmBaseH3lp ( h3lp , logger ): OrmBaseH3lp Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:39","title":"Constructor"},{"location":"source/classes/OrmBaseH3lp/#parameters","text":"","title":"Parameters"},{"location":"source/classes/OrmBaseH3lp/#h3lp","text":"H3lp","title":"h3lp"},{"location":"source/classes/OrmBaseH3lp/#logger","text":"Logger","title":"logger"},{"location":"source/classes/OrmBaseH3lp/#returns","text":"OrmBaseH3lp","title":"Returns"},{"location":"source/classes/OrmBaseH3lp/#overrides","text":"ExprH3lp.constructor","title":"Overrides"},{"location":"source/classes/OrmBaseH3lp/#properties","text":"","title":"Properties"},{"location":"source/classes/OrmBaseH3lp/#array","text":"readonly array : IArrayHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:10","title":"array"},{"location":"source/classes/OrmBaseH3lp/#inherited-from","text":"ExprH3lp.array","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#expression","text":"expression : ExpressionHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:5","title":"expression"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_1","text":"ExprH3lp.expression","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#fs","text":"readonly fs : IFsHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:5","title":"fs"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_2","text":"ExprH3lp.fs","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#http","text":"readonly http : IHttpHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:6","title":"http"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_3","text":"ExprH3lp.http","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#logger_1","text":"readonly logger : Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:34","title":"logger"},{"location":"source/classes/OrmBaseH3lp/#obj","text":"readonly obj : IObjectHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:7","title":"obj"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_4","text":"ExprH3lp.obj","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#operand","text":"operand : OperandHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:6","title":"operand"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_5","text":"ExprH3lp.operand","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#query","text":"query : QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:37","title":"query"},{"location":"source/classes/OrmBaseH3lp/#schema","text":"schema : SchemaHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:35","title":"schema"},{"location":"source/classes/OrmBaseH3lp/#str","text":"readonly str : IStringHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:8","title":"str"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_6","text":"ExprH3lp.str","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#test","text":"readonly test : ITestHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:9","title":"test"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_7","text":"ExprH3lp.test","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#utils","text":"readonly utils : IUtils Defined in: node_modules/h3lp/application/h3lp.d.ts:3","title":"utils"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_8","text":"ExprH3lp.utils","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#uuid","text":"uuid : UUIDWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:38","title":"uuid"},{"location":"source/classes/OrmBaseH3lp/#val","text":"readonly val : IValidator Defined in: node_modules/h3lp/application/h3lp.d.ts:4","title":"val"},{"location":"source/classes/OrmBaseH3lp/#inherited-from_9","text":"ExprH3lp.val","title":"Inherited from"},{"location":"source/classes/OrmBaseH3lp/#yaml","text":"yaml : YamlWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:36","title":"yaml"},{"location":"source/classes/OrmH3lp/","text":"Lambda ORM Lambda ORM / OrmH3lp Class: OrmH3lp Defined in: src/lib/shared/infrastructure/helper.ts:23 Extends OrmBaseH3lp Constructors Constructor new OrmH3lp ( h3lp , logger ): OrmH3lp Defined in: src/lib/shared/infrastructure/helper.ts:25 Parameters h3lp H3lp logger Logger Returns OrmH3lp Overrides OrmBaseH3lp . constructor Properties array readonly array : IArrayHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:10 Inherited from OrmBaseH3lp . array crypto crypto : CryptoHelper Defined in: src/lib/shared/infrastructure/helper.ts:24 expression expression : ExpressionHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:5 Inherited from OrmBaseH3lp . expression fs readonly fs : IFsHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:5 Inherited from OrmBaseH3lp . fs http readonly http : IHttpHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:6 Inherited from OrmBaseH3lp . http logger readonly logger : Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:34 Inherited from OrmBaseH3lp . logger obj readonly obj : IObjectHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:7 Inherited from OrmBaseH3lp . obj operand operand : OperandHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:6 Inherited from OrmBaseH3lp . operand query query : QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:37 Inherited from OrmBaseH3lp . query schema schema : SchemaHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:35 Inherited from OrmBaseH3lp . schema str readonly str : IStringHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:8 Inherited from OrmBaseH3lp . str test readonly test : ITestHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:9 Inherited from OrmBaseH3lp . test utils readonly utils : IUtils Defined in: node_modules/h3lp/application/h3lp.d.ts:3 Inherited from OrmBaseH3lp . utils uuid uuid : UUIDWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:38 Inherited from OrmBaseH3lp . uuid val readonly val : IValidator Defined in: node_modules/h3lp/application/h3lp.d.ts:4 Inherited from OrmBaseH3lp . val yaml yaml : YamlWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:36 Inherited from OrmBaseH3lp . yaml","title":"OrmH3lp"},{"location":"source/classes/OrmH3lp/#class-ormh3lp","text":"Defined in: src/lib/shared/infrastructure/helper.ts:23","title":"Class: OrmH3lp"},{"location":"source/classes/OrmH3lp/#extends","text":"OrmBaseH3lp","title":"Extends"},{"location":"source/classes/OrmH3lp/#constructors","text":"","title":"Constructors"},{"location":"source/classes/OrmH3lp/#constructor","text":"new OrmH3lp ( h3lp , logger ): OrmH3lp Defined in: src/lib/shared/infrastructure/helper.ts:25","title":"Constructor"},{"location":"source/classes/OrmH3lp/#parameters","text":"","title":"Parameters"},{"location":"source/classes/OrmH3lp/#h3lp","text":"H3lp","title":"h3lp"},{"location":"source/classes/OrmH3lp/#logger","text":"Logger","title":"logger"},{"location":"source/classes/OrmH3lp/#returns","text":"OrmH3lp","title":"Returns"},{"location":"source/classes/OrmH3lp/#overrides","text":"OrmBaseH3lp . constructor","title":"Overrides"},{"location":"source/classes/OrmH3lp/#properties","text":"","title":"Properties"},{"location":"source/classes/OrmH3lp/#array","text":"readonly array : IArrayHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:10","title":"array"},{"location":"source/classes/OrmH3lp/#inherited-from","text":"OrmBaseH3lp . array","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#crypto","text":"crypto : CryptoHelper Defined in: src/lib/shared/infrastructure/helper.ts:24","title":"crypto"},{"location":"source/classes/OrmH3lp/#expression","text":"expression : ExpressionHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:5","title":"expression"},{"location":"source/classes/OrmH3lp/#inherited-from_1","text":"OrmBaseH3lp . expression","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#fs","text":"readonly fs : IFsHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:5","title":"fs"},{"location":"source/classes/OrmH3lp/#inherited-from_2","text":"OrmBaseH3lp . fs","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#http","text":"readonly http : IHttpHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:6","title":"http"},{"location":"source/classes/OrmH3lp/#inherited-from_3","text":"OrmBaseH3lp . http","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#logger_1","text":"readonly logger : Logger Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:34","title":"logger"},{"location":"source/classes/OrmH3lp/#inherited-from_4","text":"OrmBaseH3lp . logger","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#obj","text":"readonly obj : IObjectHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:7","title":"obj"},{"location":"source/classes/OrmH3lp/#inherited-from_5","text":"OrmBaseH3lp . obj","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#operand","text":"operand : OperandHelper Defined in: node_modules/3xpr/shared/infrastructure/helper.d.ts:6","title":"operand"},{"location":"source/classes/OrmH3lp/#inherited-from_6","text":"OrmBaseH3lp . operand","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#query","text":"query : QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:37","title":"query"},{"location":"source/classes/OrmH3lp/#inherited-from_7","text":"OrmBaseH3lp . query","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#schema","text":"schema : SchemaHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:35","title":"schema"},{"location":"source/classes/OrmH3lp/#inherited-from_8","text":"OrmBaseH3lp . schema","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#str","text":"readonly str : IStringHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:8","title":"str"},{"location":"source/classes/OrmH3lp/#inherited-from_9","text":"OrmBaseH3lp . str","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#test","text":"readonly test : ITestHelper Defined in: node_modules/h3lp/application/h3lp.d.ts:9","title":"test"},{"location":"source/classes/OrmH3lp/#inherited-from_10","text":"OrmBaseH3lp . test","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#utils","text":"readonly utils : IUtils Defined in: node_modules/h3lp/application/h3lp.d.ts:3","title":"utils"},{"location":"source/classes/OrmH3lp/#inherited-from_11","text":"OrmBaseH3lp . utils","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#uuid","text":"uuid : UUIDWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:38","title":"uuid"},{"location":"source/classes/OrmH3lp/#inherited-from_12","text":"OrmBaseH3lp . uuid","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#val","text":"readonly val : IValidator Defined in: node_modules/h3lp/application/h3lp.d.ts:4","title":"val"},{"location":"source/classes/OrmH3lp/#inherited-from_13","text":"OrmBaseH3lp . val","title":"Inherited from"},{"location":"source/classes/OrmH3lp/#yaml","text":"yaml : YamlWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:36","title":"yaml"},{"location":"source/classes/OrmH3lp/#inherited-from_14","text":"OrmBaseH3lp . yaml","title":"Inherited from"},{"location":"source/classes/OrmOperandHelper/","text":"Lambda ORM Lambda ORM / OrmOperandHelper Class: OrmOperandHelper Defined in: src/lib/operand/application/services/operandHelper.ts:3 Constructors Constructor new OrmOperandHelper ( operandHelper ): OrmOperandHelper Defined in: src/lib/operand/application/services/operandHelper.ts:5 Parameters operandHelper OperandHelper Returns OrmOperandHelper Methods getClauses() getClauses ( operand ): any Defined in: src/lib/operand/application/services/operandHelper.ts:65 Parameters operand Operand Returns any toExpression() toExpression ( operand ): string Defined in: src/lib/operand/application/services/operandHelper.ts:7 Parameters operand Operand Returns string","title":"OrmOperandHelper"},{"location":"source/classes/OrmOperandHelper/#class-ormoperandhelper","text":"Defined in: src/lib/operand/application/services/operandHelper.ts:3","title":"Class: OrmOperandHelper"},{"location":"source/classes/OrmOperandHelper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/OrmOperandHelper/#constructor","text":"new OrmOperandHelper ( operandHelper ): OrmOperandHelper Defined in: src/lib/operand/application/services/operandHelper.ts:5","title":"Constructor"},{"location":"source/classes/OrmOperandHelper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/OrmOperandHelper/#operandhelper","text":"OperandHelper","title":"operandHelper"},{"location":"source/classes/OrmOperandHelper/#returns","text":"OrmOperandHelper","title":"Returns"},{"location":"source/classes/OrmOperandHelper/#methods","text":"","title":"Methods"},{"location":"source/classes/OrmOperandHelper/#getclauses","text":"getClauses ( operand ): any Defined in: src/lib/operand/application/services/operandHelper.ts:65","title":"getClauses()"},{"location":"source/classes/OrmOperandHelper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/OrmOperandHelper/#operand","text":"Operand","title":"operand"},{"location":"source/classes/OrmOperandHelper/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/OrmOperandHelper/#toexpression","text":"toExpression ( operand ): string Defined in: src/lib/operand/application/services/operandHelper.ts:7","title":"toExpression()"},{"location":"source/classes/OrmOperandHelper/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/OrmOperandHelper/#operand_1","text":"Operand","title":"operand"},{"location":"source/classes/OrmOperandHelper/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/Page/","text":"Lambda ORM Lambda ORM / Page Class: Page Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:32 Extends Clause Constructors Constructor new Page ( pos , name , children , entity , alias ): Page Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Page Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Page"},{"location":"source/classes/Page/#class-page","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:32","title":"Class: Page"},{"location":"source/classes/Page/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Page/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Page/#constructor","text":"new Page ( pos , name , children , entity , alias ): Page Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Page/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Page/#pos","text":"Position","title":"pos"},{"location":"source/classes/Page/#name","text":"string","title":"name"},{"location":"source/classes/Page/#children","text":"Operand []","title":"children"},{"location":"source/classes/Page/#entity","text":"string","title":"entity"},{"location":"source/classes/Page/#alias","text":"string","title":"alias"},{"location":"source/classes/Page/#returns","text":"Page","title":"Returns"},{"location":"source/classes/Page/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Page/#properties","text":"","title":"Properties"},{"location":"source/classes/Page/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Page/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Page/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Page/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Page/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Page/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Page/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Page/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Page/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Page/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Page/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Page/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Page/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Page/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Page/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Page/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Page/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Page/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Page/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Page/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Page/#methods","text":"","title":"Methods"},{"location":"source/classes/Page/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Page/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Page/#context","text":"Context","title":"context"},{"location":"source/classes/Page/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Page/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Page/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Page/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Page/#context_1","text":"Context","title":"context"},{"location":"source/classes/Page/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Page/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Page/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Page/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Page/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Page/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Page/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Page/#context_2","text":"Context","title":"context"},{"location":"source/classes/Page/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Page/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/PageClauses/","text":"Lambda ORM Lambda ORM / PageClauses Class: PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:16 Extends QueryAction Extended by MapClauses Constructors Constructor new PageClauses ( actions , query ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns PageClauses Inherited from QueryAction . constructor Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from QueryAction . constraints execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from QueryAction . execute metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from QueryAction . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from QueryAction . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from QueryAction . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from QueryAction . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from QueryAction . sentence","title":"PageClauses"},{"location":"source/classes/PageClauses/#class-pageclauses","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:16","title":"Class: PageClauses"},{"location":"source/classes/PageClauses/#extends","text":"QueryAction","title":"Extends"},{"location":"source/classes/PageClauses/#extended-by","text":"MapClauses","title":"Extended by"},{"location":"source/classes/PageClauses/#constructors","text":"","title":"Constructors"},{"location":"source/classes/PageClauses/#constructor","text":"new PageClauses ( actions , query ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/PageClauses/#parameters","text":"","title":"Parameters"},{"location":"source/classes/PageClauses/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/PageClauses/#query","text":"string","title":"query"},{"location":"source/classes/PageClauses/#returns","text":"PageClauses","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from","text":"QueryAction . constructor","title":"Inherited from"},{"location":"source/classes/PageClauses/#methods","text":"","title":"Methods"},{"location":"source/classes/PageClauses/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/PageClauses/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_1","text":"QueryAction . constraints","title":"Inherited from"},{"location":"source/classes/PageClauses/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/PageClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/PageClauses/#data","text":"any","title":"data"},{"location":"source/classes/PageClauses/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_2","text":"QueryAction . execute","title":"Inherited from"},{"location":"source/classes/PageClauses/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/PageClauses/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_3","text":"QueryAction . metadata","title":"Inherited from"},{"location":"source/classes/PageClauses/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/PageClauses/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_4","text":"QueryAction . model","title":"Inherited from"},{"location":"source/classes/PageClauses/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/PageClauses/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_5","text":"QueryAction . normalize","title":"Inherited from"},{"location":"source/classes/PageClauses/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/PageClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/PageClauses/#page_1","text":"number","title":"page"},{"location":"source/classes/PageClauses/#records","text":"number","title":"records"},{"location":"source/classes/PageClauses/#returns_6","text":"QueryAction","title":"Returns"},{"location":"source/classes/PageClauses/#parameters_3","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/PageClauses/#returns_7","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_6","text":"QueryAction . parameters","title":"Inherited from"},{"location":"source/classes/PageClauses/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/PageClauses/#returns_8","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/PageClauses/#inherited-from_7","text":"QueryAction . sentence","title":"Inherited from"},{"location":"source/classes/Query/","text":"Lambda ORM Lambda ORM / Query Class: Query Defined in: src/lib/query/domain/query.ts:22 Constructors Constructor new Query ( args ): Query Defined in: src/lib/query/domain/query.ts:39 Parameters args QueryArgs Returns Query Properties action action : SentenceAction Defined in: src/lib/query/domain/query.ts:23 category category : SentenceCategory Defined in: src/lib/query/domain/query.ts:25 columns columns : Property [] Defined in: src/lib/query/domain/query.ts:32 constraints constraints : Constraint [] Defined in: src/lib/query/domain/query.ts:34 defaults defaults : Behavior [] Defined in: src/lib/query/domain/query.ts:36 description description : string Defined in: src/lib/query/domain/query.ts:38 dialect dialect : string Defined in: src/lib/query/domain/query.ts:29 entity entity : string Defined in: src/lib/query/domain/query.ts:31 includes includes : Include [] Defined in: src/lib/query/domain/query.ts:27 parameters parameters : Parameter [] Defined in: src/lib/query/domain/query.ts:33 query query : string Defined in: src/lib/query/domain/query.ts:37 sentence sentence : string Defined in: src/lib/query/domain/query.ts:28 source source : string Defined in: src/lib/query/domain/query.ts:30 type type : SentenceType Defined in: src/lib/query/domain/query.ts:24 values values : Behavior [] Defined in: src/lib/query/domain/query.ts:35","title":"Query"},{"location":"source/classes/Query/#class-query","text":"Defined in: src/lib/query/domain/query.ts:22","title":"Class: Query"},{"location":"source/classes/Query/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Query/#constructor","text":"new Query ( args ): Query Defined in: src/lib/query/domain/query.ts:39","title":"Constructor"},{"location":"source/classes/Query/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Query/#args","text":"QueryArgs","title":"args"},{"location":"source/classes/Query/#returns","text":"Query","title":"Returns"},{"location":"source/classes/Query/#properties","text":"","title":"Properties"},{"location":"source/classes/Query/#action","text":"action : SentenceAction Defined in: src/lib/query/domain/query.ts:23","title":"action"},{"location":"source/classes/Query/#category","text":"category : SentenceCategory Defined in: src/lib/query/domain/query.ts:25","title":"category"},{"location":"source/classes/Query/#columns","text":"columns : Property [] Defined in: src/lib/query/domain/query.ts:32","title":"columns"},{"location":"source/classes/Query/#constraints","text":"constraints : Constraint [] Defined in: src/lib/query/domain/query.ts:34","title":"constraints"},{"location":"source/classes/Query/#defaults","text":"defaults : Behavior [] Defined in: src/lib/query/domain/query.ts:36","title":"defaults"},{"location":"source/classes/Query/#description","text":"description : string Defined in: src/lib/query/domain/query.ts:38","title":"description"},{"location":"source/classes/Query/#dialect","text":"dialect : string Defined in: src/lib/query/domain/query.ts:29","title":"dialect"},{"location":"source/classes/Query/#entity","text":"entity : string Defined in: src/lib/query/domain/query.ts:31","title":"entity"},{"location":"source/classes/Query/#includes","text":"includes : Include [] Defined in: src/lib/query/domain/query.ts:27","title":"includes"},{"location":"source/classes/Query/#parameters_1","text":"parameters : Parameter [] Defined in: src/lib/query/domain/query.ts:33","title":"parameters"},{"location":"source/classes/Query/#query","text":"query : string Defined in: src/lib/query/domain/query.ts:37","title":"query"},{"location":"source/classes/Query/#sentence","text":"sentence : string Defined in: src/lib/query/domain/query.ts:28","title":"sentence"},{"location":"source/classes/Query/#source","text":"source : string Defined in: src/lib/query/domain/query.ts:30","title":"source"},{"location":"source/classes/Query/#type","text":"type : SentenceType Defined in: src/lib/query/domain/query.ts:24","title":"type"},{"location":"source/classes/Query/#values","text":"values : Behavior [] Defined in: src/lib/query/domain/query.ts:35","title":"values"},{"location":"source/classes/QueryAction/","text":"Lambda ORM Lambda ORM / QueryAction Class: QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:4 Extended by PageClauses Map2Clauses FilterAction IncludeAction ModificableClauses Constructors Constructor new QueryAction ( actions , query ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns QueryAction Methods constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan >","title":"QueryAction"},{"location":"source/classes/QueryAction/#class-queryaction","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:4","title":"Class: QueryAction"},{"location":"source/classes/QueryAction/#extended-by","text":"PageClauses Map2Clauses FilterAction IncludeAction ModificableClauses","title":"Extended by"},{"location":"source/classes/QueryAction/#constructors","text":"","title":"Constructors"},{"location":"source/classes/QueryAction/#constructor","text":"new QueryAction ( actions , query ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/QueryAction/#parameters","text":"","title":"Parameters"},{"location":"source/classes/QueryAction/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/QueryAction/#query","text":"string","title":"query"},{"location":"source/classes/QueryAction/#returns","text":"QueryAction","title":"Returns"},{"location":"source/classes/QueryAction/#methods","text":"","title":"Methods"},{"location":"source/classes/QueryAction/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/QueryAction/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/QueryAction/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/QueryAction/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/QueryAction/#data","text":"any","title":"data"},{"location":"source/classes/QueryAction/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryAction/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/QueryAction/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/QueryAction/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/QueryAction/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/QueryAction/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/QueryAction/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/QueryAction/#parameters_2","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/QueryAction/#returns_6","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/QueryAction/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/QueryAction/#returns_7","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/QueryActionsImpl/","text":"Lambda ORM Lambda ORM / QueryActionsImpl Class: QueryActionsImpl Defined in: src/lib/repository/domain/actions.ts:3 Implements QueryActions Constructors Constructor new QueryActionsImpl ( name , orm , stage? ): QueryActionsImpl Defined in: src/lib/repository/domain/actions.ts:7 Parameters name string orm IOrm stage? string Returns QueryActionsImpl Methods constraints() constraints ( query ): Promise \\< MetadataConstraint > Defined in: src/lib/repository/domain/actions.ts:29 Parameters query string Returns Promise \\< MetadataConstraint > Implementation of QueryActions . constraints execute() execute ( query , data ): Promise \\< any > Defined in: src/lib/repository/domain/actions.ts:13 Parameters query string data any Returns Promise \\< any > Implementation of QueryActions . execute metadata() metadata ( query ): Promise \\< Metadata > Defined in: src/lib/repository/domain/actions.ts:33 Parameters query string Returns Promise \\< Metadata > Implementation of QueryActions . metadata model() model ( query ): Promise \\< MetadataModel []> Defined in: src/lib/repository/domain/actions.ts:21 Parameters query string Returns Promise \\< MetadataModel []> Implementation of QueryActions . model normalize() normalize ( query ): string Defined in: src/lib/repository/domain/actions.ts:17 Parameters query string Returns string Implementation of QueryActions . normalize parameters() parameters ( query ): Promise \\< MetadataParameter []> Defined in: src/lib/repository/domain/actions.ts:25 Parameters query string Returns Promise \\< MetadataParameter []> Implementation of QueryActions . parameters plan() plan ( query ): Promise \\< QueryPlan > Defined in: src/lib/repository/domain/actions.ts:37 Parameters query string Returns Promise \\< QueryPlan > Implementation of QueryActions . plan","title":"QueryActionsImpl"},{"location":"source/classes/QueryActionsImpl/#class-queryactionsimpl","text":"Defined in: src/lib/repository/domain/actions.ts:3","title":"Class: QueryActionsImpl"},{"location":"source/classes/QueryActionsImpl/#implements","text":"QueryActions","title":"Implements"},{"location":"source/classes/QueryActionsImpl/#constructors","text":"","title":"Constructors"},{"location":"source/classes/QueryActionsImpl/#constructor","text":"new QueryActionsImpl ( name , orm , stage? ): QueryActionsImpl Defined in: src/lib/repository/domain/actions.ts:7","title":"Constructor"},{"location":"source/classes/QueryActionsImpl/#parameters","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#name","text":"string","title":"name"},{"location":"source/classes/QueryActionsImpl/#orm","text":"IOrm","title":"orm"},{"location":"source/classes/QueryActionsImpl/#stage","text":"string","title":"stage?"},{"location":"source/classes/QueryActionsImpl/#returns","text":"QueryActionsImpl","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#methods","text":"","title":"Methods"},{"location":"source/classes/QueryActionsImpl/#constraints","text":"constraints ( query ): Promise \\< MetadataConstraint > Defined in: src/lib/repository/domain/actions.ts:29","title":"constraints()"},{"location":"source/classes/QueryActionsImpl/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_1","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of","text":"QueryActions . constraints","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#execute","text":"execute ( query , data ): Promise \\< any > Defined in: src/lib/repository/domain/actions.ts:13","title":"execute()"},{"location":"source/classes/QueryActionsImpl/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_1","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#data","text":"any","title":"data"},{"location":"source/classes/QueryActionsImpl/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_1","text":"QueryActions . execute","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#metadata","text":"metadata ( query ): Promise \\< Metadata > Defined in: src/lib/repository/domain/actions.ts:33","title":"metadata()"},{"location":"source/classes/QueryActionsImpl/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_2","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_3","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_2","text":"QueryActions . metadata","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#model","text":"model ( query ): Promise \\< MetadataModel []> Defined in: src/lib/repository/domain/actions.ts:21","title":"model()"},{"location":"source/classes/QueryActionsImpl/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_3","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_4","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_3","text":"QueryActions . model","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#normalize","text":"normalize ( query ): string Defined in: src/lib/repository/domain/actions.ts:17","title":"normalize()"},{"location":"source/classes/QueryActionsImpl/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_4","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_4","text":"QueryActions . normalize","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#parameters_6","text":"parameters ( query ): Promise \\< MetadataParameter []> Defined in: src/lib/repository/domain/actions.ts:25","title":"parameters()"},{"location":"source/classes/QueryActionsImpl/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_5","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_6","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_5","text":"QueryActions . parameters","title":"Implementation of"},{"location":"source/classes/QueryActionsImpl/#plan","text":"plan ( query ): Promise \\< QueryPlan > Defined in: src/lib/repository/domain/actions.ts:37","title":"plan()"},{"location":"source/classes/QueryActionsImpl/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/QueryActionsImpl/#query_6","text":"string","title":"query"},{"location":"source/classes/QueryActionsImpl/#returns_7","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/QueryActionsImpl/#implementation-of_6","text":"QueryActions . plan","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/","text":"Lambda ORM Lambda ORM / QueryExecutorImpl Class: QueryExecutorImpl Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:20 Implements QueryExecutor QueryInternalExecutor Constructors Constructor new QueryExecutorImpl ( connectionFacade , languages , schemaState , expressions , _options , helper , transactional ): QueryExecutorImpl Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:32 Parameters connectionFacade ConnectionFacade languages LanguagesService schemaState SchemaState expressions Expressions _options QueryOptions helper OrmH3lp transactional boolean = false Returns QueryExecutorImpl Accessors options Get Signature get options (): QueryOptions Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:53 Returns QueryOptions Implementation of QueryExecutor . options Methods _execute() _execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:122 Parameters query Query data Data Returns Promise \\< any > Implementation of QueryInternalExecutor . _execute commit() commit (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:69 Returns Promise \\< void > Implementation of QueryExecutor . commit execute() execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:91 Parameters query Query data any Returns Promise \\< any > Implementation of QueryExecutor . execute release() release (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:83 Returns Promise \\< void > Implementation of QueryExecutor . release rollback() rollback (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:76 Returns Promise \\< void > Implementation of QueryExecutor . rollback","title":"QueryExecutorImpl"},{"location":"source/classes/QueryExecutorImpl/#class-queryexecutorimpl","text":"Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:20","title":"Class: QueryExecutorImpl"},{"location":"source/classes/QueryExecutorImpl/#implements","text":"QueryExecutor QueryInternalExecutor","title":"Implements"},{"location":"source/classes/QueryExecutorImpl/#constructors","text":"","title":"Constructors"},{"location":"source/classes/QueryExecutorImpl/#constructor","text":"new QueryExecutorImpl ( connectionFacade , languages , schemaState , expressions , _options , helper , transactional ): QueryExecutorImpl Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:32","title":"Constructor"},{"location":"source/classes/QueryExecutorImpl/#parameters","text":"","title":"Parameters"},{"location":"source/classes/QueryExecutorImpl/#connectionfacade","text":"ConnectionFacade","title":"connectionFacade"},{"location":"source/classes/QueryExecutorImpl/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/QueryExecutorImpl/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/QueryExecutorImpl/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/QueryExecutorImpl/#_options","text":"QueryOptions","title":"_options"},{"location":"source/classes/QueryExecutorImpl/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/QueryExecutorImpl/#transactional","text":"boolean = false","title":"transactional"},{"location":"source/classes/QueryExecutorImpl/#returns","text":"QueryExecutorImpl","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#accessors","text":"","title":"Accessors"},{"location":"source/classes/QueryExecutorImpl/#options","text":"","title":"options"},{"location":"source/classes/QueryExecutorImpl/#get-signature","text":"get options (): QueryOptions Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:53","title":"Get Signature"},{"location":"source/classes/QueryExecutorImpl/#returns_1","text":"QueryOptions","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of","text":"QueryExecutor . options","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/#methods","text":"","title":"Methods"},{"location":"source/classes/QueryExecutorImpl/#_execute","text":"_execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:122","title":"_execute()"},{"location":"source/classes/QueryExecutorImpl/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/QueryExecutorImpl/#query","text":"Query","title":"query"},{"location":"source/classes/QueryExecutorImpl/#data","text":"Data","title":"data"},{"location":"source/classes/QueryExecutorImpl/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of_1","text":"QueryInternalExecutor . _execute","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/#commit","text":"commit (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:69","title":"commit()"},{"location":"source/classes/QueryExecutorImpl/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of_2","text":"QueryExecutor . commit","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/#execute","text":"execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:91","title":"execute()"},{"location":"source/classes/QueryExecutorImpl/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/QueryExecutorImpl/#query_1","text":"Query","title":"query"},{"location":"source/classes/QueryExecutorImpl/#data_1","text":"any","title":"data"},{"location":"source/classes/QueryExecutorImpl/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of_3","text":"QueryExecutor . execute","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/#release","text":"release (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:83","title":"release()"},{"location":"source/classes/QueryExecutorImpl/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of_4","text":"QueryExecutor . release","title":"Implementation of"},{"location":"source/classes/QueryExecutorImpl/#rollback","text":"rollback (): Promise \\< void > Defined in: src/lib/execution/application/services/queryExecutor/queryExecutor.ts:76","title":"rollback()"},{"location":"source/classes/QueryExecutorImpl/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/QueryExecutorImpl/#implementation-of_5","text":"QueryExecutor . rollback","title":"Implementation of"},{"location":"source/classes/QueryHelper/","text":"Lambda ORM Lambda ORM / QueryHelper Class: QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:10 Constructors Constructor new QueryHelper ( str ): QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:12 Parameters str IStringHelper Returns QueryHelper Methods arrayToList() arrayToList ( array , timeZone ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:15 Parameters array any [] timeZone string Returns string bufferToString() bufferToString ( buffer ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:19 Parameters buffer Buffer Returns string dateFormat() dateFormat ( value , format? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:18 Parameters value any format? string Returns string dateToString() dateToString ( date , timeZone? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:17 Parameters date Date timeZone? string Returns string escape() escape ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:14 Parameters name string Returns string escapeId() escapeId ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:13 Parameters name string Returns string format() format ( sql , values , stringifyObjects , timeZone ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:16 Parameters sql string values any [] stringifyObjects string timeZone string Returns string getInfo() getInfo ( action , entity , type? ): SentenceInfo Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:24 Parameters action SentenceAction entity string type? SentenceType Returns SentenceInfo getSentenceCategory() getSentenceCategory ( action ): SentenceCategory Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:23 Parameters action SentenceAction Returns SentenceCategory getSentenceType() getSentenceType ( action ): SentenceType Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:22 Parameters action SentenceAction Returns SentenceType raw() raw ( sql ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:20 Parameters sql string Returns string transformParameter() transformParameter ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:21 Parameters name string Returns string","title":"QueryHelper"},{"location":"source/classes/QueryHelper/#class-queryhelper","text":"Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:10","title":"Class: QueryHelper"},{"location":"source/classes/QueryHelper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/QueryHelper/#constructor","text":"new QueryHelper ( str ): QueryHelper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:12","title":"Constructor"},{"location":"source/classes/QueryHelper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#str","text":"IStringHelper","title":"str"},{"location":"source/classes/QueryHelper/#returns","text":"QueryHelper","title":"Returns"},{"location":"source/classes/QueryHelper/#methods","text":"","title":"Methods"},{"location":"source/classes/QueryHelper/#arraytolist","text":"arrayToList ( array , timeZone ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:15","title":"arrayToList()"},{"location":"source/classes/QueryHelper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#array","text":"any []","title":"array"},{"location":"source/classes/QueryHelper/#timezone","text":"string","title":"timeZone"},{"location":"source/classes/QueryHelper/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#buffertostring","text":"bufferToString ( buffer ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:19","title":"bufferToString()"},{"location":"source/classes/QueryHelper/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#buffer","text":"Buffer","title":"buffer"},{"location":"source/classes/QueryHelper/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#dateformat","text":"dateFormat ( value , format? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:18","title":"dateFormat()"},{"location":"source/classes/QueryHelper/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#value","text":"any","title":"value"},{"location":"source/classes/QueryHelper/#format","text":"string","title":"format?"},{"location":"source/classes/QueryHelper/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#datetostring","text":"dateToString ( date , timeZone? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:17","title":"dateToString()"},{"location":"source/classes/QueryHelper/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#date","text":"Date","title":"date"},{"location":"source/classes/QueryHelper/#timezone_1","text":"string","title":"timeZone?"},{"location":"source/classes/QueryHelper/#returns_4","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#escape","text":"escape ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:14","title":"escape()"},{"location":"source/classes/QueryHelper/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#name","text":"string","title":"name"},{"location":"source/classes/QueryHelper/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#escapeid","text":"escapeId ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:13","title":"escapeId()"},{"location":"source/classes/QueryHelper/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#name_1","text":"string","title":"name"},{"location":"source/classes/QueryHelper/#returns_6","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#format_1","text":"format ( sql , values , stringifyObjects , timeZone ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:16","title":"format()"},{"location":"source/classes/QueryHelper/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#sql","text":"string","title":"sql"},{"location":"source/classes/QueryHelper/#values","text":"any []","title":"values"},{"location":"source/classes/QueryHelper/#stringifyobjects","text":"string","title":"stringifyObjects"},{"location":"source/classes/QueryHelper/#timezone_2","text":"string","title":"timeZone"},{"location":"source/classes/QueryHelper/#returns_7","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#getinfo","text":"getInfo ( action , entity , type? ): SentenceInfo Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:24","title":"getInfo()"},{"location":"source/classes/QueryHelper/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#action","text":"SentenceAction","title":"action"},{"location":"source/classes/QueryHelper/#entity","text":"string","title":"entity"},{"location":"source/classes/QueryHelper/#type","text":"SentenceType","title":"type?"},{"location":"source/classes/QueryHelper/#returns_8","text":"SentenceInfo","title":"Returns"},{"location":"source/classes/QueryHelper/#getsentencecategory","text":"getSentenceCategory ( action ): SentenceCategory Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:23","title":"getSentenceCategory()"},{"location":"source/classes/QueryHelper/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#action_1","text":"SentenceAction","title":"action"},{"location":"source/classes/QueryHelper/#returns_9","text":"SentenceCategory","title":"Returns"},{"location":"source/classes/QueryHelper/#getsentencetype","text":"getSentenceType ( action ): SentenceType Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:22","title":"getSentenceType()"},{"location":"source/classes/QueryHelper/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#action_2","text":"SentenceAction","title":"action"},{"location":"source/classes/QueryHelper/#returns_10","text":"SentenceType","title":"Returns"},{"location":"source/classes/QueryHelper/#raw","text":"raw ( sql ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:20","title":"raw()"},{"location":"source/classes/QueryHelper/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#sql_1","text":"string","title":"sql"},{"location":"source/classes/QueryHelper/#returns_11","text":"string","title":"Returns"},{"location":"source/classes/QueryHelper/#transformparameter","text":"transformParameter ( name ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:21","title":"transformParameter()"},{"location":"source/classes/QueryHelper/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/QueryHelper/#name_2","text":"string","title":"name"},{"location":"source/classes/QueryHelper/#returns_12","text":"string","title":"Returns"},{"location":"source/classes/QueryTransaction/","text":"Lambda ORM Lambda ORM / QueryTransaction Class: QueryTransaction Defined in: src/lib/expressions/application/useCases/transaction.ts:7 Constructors Constructor new QueryTransaction ( transaction , builder , expressions ): QueryTransaction Defined in: src/lib/expressions/application/useCases/transaction.ts:9 Parameters transaction Transaction builder IQueryBuilder expressions Expressions Returns QueryTransaction Methods execute() Call Signature execute ( query , data? ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:13 Parameters query Function data? any Returns Promise \\< any > Call Signature execute ( query , data? ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:14 Parameters query string data? any Returns Promise \\< any > executeQuery() executeQuery ( query , data ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:23 Parameters query Query data any = {} Returns Promise \\< any >","title":"QueryTransaction"},{"location":"source/classes/QueryTransaction/#class-querytransaction","text":"Defined in: src/lib/expressions/application/useCases/transaction.ts:7","title":"Class: QueryTransaction"},{"location":"source/classes/QueryTransaction/#constructors","text":"","title":"Constructors"},{"location":"source/classes/QueryTransaction/#constructor","text":"new QueryTransaction ( transaction , builder , expressions ): QueryTransaction Defined in: src/lib/expressions/application/useCases/transaction.ts:9","title":"Constructor"},{"location":"source/classes/QueryTransaction/#parameters","text":"","title":"Parameters"},{"location":"source/classes/QueryTransaction/#transaction","text":"Transaction","title":"transaction"},{"location":"source/classes/QueryTransaction/#builder","text":"IQueryBuilder","title":"builder"},{"location":"source/classes/QueryTransaction/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/QueryTransaction/#returns","text":"QueryTransaction","title":"Returns"},{"location":"source/classes/QueryTransaction/#methods","text":"","title":"Methods"},{"location":"source/classes/QueryTransaction/#execute","text":"","title":"execute()"},{"location":"source/classes/QueryTransaction/#call-signature","text":"execute ( query , data? ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:13","title":"Call Signature"},{"location":"source/classes/QueryTransaction/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/QueryTransaction/#query","text":"Function","title":"query"},{"location":"source/classes/QueryTransaction/#data","text":"any","title":"data?"},{"location":"source/classes/QueryTransaction/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryTransaction/#call-signature_1","text":"execute ( query , data? ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:14","title":"Call Signature"},{"location":"source/classes/QueryTransaction/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/QueryTransaction/#query_1","text":"string","title":"query"},{"location":"source/classes/QueryTransaction/#data_1","text":"any","title":"data?"},{"location":"source/classes/QueryTransaction/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/QueryTransaction/#executequery","text":"executeQuery ( query , data ): Promise \\< any > Defined in: src/lib/expressions/application/useCases/transaction.ts:23","title":"executeQuery()"},{"location":"source/classes/QueryTransaction/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/QueryTransaction/#query_2","text":"Query","title":"query"},{"location":"source/classes/QueryTransaction/#data_2","text":"any = {}","title":"data"},{"location":"source/classes/QueryTransaction/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Queryable/","text":"Lambda ORM Lambda ORM / Queryable Class: Queryable\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:68 Extends HavingClauses \\< T > Type Parameters T T Constructors Constructor new Queryable \\< T >( actions , query ): Queryable \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7 Parameters actions QueryActions query string Returns Queryable \\< T > Inherited from HavingClauses . constructor Methods bulkDelete() bulkDelete ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:88 Parameters value? T Returns ModificableClauses \\< T > bulkInsert() bulkInsert ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:79 Parameters value? T Returns ModificableClauses \\< T > bulkMerge() bulkMerge ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:86 Parameters value? T Returns ModificableClauses \\< T > constraints() constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11 Returns Promise \\< MetadataConstraint > Inherited from HavingClauses . constraints delete() delete ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:90 Parameters predicate? ( value ) => unknown Returns ModificableClauses \\< T > deleteAll() deleteAll (): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:92 Returns IncludeAction \\< T > distinct() distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . distinct execute() execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8 Parameters data any Returns Promise \\< any > Inherited from HavingClauses . execute filter() filter ( predicate ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:70 Parameters predicate ( value , index , array ) => unknown Returns FilterClauses \\< T > first() first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . first having() having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:74 Parameters predicate ( value , index , array ) => unknown Returns HavingClauses \\< T > include() include ( predicate ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:72 Parameters predicate ( value , index , array ) => unknown Returns IncludeClauses \\< T > insert() insert ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:76 Parameters predicate? ( value ) => unknown Returns ModificableClauses \\< T > last() last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns Map2Clauses \\< U > Inherited from HavingClauses . last map() map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30 Type Parameters U U Parameters predicate ( value , index , array ) => U Returns MapClauses \\< U > Inherited from HavingClauses . map merge() merge ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:84 Parameters predicate? ( value ) => unknown Returns ModificableClauses \\< T > metadata() metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14 Returns Promise \\< Metadata > Inherited from HavingClauses . metadata model() model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10 Returns Promise \\< MetadataModel []> Inherited from HavingClauses . model normalize() normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9 Returns string Inherited from HavingClauses . normalize page() page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18 Parameters page number records number Returns QueryAction Inherited from HavingClauses . page parameters() parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12 Returns Promise \\< MetadataParameter []> Inherited from HavingClauses . parameters sentence() sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13 Returns Promise \\< QueryPlan > Inherited from HavingClauses . sentence sort() sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22 Parameters predicate ( value , index , array ) => unknown Returns PageClauses Inherited from HavingClauses . sort update() update ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:81 Parameters predicate? ( value , index , array ) => unknown Returns ModificableClauses \\< T > updateAll() updateAll ( predicate ): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:83 Parameters predicate ( value , index , array ) => unknown Returns IncludeAction \\< T > upsert() upsert ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:77 Parameters predicate? ( value ) => unknown Returns ModificableClauses \\< T >","title":"Queryable"},{"location":"source/classes/Queryable/#class-queryablet","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:68","title":"Class: Queryable\\&lt;T>"},{"location":"source/classes/Queryable/#extends","text":"HavingClauses \\< T >","title":"Extends"},{"location":"source/classes/Queryable/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/Queryable/#t","text":"T","title":"T"},{"location":"source/classes/Queryable/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Queryable/#constructor","text":"new Queryable \\< T >( actions , query ): Queryable \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:7","title":"Constructor"},{"location":"source/classes/Queryable/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#actions","text":"QueryActions","title":"actions"},{"location":"source/classes/Queryable/#query","text":"string","title":"query"},{"location":"source/classes/Queryable/#returns","text":"Queryable \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from","text":"HavingClauses . constructor","title":"Inherited from"},{"location":"source/classes/Queryable/#methods","text":"","title":"Methods"},{"location":"source/classes/Queryable/#bulkdelete","text":"bulkDelete ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:88","title":"bulkDelete()"},{"location":"source/classes/Queryable/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#value","text":"T","title":"value?"},{"location":"source/classes/Queryable/#returns_1","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#bulkinsert","text":"bulkInsert ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:79","title":"bulkInsert()"},{"location":"source/classes/Queryable/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#value_1","text":"T","title":"value?"},{"location":"source/classes/Queryable/#returns_2","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#bulkmerge","text":"bulkMerge ( value? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:86","title":"bulkMerge()"},{"location":"source/classes/Queryable/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#value_2","text":"T","title":"value?"},{"location":"source/classes/Queryable/#returns_3","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#constraints","text":"constraints (): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:11","title":"constraints()"},{"location":"source/classes/Queryable/#returns_4","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_1","text":"HavingClauses . constraints","title":"Inherited from"},{"location":"source/classes/Queryable/#delete","text":"delete ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:90","title":"delete()"},{"location":"source/classes/Queryable/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate","text":"( value ) => unknown","title":"predicate?"},{"location":"source/classes/Queryable/#returns_5","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#deleteall","text":"deleteAll (): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:92","title":"deleteAll()"},{"location":"source/classes/Queryable/#returns_6","text":"IncludeAction \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#distinct","text":"distinct \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:36","title":"distinct()"},{"location":"source/classes/Queryable/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/classes/Queryable/#u","text":"U","title":"U"},{"location":"source/classes/Queryable/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_1","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/Queryable/#returns_7","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_2","text":"HavingClauses . distinct","title":"Inherited from"},{"location":"source/classes/Queryable/#execute","text":"execute ( data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:8","title":"execute()"},{"location":"source/classes/Queryable/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#data","text":"any","title":"data"},{"location":"source/classes/Queryable/#returns_8","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_3","text":"HavingClauses . execute","title":"Inherited from"},{"location":"source/classes/Queryable/#filter","text":"filter ( predicate ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:70","title":"filter()"},{"location":"source/classes/Queryable/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_2","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Queryable/#returns_9","text":"FilterClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#first","text":"first \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:32","title":"first()"},{"location":"source/classes/Queryable/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/classes/Queryable/#u_1","text":"U","title":"U"},{"location":"source/classes/Queryable/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_3","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/Queryable/#returns_10","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_4","text":"HavingClauses . first","title":"Inherited from"},{"location":"source/classes/Queryable/#having","text":"having ( predicate ): HavingClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:74","title":"having()"},{"location":"source/classes/Queryable/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_4","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Queryable/#returns_11","text":"HavingClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#include","text":"include ( predicate ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:72","title":"include()"},{"location":"source/classes/Queryable/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_5","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Queryable/#returns_12","text":"IncludeClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#insert","text":"insert ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:76","title":"insert()"},{"location":"source/classes/Queryable/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_6","text":"( value ) => unknown","title":"predicate?"},{"location":"source/classes/Queryable/#returns_13","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#last","text":"last \\< U >( predicate ): Map2Clauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:34","title":"last()"},{"location":"source/classes/Queryable/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/classes/Queryable/#u_2","text":"U","title":"U"},{"location":"source/classes/Queryable/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_7","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/Queryable/#returns_14","text":"Map2Clauses \\< U >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_5","text":"HavingClauses . last","title":"Inherited from"},{"location":"source/classes/Queryable/#map","text":"map \\< U >( predicate ): MapClauses \\< U > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:30","title":"map()"},{"location":"source/classes/Queryable/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/classes/Queryable/#u_3","text":"U","title":"U"},{"location":"source/classes/Queryable/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_8","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/classes/Queryable/#returns_15","text":"MapClauses \\< U >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_6","text":"HavingClauses . map","title":"Inherited from"},{"location":"source/classes/Queryable/#merge","text":"merge ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:84","title":"merge()"},{"location":"source/classes/Queryable/#parameters_14","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_9","text":"( value ) => unknown","title":"predicate?"},{"location":"source/classes/Queryable/#returns_16","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#metadata","text":"metadata (): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:14","title":"metadata()"},{"location":"source/classes/Queryable/#returns_17","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_7","text":"HavingClauses . metadata","title":"Inherited from"},{"location":"source/classes/Queryable/#model","text":"model (): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:10","title":"model()"},{"location":"source/classes/Queryable/#returns_18","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_8","text":"HavingClauses . model","title":"Inherited from"},{"location":"source/classes/Queryable/#normalize","text":"normalize (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:9","title":"normalize()"},{"location":"source/classes/Queryable/#returns_19","text":"string","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_9","text":"HavingClauses . normalize","title":"Inherited from"},{"location":"source/classes/Queryable/#page","text":"page ( page , records ): QueryAction Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:18","title":"page()"},{"location":"source/classes/Queryable/#parameters_15","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#page_1","text":"number","title":"page"},{"location":"source/classes/Queryable/#records","text":"number","title":"records"},{"location":"source/classes/Queryable/#returns_20","text":"QueryAction","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_10","text":"HavingClauses . page","title":"Inherited from"},{"location":"source/classes/Queryable/#parameters_16","text":"parameters (): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:12","title":"parameters()"},{"location":"source/classes/Queryable/#returns_21","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_11","text":"HavingClauses . parameters","title":"Inherited from"},{"location":"source/classes/Queryable/#sentence","text":"sentence (): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:13","title":"sentence()"},{"location":"source/classes/Queryable/#returns_22","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_12","text":"HavingClauses . sentence","title":"Inherited from"},{"location":"source/classes/Queryable/#sort","text":"sort ( predicate ): PageClauses Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:22","title":"sort()"},{"location":"source/classes/Queryable/#parameters_17","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_10","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Queryable/#returns_23","text":"PageClauses","title":"Returns"},{"location":"source/classes/Queryable/#inherited-from_13","text":"HavingClauses . sort","title":"Inherited from"},{"location":"source/classes/Queryable/#update","text":"update ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:81","title":"update()"},{"location":"source/classes/Queryable/#parameters_18","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_11","text":"( value , index , array ) => unknown","title":"predicate?"},{"location":"source/classes/Queryable/#returns_24","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#updateall","text":"updateAll ( predicate ): IncludeAction \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:83","title":"updateAll()"},{"location":"source/classes/Queryable/#parameters_19","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_12","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/classes/Queryable/#returns_25","text":"IncludeAction \\< T >","title":"Returns"},{"location":"source/classes/Queryable/#upsert","text":"upsert ( predicate? ): ModificableClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:77","title":"upsert()"},{"location":"source/classes/Queryable/#parameters_20","text":"","title":"Parameters"},{"location":"source/classes/Queryable/#predicate_13","text":"( value ) => unknown","title":"predicate?"},{"location":"source/classes/Queryable/#returns_26","text":"ModificableClauses \\< T >","title":"Returns"},{"location":"source/classes/ReleaseConnection/","text":"Lambda ORM Lambda ORM / ReleaseConnection Class: ReleaseConnection Defined in: src/lib/connection/application/useCases/release.ts:4 Constructors Constructor new ReleaseConnection ( poolService ): ReleaseConnection Defined in: src/lib/connection/application/useCases/release.ts:6 Parameters poolService ConnectionPoolService Returns ReleaseConnection Methods release() release ( connection ): Promise \\< void > Defined in: src/lib/connection/application/useCases/release.ts:8 Parameters connection Connection Returns Promise \\< void >","title":"ReleaseConnection"},{"location":"source/classes/ReleaseConnection/#class-releaseconnection","text":"Defined in: src/lib/connection/application/useCases/release.ts:4","title":"Class: ReleaseConnection"},{"location":"source/classes/ReleaseConnection/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ReleaseConnection/#constructor","text":"new ReleaseConnection ( poolService ): ReleaseConnection Defined in: src/lib/connection/application/useCases/release.ts:6","title":"Constructor"},{"location":"source/classes/ReleaseConnection/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ReleaseConnection/#poolservice","text":"ConnectionPoolService","title":"poolService"},{"location":"source/classes/ReleaseConnection/#returns","text":"ReleaseConnection","title":"Returns"},{"location":"source/classes/ReleaseConnection/#methods","text":"","title":"Methods"},{"location":"source/classes/ReleaseConnection/#release","text":"release ( connection ): Promise \\< void > Defined in: src/lib/connection/application/useCases/release.ts:8","title":"release()"},{"location":"source/classes/ReleaseConnection/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ReleaseConnection/#connection","text":"Connection","title":"connection"},{"location":"source/classes/ReleaseConnection/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/Repository/","text":"Lambda ORM Lambda ORM / Repository Class: Repository\\<TEntity, TQuery> Defined in: src/lib/repository/infrastructure/repository.ts:8 Type Parameters TEntity TEntity TQuery TQuery Implements IRepository \\< TEntity , TQuery > Constructors Constructor new Repository \\< TEntity , TQuery >( name , stage? , orm? ): Repository \\< TEntity , TQuery > Defined in: src/lib/repository/infrastructure/repository.ts:10 Parameters name string stage? string orm? IOrm = _orm Returns Repository \\< TEntity , TQuery > Properties name readonly name : string Defined in: src/lib/repository/infrastructure/repository.ts:10 stage? optional stage : string Defined in: src/lib/repository/infrastructure/repository.ts:10 Methods bulkDelete() Call Signature bulkDelete ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:17 Parameters entities TEntity [] Returns Promise \\< any []> Implementation of IRepository . bulkDelete Call Signature bulkDelete ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:18 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Implementation of IRepository . bulkDelete bulkInsert() Call Signature bulkInsert ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:58 Parameters entities TEntity [] Returns Promise \\< any []> Implementation of IRepository . bulkInsert Call Signature bulkInsert ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:60 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Implementation of IRepository . bulkInsert bulkMerge() Call Signature bulkMerge ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:23 Parameters entities TEntity [] Returns Promise \\< any []> Implementation of IRepository . bulkMerge Call Signature bulkMerge ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:24 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Implementation of IRepository . bulkMerge delete() Call Signature delete ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:90 Parameters entity TEntity Returns Promise \\< number > Implementation of IRepository . delete Call Signature delete ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:92 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . delete deleteAll() deleteAll ( data , filter? , include? ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:97 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . deleteAll distinct() distinct ( data , filter? , include? ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:111 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< any []> Implementation of IRepository . distinct execute() execute ( query , data? ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:45 Parameters query string data? any Returns Promise \\< any > Implementation of IRepository . execute first() first ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: src/lib/repository/infrastructure/repository.ts:118 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< null | TEntity > Implementation of IRepository . first insert() Call Signature insert ( entity ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:50 Parameters entity TEntity Returns Promise \\< any > Implementation of IRepository . insert Call Signature insert ( entity , include ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:52 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< any > Implementation of IRepository . insert last() last ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: src/lib/repository/infrastructure/repository.ts:130 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< null | TEntity > Implementation of IRepository . last list() list ( data , filter? , include? ): Promise \\< TEntity []> Defined in: src/lib/repository/infrastructure/repository.ts:104 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< TEntity []> Implementation of IRepository . list merge() Call Signature merge ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:82 Parameters entity TEntity Returns Promise \\< number > Implementation of IRepository . merge Call Signature merge ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:84 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . merge query() query (): Queryable \\< TQuery > Defined in: src/lib/repository/infrastructure/repository.ts:142 Returns Queryable \\< TQuery > Implementation of IRepository . query update() Call Signature update ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:66 Parameters entity TEntity Returns Promise \\< number > Implementation of IRepository . update Call Signature update ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:68 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . update updateAll() updateAll ( data , map , filter? , include? ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:73 Parameters data any map ( value ) => unknown filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . updateAll upsert() Call Signature upsert ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:11 Parameters entity TEntity Returns Promise \\< number > Implementation of IRepository . upsert Call Signature upsert ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:12 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Implementation of IRepository . upsert","title":"Repository"},{"location":"source/classes/Repository/#class-repositorytentity-tquery","text":"Defined in: src/lib/repository/infrastructure/repository.ts:8","title":"Class: Repository\\&lt;TEntity, TQuery>"},{"location":"source/classes/Repository/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/classes/Repository/#tentity","text":"TEntity","title":"TEntity"},{"location":"source/classes/Repository/#tquery","text":"TQuery","title":"TQuery"},{"location":"source/classes/Repository/#implements","text":"IRepository \\< TEntity , TQuery >","title":"Implements"},{"location":"source/classes/Repository/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Repository/#constructor","text":"new Repository \\< TEntity , TQuery >( name , stage? , orm? ): Repository \\< TEntity , TQuery > Defined in: src/lib/repository/infrastructure/repository.ts:10","title":"Constructor"},{"location":"source/classes/Repository/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Repository/#name","text":"string","title":"name"},{"location":"source/classes/Repository/#stage","text":"string","title":"stage?"},{"location":"source/classes/Repository/#orm","text":"IOrm = _orm","title":"orm?"},{"location":"source/classes/Repository/#returns","text":"Repository \\< TEntity , TQuery >","title":"Returns"},{"location":"source/classes/Repository/#properties","text":"","title":"Properties"},{"location":"source/classes/Repository/#name_1","text":"readonly name : string Defined in: src/lib/repository/infrastructure/repository.ts:10","title":"name"},{"location":"source/classes/Repository/#stage_1","text":"optional stage : string Defined in: src/lib/repository/infrastructure/repository.ts:10","title":"stage?"},{"location":"source/classes/Repository/#methods","text":"","title":"Methods"},{"location":"source/classes/Repository/#bulkdelete","text":"","title":"bulkDelete()"},{"location":"source/classes/Repository/#call-signature","text":"bulkDelete ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:17","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#returns_1","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of","text":"IRepository . bulkDelete","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_1","text":"bulkDelete ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:18","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities_1","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#include","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_2","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_1","text":"IRepository . bulkDelete","title":"Implementation of"},{"location":"source/classes/Repository/#bulkinsert","text":"","title":"bulkInsert()"},{"location":"source/classes/Repository/#call-signature_2","text":"bulkInsert ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:58","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities_2","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_2","text":"IRepository . bulkInsert","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_3","text":"bulkInsert ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:60","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities_3","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#include_1","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_4","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_3","text":"IRepository . bulkInsert","title":"Implementation of"},{"location":"source/classes/Repository/#bulkmerge","text":"","title":"bulkMerge()"},{"location":"source/classes/Repository/#call-signature_4","text":"bulkMerge ( entities ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:23","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities_4","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#returns_5","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_4","text":"IRepository . bulkMerge","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_5","text":"bulkMerge ( entities , include ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:24","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entities_5","text":"TEntity []","title":"entities"},{"location":"source/classes/Repository/#include_2","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_6","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_5","text":"IRepository . bulkMerge","title":"Implementation of"},{"location":"source/classes/Repository/#delete","text":"","title":"delete()"},{"location":"source/classes/Repository/#call-signature_6","text":"delete ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:90","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#returns_7","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_6","text":"IRepository . delete","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_7","text":"delete ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:92","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_1","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#include_3","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_8","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_7","text":"IRepository . delete","title":"Implementation of"},{"location":"source/classes/Repository/#deleteall","text":"deleteAll ( data , filter? , include? ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:97","title":"deleteAll()"},{"location":"source/classes/Repository/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data","text":"any","title":"data"},{"location":"source/classes/Repository/#filter","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_4","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_9","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_8","text":"IRepository . deleteAll","title":"Implementation of"},{"location":"source/classes/Repository/#distinct","text":"distinct ( data , filter? , include? ): Promise \\< any []> Defined in: src/lib/repository/infrastructure/repository.ts:111","title":"distinct()"},{"location":"source/classes/Repository/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data_1","text":"any","title":"data"},{"location":"source/classes/Repository/#filter_1","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_5","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_10","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_9","text":"IRepository . distinct","title":"Implementation of"},{"location":"source/classes/Repository/#execute","text":"execute ( query , data? ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:45","title":"execute()"},{"location":"source/classes/Repository/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/Repository/#query","text":"string","title":"query"},{"location":"source/classes/Repository/#data_2","text":"any","title":"data?"},{"location":"source/classes/Repository/#returns_11","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_10","text":"IRepository . execute","title":"Implementation of"},{"location":"source/classes/Repository/#first","text":"first ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: src/lib/repository/infrastructure/repository.ts:118","title":"first()"},{"location":"source/classes/Repository/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data_3","text":"any","title":"data"},{"location":"source/classes/Repository/#filter_2","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_6","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_12","text":"Promise \\< null | TEntity >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_11","text":"IRepository . first","title":"Implementation of"},{"location":"source/classes/Repository/#insert","text":"","title":"insert()"},{"location":"source/classes/Repository/#call-signature_8","text":"insert ( entity ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:50","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_2","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#returns_13","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_12","text":"IRepository . insert","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_9","text":"insert ( entity , include ): Promise \\< any > Defined in: src/lib/repository/infrastructure/repository.ts:52","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_14","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_3","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#include_7","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_14","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_13","text":"IRepository . insert","title":"Implementation of"},{"location":"source/classes/Repository/#last","text":"last ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: src/lib/repository/infrastructure/repository.ts:130","title":"last()"},{"location":"source/classes/Repository/#parameters_15","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data_4","text":"any","title":"data"},{"location":"source/classes/Repository/#filter_3","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_8","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_15","text":"Promise \\< null | TEntity >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_14","text":"IRepository . last","title":"Implementation of"},{"location":"source/classes/Repository/#list","text":"list ( data , filter? , include? ): Promise \\< TEntity []> Defined in: src/lib/repository/infrastructure/repository.ts:104","title":"list()"},{"location":"source/classes/Repository/#parameters_16","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data_5","text":"any","title":"data"},{"location":"source/classes/Repository/#filter_4","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_9","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_16","text":"Promise \\< TEntity []>","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_15","text":"IRepository . list","title":"Implementation of"},{"location":"source/classes/Repository/#merge","text":"","title":"merge()"},{"location":"source/classes/Repository/#call-signature_10","text":"merge ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:82","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_17","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_4","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#returns_17","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_16","text":"IRepository . merge","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_11","text":"merge ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:84","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_18","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_5","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#include_10","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_18","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_17","text":"IRepository . merge","title":"Implementation of"},{"location":"source/classes/Repository/#query_1","text":"query (): Queryable \\< TQuery > Defined in: src/lib/repository/infrastructure/repository.ts:142","title":"query()"},{"location":"source/classes/Repository/#returns_19","text":"Queryable \\< TQuery >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_18","text":"IRepository . query","title":"Implementation of"},{"location":"source/classes/Repository/#update","text":"","title":"update()"},{"location":"source/classes/Repository/#call-signature_12","text":"update ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:66","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_19","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_6","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#returns_20","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_19","text":"IRepository . update","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_13","text":"update ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:68","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_20","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_7","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#include_11","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_21","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_20","text":"IRepository . update","title":"Implementation of"},{"location":"source/classes/Repository/#updateall","text":"updateAll ( data , map , filter? , include? ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:73","title":"updateAll()"},{"location":"source/classes/Repository/#parameters_21","text":"","title":"Parameters"},{"location":"source/classes/Repository/#data_6","text":"any","title":"data"},{"location":"source/classes/Repository/#map","text":"( value ) => unknown","title":"map"},{"location":"source/classes/Repository/#filter_5","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/classes/Repository/#include_12","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/classes/Repository/#returns_22","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_21","text":"IRepository . updateAll","title":"Implementation of"},{"location":"source/classes/Repository/#upsert","text":"","title":"upsert()"},{"location":"source/classes/Repository/#call-signature_14","text":"upsert ( entity ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:11","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_22","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_8","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#returns_23","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_22","text":"IRepository . upsert","title":"Implementation of"},{"location":"source/classes/Repository/#call-signature_15","text":"upsert ( entity , include ): Promise \\< number > Defined in: src/lib/repository/infrastructure/repository.ts:12","title":"Call Signature"},{"location":"source/classes/Repository/#parameters_23","text":"","title":"Parameters"},{"location":"source/classes/Repository/#entity_9","text":"TEntity","title":"entity"},{"location":"source/classes/Repository/#include_13","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/classes/Repository/#returns_24","text":"Promise \\< number >","title":"Returns"},{"location":"source/classes/Repository/#implementation-of_23","text":"IRepository . upsert","title":"Implementation of"},{"location":"source/classes/RouteService/","text":"Lambda ORM Lambda ORM / RouteService Class: RouteService Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:4 Implements IRouteService Constructors Constructor new RouteService ( stageConfigService , exp ): RouteService Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:7 Parameters stageConfigService StageConfigService exp Expressions Returns RouteService Methods eval() eval ( source , info ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:8 Parameters source SourceRule info SentenceInfo Returns boolean Implementation of IRouteService . eval getSource() getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:9 Parameters info SentenceInfo stage? string Returns string Implementation of IRouteService . getSource","title":"RouteService"},{"location":"source/classes/RouteService/#class-routeservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:4","title":"Class: RouteService"},{"location":"source/classes/RouteService/#implements","text":"IRouteService","title":"Implements"},{"location":"source/classes/RouteService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/RouteService/#constructor","text":"new RouteService ( stageConfigService , exp ): RouteService Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:7","title":"Constructor"},{"location":"source/classes/RouteService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/RouteService/#stageconfigservice","text":"StageConfigService","title":"stageConfigService"},{"location":"source/classes/RouteService/#exp","text":"Expressions","title":"exp"},{"location":"source/classes/RouteService/#returns","text":"RouteService","title":"Returns"},{"location":"source/classes/RouteService/#methods","text":"","title":"Methods"},{"location":"source/classes/RouteService/#eval","text":"eval ( source , info ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:8","title":"eval()"},{"location":"source/classes/RouteService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/RouteService/#source","text":"SourceRule","title":"source"},{"location":"source/classes/RouteService/#info","text":"SentenceInfo","title":"info"},{"location":"source/classes/RouteService/#returns_1","text":"boolean","title":"Returns"},{"location":"source/classes/RouteService/#implementation-of","text":"IRouteService . eval","title":"Implementation of"},{"location":"source/classes/RouteService/#getsource","text":"getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/application/services/routeService.d.ts:9","title":"getSource()"},{"location":"source/classes/RouteService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/RouteService/#info_1","text":"SentenceInfo","title":"info"},{"location":"source/classes/RouteService/#stage","text":"string","title":"stage?"},{"location":"source/classes/RouteService/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/RouteService/#implementation-of_1","text":"IRouteService . getSource","title":"Implementation of"},{"location":"source/classes/SchemaError/","text":"Lambda ORM Lambda ORM / SchemaError Class: SchemaError Defined in: node_modules/lambdaorm-base/schema/domain/errors.d.ts:1 Extends Error Constructors Constructor new SchemaError ( message ): SchemaError Defined in: node_modules/lambdaorm-base/schema/domain/errors.d.ts:2 Parameters message string Returns SchemaError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"SchemaError"},{"location":"source/classes/SchemaError/#class-schemaerror","text":"Defined in: node_modules/lambdaorm-base/schema/domain/errors.d.ts:1","title":"Class: SchemaError"},{"location":"source/classes/SchemaError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/SchemaError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaError/#constructor","text":"new SchemaError ( message ): SchemaError Defined in: node_modules/lambdaorm-base/schema/domain/errors.d.ts:2","title":"Constructor"},{"location":"source/classes/SchemaError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaError/#message","text":"string","title":"message"},{"location":"source/classes/SchemaError/#returns","text":"SchemaError","title":"Returns"},{"location":"source/classes/SchemaError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/SchemaError/#properties","text":"","title":"Properties"},{"location":"source/classes/SchemaError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/SchemaError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/SchemaError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/SchemaError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/SchemaError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/SchemaError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/SchemaError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/SchemaError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/SchemaError/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/SchemaError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SchemaError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/SchemaError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/SchemaError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/SchemaError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/SchemaError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/SchemaError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SchemaError/#err","text":"Error","title":"err"},{"location":"source/classes/SchemaError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/SchemaError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/SchemaError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/SchemaError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/SchemaExtender/","text":"Lambda ORM Lambda ORM / SchemaExtender Class: SchemaExtender Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:4 Constructors Constructor new SchemaExtender ( exp , helper ): SchemaExtender Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:7 Parameters exp Expressions helper OrmBaseH3lp Returns SchemaExtender Methods complete() complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:15 Parameters schema Schema Returns void extend() extend ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:8 Parameters schema Schema Returns void isCompound() isCompound ( parent , child ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:16 Parameters parent any child any Returns boolean","title":"SchemaExtender"},{"location":"source/classes/SchemaExtender/#class-schemaextender","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:4","title":"Class: SchemaExtender"},{"location":"source/classes/SchemaExtender/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaExtender/#constructor","text":"new SchemaExtender ( exp , helper ): SchemaExtender Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:7","title":"Constructor"},{"location":"source/classes/SchemaExtender/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaExtender/#exp","text":"Expressions","title":"exp"},{"location":"source/classes/SchemaExtender/#helper","text":"OrmBaseH3lp","title":"helper"},{"location":"source/classes/SchemaExtender/#returns","text":"SchemaExtender","title":"Returns"},{"location":"source/classes/SchemaExtender/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaExtender/#complete","text":"complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:15","title":"complete()"},{"location":"source/classes/SchemaExtender/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SchemaExtender/#schema","text":"Schema","title":"schema"},{"location":"source/classes/SchemaExtender/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/SchemaExtender/#extend","text":"extend ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:8","title":"extend()"},{"location":"source/classes/SchemaExtender/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SchemaExtender/#schema_1","text":"Schema","title":"schema"},{"location":"source/classes/SchemaExtender/#returns_2","text":"void","title":"Returns"},{"location":"source/classes/SchemaExtender/#iscompound","text":"isCompound ( parent , child ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/schemaExtender.d.ts:16","title":"isCompound()"},{"location":"source/classes/SchemaExtender/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SchemaExtender/#parent","text":"any","title":"parent"},{"location":"source/classes/SchemaExtender/#child","text":"any","title":"child"},{"location":"source/classes/SchemaExtender/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/SchemaFacade/","text":"Lambda ORM Lambda ORM / SchemaFacade Class: SchemaFacade Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:10 Constructors Constructor new SchemaFacade ( schemaService , getSchemaData , extender , createSchema , initializeSchema , updateSchema , matchSchema , fileService ): SchemaFacade Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:19 Parameters schemaService SchemaService getSchemaData GetSchemaSchema extender SchemaExtender createSchema CreateSchema initializeSchema InitializeSchema updateSchema UpdateSchema matchSchema MatchSchema fileService IFileSchemaService Returns SchemaFacade Properties schemaService readonly schemaService : SchemaService Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:11 Methods complete() complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:25 Parameters schema Schema Returns void create() create ( dialect? , connection? ): Schema Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:20 Parameters dialect? Dialect connection? any Returns Schema initialize() initialize ( schema , args ): Schema Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:21 Parameters schema Schema args InitializeSchemaArgs Returns Schema introspect() introspect ( schema , data , name ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:22 Parameters schema Schema data any name string Returns SchemaData match() match ( schema , mappings , options? ): void Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:23 Parameters schema Schema mappings Mapping [] options? MatchOptions Returns void read() read ( workspace ): Promise \\< null | SchemaInfo > Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:26 Parameters workspace string Returns Promise \\< null | SchemaInfo > schemaData() schemaData ( source , name , type ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:24 Parameters source any name string type Type Returns SchemaData write() write ( schema , path ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:27 Parameters schema Schema path string Returns Promise \\< void >","title":"SchemaFacade"},{"location":"source/classes/SchemaFacade/#class-schemafacade","text":"Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:10","title":"Class: SchemaFacade"},{"location":"source/classes/SchemaFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaFacade/#constructor","text":"new SchemaFacade ( schemaService , getSchemaData , extender , createSchema , initializeSchema , updateSchema , matchSchema , fileService ): SchemaFacade Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:19","title":"Constructor"},{"location":"source/classes/SchemaFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schemaservice","text":"SchemaService","title":"schemaService"},{"location":"source/classes/SchemaFacade/#getschemadata","text":"GetSchemaSchema","title":"getSchemaData"},{"location":"source/classes/SchemaFacade/#extender","text":"SchemaExtender","title":"extender"},{"location":"source/classes/SchemaFacade/#createschema","text":"CreateSchema","title":"createSchema"},{"location":"source/classes/SchemaFacade/#initializeschema","text":"InitializeSchema","title":"initializeSchema"},{"location":"source/classes/SchemaFacade/#updateschema","text":"UpdateSchema","title":"updateSchema"},{"location":"source/classes/SchemaFacade/#matchschema","text":"MatchSchema","title":"matchSchema"},{"location":"source/classes/SchemaFacade/#fileservice","text":"IFileSchemaService","title":"fileService"},{"location":"source/classes/SchemaFacade/#returns","text":"SchemaFacade","title":"Returns"},{"location":"source/classes/SchemaFacade/#properties","text":"","title":"Properties"},{"location":"source/classes/SchemaFacade/#schemaservice_1","text":"readonly schemaService : SchemaService Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:11","title":"schemaService"},{"location":"source/classes/SchemaFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaFacade/#complete","text":"complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:25","title":"complete()"},{"location":"source/classes/SchemaFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schema","text":"Schema","title":"schema"},{"location":"source/classes/SchemaFacade/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/SchemaFacade/#create","text":"create ( dialect? , connection? ): Schema Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:20","title":"create()"},{"location":"source/classes/SchemaFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#dialect","text":"Dialect","title":"dialect?"},{"location":"source/classes/SchemaFacade/#connection","text":"any","title":"connection?"},{"location":"source/classes/SchemaFacade/#returns_2","text":"Schema","title":"Returns"},{"location":"source/classes/SchemaFacade/#initialize","text":"initialize ( schema , args ): Schema Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:21","title":"initialize()"},{"location":"source/classes/SchemaFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schema_1","text":"Schema","title":"schema"},{"location":"source/classes/SchemaFacade/#args","text":"InitializeSchemaArgs","title":"args"},{"location":"source/classes/SchemaFacade/#returns_3","text":"Schema","title":"Returns"},{"location":"source/classes/SchemaFacade/#introspect","text":"introspect ( schema , data , name ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:22","title":"introspect()"},{"location":"source/classes/SchemaFacade/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schema_2","text":"Schema","title":"schema"},{"location":"source/classes/SchemaFacade/#data","text":"any","title":"data"},{"location":"source/classes/SchemaFacade/#name","text":"string","title":"name"},{"location":"source/classes/SchemaFacade/#returns_4","text":"SchemaData","title":"Returns"},{"location":"source/classes/SchemaFacade/#match","text":"match ( schema , mappings , options? ): void Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:23","title":"match()"},{"location":"source/classes/SchemaFacade/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schema_3","text":"Schema","title":"schema"},{"location":"source/classes/SchemaFacade/#mappings","text":"Mapping []","title":"mappings"},{"location":"source/classes/SchemaFacade/#options","text":"MatchOptions","title":"options?"},{"location":"source/classes/SchemaFacade/#returns_5","text":"void","title":"Returns"},{"location":"source/classes/SchemaFacade/#read","text":"read ( workspace ): Promise \\< null | SchemaInfo > Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:26","title":"read()"},{"location":"source/classes/SchemaFacade/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#workspace","text":"string","title":"workspace"},{"location":"source/classes/SchemaFacade/#returns_6","text":"Promise \\< null | SchemaInfo >","title":"Returns"},{"location":"source/classes/SchemaFacade/#schemadata","text":"schemaData ( source , name , type ): SchemaData Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:24","title":"schemaData()"},{"location":"source/classes/SchemaFacade/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#source","text":"any","title":"source"},{"location":"source/classes/SchemaFacade/#name_1","text":"string","title":"name"},{"location":"source/classes/SchemaFacade/#type","text":"Type","title":"type"},{"location":"source/classes/SchemaFacade/#returns_7","text":"SchemaData","title":"Returns"},{"location":"source/classes/SchemaFacade/#write","text":"write ( schema , path ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/application/facade.d.ts:27","title":"write()"},{"location":"source/classes/SchemaFacade/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacade/#schema_4","text":"Schema","title":"schema"},{"location":"source/classes/SchemaFacade/#path","text":"string","title":"path"},{"location":"source/classes/SchemaFacade/#returns_8","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/SchemaFacadeBuilder/","text":"Lambda ORM Lambda ORM / SchemaFacadeBuilder Class: SchemaFacadeBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:4 Constructors Constructor new SchemaFacadeBuilder ( exp , helper ): SchemaFacadeBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:7 Parameters exp Expressions helper OrmBaseH3lp Returns SchemaFacadeBuilder Methods build() build (): SchemaFacade Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:8 Returns SchemaFacade","title":"SchemaFacadeBuilder"},{"location":"source/classes/SchemaFacadeBuilder/#class-schemafacadebuilder","text":"Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:4","title":"Class: SchemaFacadeBuilder"},{"location":"source/classes/SchemaFacadeBuilder/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaFacadeBuilder/#constructor","text":"new SchemaFacadeBuilder ( exp , helper ): SchemaFacadeBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:7","title":"Constructor"},{"location":"source/classes/SchemaFacadeBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaFacadeBuilder/#exp","text":"Expressions","title":"exp"},{"location":"source/classes/SchemaFacadeBuilder/#helper","text":"OrmBaseH3lp","title":"helper"},{"location":"source/classes/SchemaFacadeBuilder/#returns","text":"SchemaFacadeBuilder","title":"Returns"},{"location":"source/classes/SchemaFacadeBuilder/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaFacadeBuilder/#build","text":"build (): SchemaFacade Defined in: node_modules/lambdaorm-base/schema/infrastructure/facadeBuilder.d.ts:8","title":"build()"},{"location":"source/classes/SchemaFacadeBuilder/#returns_1","text":"SchemaFacade","title":"Returns"},{"location":"source/classes/SchemaHelper/","text":"Lambda ORM Lambda ORM / SchemaHelper Class: SchemaHelper Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:3 Constructors Constructor new SchemaHelper ( str ): SchemaHelper Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:7 Parameters str IStringHelper Returns SchemaHelper Properties DEFAULT_LENGTH readonly DEFAULT_LENGTH : 80 = 80 Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:6 DEFAULT_TYPE readonly DEFAULT_TYPE : \"string\" = \"string\" Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:5 Methods capitalize() capitalize ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:13 Parameters name string Returns string entityName() entityName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:10 Parameters name string Returns string equalName() equalName ( name1? , name2? ): boolean Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:9 Parameters name1? string name2? string Returns boolean getFk() getFk ( objType ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:18 Parameters objType ObjType Returns undefined | PropertyType getKey() getKey ( uniques ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:19 Parameters uniques PropertyType [] Returns undefined | PropertyType getPk() getPk ( objType ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:16 Parameters objType ObjType Returns undefined | PropertyType getPkName() getPkName ( objType ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:17 Parameters objType ObjType Returns string indexName() indexName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:14 Parameters name string Returns string length() length ( length? ): undefined | number Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:21 Parameters length? number Returns undefined | number lengthFromType() lengthFromType ( type ): undefined | number Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:22 Parameters type Type Returns undefined | number newId() newId (): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:8 Returns string propertyName() propertyName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:11 Parameters name string Returns string refPropertyName() refPropertyName ( entityName , propertyName ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:12 Parameters entityName string propertyName string Returns string relationName() relationName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:15 Parameters name string Returns string type() type ( type? , length? ): undefined | string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:20 Parameters type? string length? number Returns undefined | string","title":"SchemaHelper"},{"location":"source/classes/SchemaHelper/#class-schemahelper","text":"Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:3","title":"Class: SchemaHelper"},{"location":"source/classes/SchemaHelper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaHelper/#constructor","text":"new SchemaHelper ( str ): SchemaHelper Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:7","title":"Constructor"},{"location":"source/classes/SchemaHelper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#str","text":"IStringHelper","title":"str"},{"location":"source/classes/SchemaHelper/#returns","text":"SchemaHelper","title":"Returns"},{"location":"source/classes/SchemaHelper/#properties","text":"","title":"Properties"},{"location":"source/classes/SchemaHelper/#default_length","text":"readonly DEFAULT_LENGTH : 80 = 80 Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:6","title":"DEFAULT_LENGTH"},{"location":"source/classes/SchemaHelper/#default_type","text":"readonly DEFAULT_TYPE : \"string\" = \"string\" Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:5","title":"DEFAULT_TYPE"},{"location":"source/classes/SchemaHelper/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaHelper/#capitalize","text":"capitalize ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:13","title":"capitalize()"},{"location":"source/classes/SchemaHelper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name","text":"string","title":"name"},{"location":"source/classes/SchemaHelper/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#entityname","text":"entityName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:10","title":"entityName()"},{"location":"source/classes/SchemaHelper/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name_1","text":"string","title":"name"},{"location":"source/classes/SchemaHelper/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#equalname","text":"equalName ( name1? , name2? ): boolean Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:9","title":"equalName()"},{"location":"source/classes/SchemaHelper/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name1","text":"string","title":"name1?"},{"location":"source/classes/SchemaHelper/#name2","text":"string","title":"name2?"},{"location":"source/classes/SchemaHelper/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/SchemaHelper/#getfk","text":"getFk ( objType ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:18","title":"getFk()"},{"location":"source/classes/SchemaHelper/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#objtype","text":"ObjType","title":"objType"},{"location":"source/classes/SchemaHelper/#returns_4","text":"undefined | PropertyType","title":"Returns"},{"location":"source/classes/SchemaHelper/#getkey","text":"getKey ( uniques ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:19","title":"getKey()"},{"location":"source/classes/SchemaHelper/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#uniques","text":"PropertyType []","title":"uniques"},{"location":"source/classes/SchemaHelper/#returns_5","text":"undefined | PropertyType","title":"Returns"},{"location":"source/classes/SchemaHelper/#getpk","text":"getPk ( objType ): undefined | PropertyType Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:16","title":"getPk()"},{"location":"source/classes/SchemaHelper/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#objtype_1","text":"ObjType","title":"objType"},{"location":"source/classes/SchemaHelper/#returns_6","text":"undefined | PropertyType","title":"Returns"},{"location":"source/classes/SchemaHelper/#getpkname","text":"getPkName ( objType ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:17","title":"getPkName()"},{"location":"source/classes/SchemaHelper/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#objtype_2","text":"ObjType","title":"objType"},{"location":"source/classes/SchemaHelper/#returns_7","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#indexname","text":"indexName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:14","title":"indexName()"},{"location":"source/classes/SchemaHelper/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name_2","text":"string","title":"name"},{"location":"source/classes/SchemaHelper/#returns_8","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#length","text":"length ( length? ): undefined | number Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:21","title":"length()"},{"location":"source/classes/SchemaHelper/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#length_1","text":"number","title":"length?"},{"location":"source/classes/SchemaHelper/#returns_9","text":"undefined | number","title":"Returns"},{"location":"source/classes/SchemaHelper/#lengthfromtype","text":"lengthFromType ( type ): undefined | number Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:22","title":"lengthFromType()"},{"location":"source/classes/SchemaHelper/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#type","text":"Type","title":"type"},{"location":"source/classes/SchemaHelper/#returns_10","text":"undefined | number","title":"Returns"},{"location":"source/classes/SchemaHelper/#newid","text":"newId (): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:8","title":"newId()"},{"location":"source/classes/SchemaHelper/#returns_11","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#propertyname","text":"propertyName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:11","title":"propertyName()"},{"location":"source/classes/SchemaHelper/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name_3","text":"string","title":"name"},{"location":"source/classes/SchemaHelper/#returns_12","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#refpropertyname","text":"refPropertyName ( entityName , propertyName ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:12","title":"refPropertyName()"},{"location":"source/classes/SchemaHelper/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#entityname_1","text":"string","title":"entityName"},{"location":"source/classes/SchemaHelper/#propertyname_1","text":"string","title":"propertyName"},{"location":"source/classes/SchemaHelper/#returns_13","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#relationname","text":"relationName ( name ): string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:15","title":"relationName()"},{"location":"source/classes/SchemaHelper/#parameters_13","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#name_4","text":"string","title":"name"},{"location":"source/classes/SchemaHelper/#returns_14","text":"string","title":"Returns"},{"location":"source/classes/SchemaHelper/#type_1","text":"type ( type? , length? ): undefined | string Defined in: node_modules/lambdaorm-base/schema/infrastructure/schemaHelper.d.ts:20","title":"type()"},{"location":"source/classes/SchemaHelper/#parameters_14","text":"","title":"Parameters"},{"location":"source/classes/SchemaHelper/#type_2","text":"string","title":"type?"},{"location":"source/classes/SchemaHelper/#length_2","text":"number","title":"length?"},{"location":"source/classes/SchemaHelper/#returns_15","text":"undefined | string","title":"Returns"},{"location":"source/classes/SchemaService/","text":"Lambda ORM Lambda ORM / SchemaService Class: SchemaService Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:2 Constructors Constructor new SchemaService (): SchemaService Returns SchemaService Methods complete() complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:8 Parameters schema Schema Returns void newApplication() newApplication (): undefined | ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:6 Returns undefined | ApplicationSchema newDomain() newDomain (): DomainSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:5 Returns DomainSchema newInfrastructure() newInfrastructure (): InfrastructureSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:4 Returns InfrastructureSchema newPathsApp() newPathsApp (): AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:7 Returns AppPathsConfig newSchema() newSchema (): Schema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:3 Returns Schema","title":"SchemaService"},{"location":"source/classes/SchemaService/#class-schemaservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:2","title":"Class: SchemaService"},{"location":"source/classes/SchemaService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaService/#constructor","text":"new SchemaService (): SchemaService","title":"Constructor"},{"location":"source/classes/SchemaService/#returns","text":"SchemaService","title":"Returns"},{"location":"source/classes/SchemaService/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaService/#complete","text":"complete ( schema ): void Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:8","title":"complete()"},{"location":"source/classes/SchemaService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaService/#schema","text":"Schema","title":"schema"},{"location":"source/classes/SchemaService/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/SchemaService/#newapplication","text":"newApplication (): undefined | ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:6","title":"newApplication()"},{"location":"source/classes/SchemaService/#returns_2","text":"undefined | ApplicationSchema","title":"Returns"},{"location":"source/classes/SchemaService/#newdomain","text":"newDomain (): DomainSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:5","title":"newDomain()"},{"location":"source/classes/SchemaService/#returns_3","text":"DomainSchema","title":"Returns"},{"location":"source/classes/SchemaService/#newinfrastructure","text":"newInfrastructure (): InfrastructureSchema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:4","title":"newInfrastructure()"},{"location":"source/classes/SchemaService/#returns_4","text":"InfrastructureSchema","title":"Returns"},{"location":"source/classes/SchemaService/#newpathsapp","text":"newPathsApp (): AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:7","title":"newPathsApp()"},{"location":"source/classes/SchemaService/#returns_5","text":"AppPathsConfig","title":"Returns"},{"location":"source/classes/SchemaService/#newschema","text":"newSchema (): Schema Defined in: node_modules/lambdaorm-base/schema/application/services/schemaService.d.ts:3","title":"newSchema()"},{"location":"source/classes/SchemaService/#returns_6","text":"Schema","title":"Returns"},{"location":"source/classes/SchemaState/","text":"Lambda ORM Lambda ORM / SchemaState Class: SchemaState Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:11 Constructors Constructor new SchemaState ( source , domain , mapping , stage , view , routeService , facade , loadSchema , helper ): SchemaState Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:24 Parameters source DataSourceConfigService domain DomainConfigService mapping MappingsConfigService stage StageConfigService view ViewsConfigService routeService RouteService facade SchemaFacade loadSchema LoadSchema helper OrmBaseH3lp Returns SchemaState Properties domain readonly domain : DomainConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:13 mapping readonly mapping : MappingsConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:14 originalSchema originalSchema : Schema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:22 schema schema : Schema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:21 schemaPath? optional schemaPath : string Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:23 source readonly source : DataSourceConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:12 stage readonly stage : StageConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:15 view readonly view : ViewsConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:16 Methods evalSourceRule() evalSourceRule ( rule , info ): boolean Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:29 Parameters rule SourceRule info SentenceInfo Returns boolean getSchemaDomain() getSchemaDomain (): DomainSchema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:42 Returns DomainSchema getSchemaEntities() getSchemaEntities (): Entity [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:43 Returns Entity [] getSchemaEntity() getSchemaEntity ( entity ): undefined | Entity Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:44 Parameters entity string Returns undefined | Entity getSchemaEntityMapping() getSchemaEntityMapping ( mapping , entity ): undefined | EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:49 Parameters mapping string entity string Returns undefined | EntityMapping getSchemaEnum() getSchemaEnum ( _enum ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:46 Parameters _enum string Returns undefined | Enum getSchemaEnums() getSchemaEnums (): Enum [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:45 Returns Enum [] getSchemaMapping() getSchemaMapping ( mapping ): undefined | Mapping Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:48 Parameters mapping string Returns undefined | Mapping getSchemaMappings() getSchemaMappings (): Mapping [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:47 Returns Mapping [] getSchemaSource() getSchemaSource ( source ): object Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:35 Parameters source string Returns object dialect dialect : string name name : string getSchemaSources() getSchemaSources (): object [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:31 Returns object [] getSchemaStage() getSchemaStage ( stage ): undefined | Stage Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:51 Parameters stage string Returns undefined | Stage getSchemaStages() getSchemaStages (): Stage [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:50 Returns Stage [] getSchemaVersion() getSchemaVersion (): object Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:39 Returns object version version : string getSchemaViews() getSchemaViews (): string [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:52 Returns string [] getSource() getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:30 Parameters info SentenceInfo stage? string Returns string initialize() initialize ( args ): Promise \\< Schema > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:25 Parameters args InitializeSchemaArgs Returns Promise \\< Schema > introspect() introspect ( data , name ): Promise \\< SchemaData > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:27 Parameters data any name string Returns Promise \\< SchemaData > load() load ( source ): Promise \\< Schema > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:26 Parameters source string | Schema Returns Promise \\< Schema > match() match ( mappings , options? ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:28 Parameters mappings Mapping [] options? MatchOptions Returns Promise \\< void >","title":"SchemaState"},{"location":"source/classes/SchemaState/#class-schemastate","text":"Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:11","title":"Class: SchemaState"},{"location":"source/classes/SchemaState/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaState/#constructor","text":"new SchemaState ( source , domain , mapping , stage , view , routeService , facade , loadSchema , helper ): SchemaState Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:24","title":"Constructor"},{"location":"source/classes/SchemaState/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#source","text":"DataSourceConfigService","title":"source"},{"location":"source/classes/SchemaState/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/SchemaState/#mapping","text":"MappingsConfigService","title":"mapping"},{"location":"source/classes/SchemaState/#stage","text":"StageConfigService","title":"stage"},{"location":"source/classes/SchemaState/#view","text":"ViewsConfigService","title":"view"},{"location":"source/classes/SchemaState/#routeservice","text":"RouteService","title":"routeService"},{"location":"source/classes/SchemaState/#facade","text":"SchemaFacade","title":"facade"},{"location":"source/classes/SchemaState/#loadschema","text":"LoadSchema","title":"loadSchema"},{"location":"source/classes/SchemaState/#helper","text":"OrmBaseH3lp","title":"helper"},{"location":"source/classes/SchemaState/#returns","text":"SchemaState","title":"Returns"},{"location":"source/classes/SchemaState/#properties","text":"","title":"Properties"},{"location":"source/classes/SchemaState/#domain_1","text":"readonly domain : DomainConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:13","title":"domain"},{"location":"source/classes/SchemaState/#mapping_1","text":"readonly mapping : MappingsConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:14","title":"mapping"},{"location":"source/classes/SchemaState/#originalschema","text":"originalSchema : Schema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:22","title":"originalSchema"},{"location":"source/classes/SchemaState/#schema","text":"schema : Schema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:21","title":"schema"},{"location":"source/classes/SchemaState/#schemapath","text":"optional schemaPath : string Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:23","title":"schemaPath?"},{"location":"source/classes/SchemaState/#source_1","text":"readonly source : DataSourceConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:12","title":"source"},{"location":"source/classes/SchemaState/#stage_1","text":"readonly stage : StageConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:15","title":"stage"},{"location":"source/classes/SchemaState/#view_1","text":"readonly view : ViewsConfigService Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:16","title":"view"},{"location":"source/classes/SchemaState/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaState/#evalsourcerule","text":"evalSourceRule ( rule , info ): boolean Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:29","title":"evalSourceRule()"},{"location":"source/classes/SchemaState/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#rule","text":"SourceRule","title":"rule"},{"location":"source/classes/SchemaState/#info","text":"SentenceInfo","title":"info"},{"location":"source/classes/SchemaState/#returns_1","text":"boolean","title":"Returns"},{"location":"source/classes/SchemaState/#getschemadomain","text":"getSchemaDomain (): DomainSchema Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:42","title":"getSchemaDomain()"},{"location":"source/classes/SchemaState/#returns_2","text":"DomainSchema","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaentities","text":"getSchemaEntities (): Entity [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:43","title":"getSchemaEntities()"},{"location":"source/classes/SchemaState/#returns_3","text":"Entity []","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaentity","text":"getSchemaEntity ( entity ): undefined | Entity Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:44","title":"getSchemaEntity()"},{"location":"source/classes/SchemaState/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#entity","text":"string","title":"entity"},{"location":"source/classes/SchemaState/#returns_4","text":"undefined | Entity","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaentitymapping","text":"getSchemaEntityMapping ( mapping , entity ): undefined | EntityMapping Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:49","title":"getSchemaEntityMapping()"},{"location":"source/classes/SchemaState/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#mapping_2","text":"string","title":"mapping"},{"location":"source/classes/SchemaState/#entity_1","text":"string","title":"entity"},{"location":"source/classes/SchemaState/#returns_5","text":"undefined | EntityMapping","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaenum","text":"getSchemaEnum ( _enum ): undefined | Enum Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:46","title":"getSchemaEnum()"},{"location":"source/classes/SchemaState/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#_enum","text":"string","title":"_enum"},{"location":"source/classes/SchemaState/#returns_6","text":"undefined | Enum","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaenums","text":"getSchemaEnums (): Enum [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:45","title":"getSchemaEnums()"},{"location":"source/classes/SchemaState/#returns_7","text":"Enum []","title":"Returns"},{"location":"source/classes/SchemaState/#getschemamapping","text":"getSchemaMapping ( mapping ): undefined | Mapping Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:48","title":"getSchemaMapping()"},{"location":"source/classes/SchemaState/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#mapping_3","text":"string","title":"mapping"},{"location":"source/classes/SchemaState/#returns_8","text":"undefined | Mapping","title":"Returns"},{"location":"source/classes/SchemaState/#getschemamappings","text":"getSchemaMappings (): Mapping [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:47","title":"getSchemaMappings()"},{"location":"source/classes/SchemaState/#returns_9","text":"Mapping []","title":"Returns"},{"location":"source/classes/SchemaState/#getschemasource","text":"getSchemaSource ( source ): object Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:35","title":"getSchemaSource()"},{"location":"source/classes/SchemaState/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#source_2","text":"string","title":"source"},{"location":"source/classes/SchemaState/#returns_10","text":"object","title":"Returns"},{"location":"source/classes/SchemaState/#dialect","text":"dialect : string","title":"dialect"},{"location":"source/classes/SchemaState/#name","text":"name : string","title":"name"},{"location":"source/classes/SchemaState/#getschemasources","text":"getSchemaSources (): object [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:31","title":"getSchemaSources()"},{"location":"source/classes/SchemaState/#returns_11","text":"object []","title":"Returns"},{"location":"source/classes/SchemaState/#getschemastage","text":"getSchemaStage ( stage ): undefined | Stage Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:51","title":"getSchemaStage()"},{"location":"source/classes/SchemaState/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#stage_2","text":"string","title":"stage"},{"location":"source/classes/SchemaState/#returns_12","text":"undefined | Stage","title":"Returns"},{"location":"source/classes/SchemaState/#getschemastages","text":"getSchemaStages (): Stage [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:50","title":"getSchemaStages()"},{"location":"source/classes/SchemaState/#returns_13","text":"Stage []","title":"Returns"},{"location":"source/classes/SchemaState/#getschemaversion","text":"getSchemaVersion (): object Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:39","title":"getSchemaVersion()"},{"location":"source/classes/SchemaState/#returns_14","text":"object","title":"Returns"},{"location":"source/classes/SchemaState/#version","text":"version : string","title":"version"},{"location":"source/classes/SchemaState/#getschemaviews","text":"getSchemaViews (): string [] Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:52","title":"getSchemaViews()"},{"location":"source/classes/SchemaState/#returns_15","text":"string []","title":"Returns"},{"location":"source/classes/SchemaState/#getsource","text":"getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:30","title":"getSource()"},{"location":"source/classes/SchemaState/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#info_1","text":"SentenceInfo","title":"info"},{"location":"source/classes/SchemaState/#stage_3","text":"string","title":"stage?"},{"location":"source/classes/SchemaState/#returns_16","text":"string","title":"Returns"},{"location":"source/classes/SchemaState/#initialize","text":"initialize ( args ): Promise \\< Schema > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:25","title":"initialize()"},{"location":"source/classes/SchemaState/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#args","text":"InitializeSchemaArgs","title":"args"},{"location":"source/classes/SchemaState/#returns_17","text":"Promise \\< Schema >","title":"Returns"},{"location":"source/classes/SchemaState/#introspect","text":"introspect ( data , name ): Promise \\< SchemaData > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:27","title":"introspect()"},{"location":"source/classes/SchemaState/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#data","text":"any","title":"data"},{"location":"source/classes/SchemaState/#name_1","text":"string","title":"name"},{"location":"source/classes/SchemaState/#returns_18","text":"Promise \\< SchemaData >","title":"Returns"},{"location":"source/classes/SchemaState/#load","text":"load ( source ): Promise \\< Schema > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:26","title":"load()"},{"location":"source/classes/SchemaState/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#source_3","text":"string | Schema","title":"source"},{"location":"source/classes/SchemaState/#returns_19","text":"Promise \\< Schema >","title":"Returns"},{"location":"source/classes/SchemaState/#match","text":"match ( mappings , options? ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/application/state.d.ts:28","title":"match()"},{"location":"source/classes/SchemaState/#parameters_12","text":"","title":"Parameters"},{"location":"source/classes/SchemaState/#mappings","text":"Mapping []","title":"mappings"},{"location":"source/classes/SchemaState/#options","text":"MatchOptions","title":"options?"},{"location":"source/classes/SchemaState/#returns_20","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/SchemaStateBuilder/","text":"Lambda ORM Lambda ORM / SchemaStateBuilder Class: SchemaStateBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:4 Constructors Constructor new SchemaStateBuilder ( exp , facade , helper ): SchemaStateBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:8 Parameters exp Expressions facade SchemaFacade helper OrmBaseH3lp Returns SchemaStateBuilder Methods build() build (): SchemaState Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:9 Returns SchemaState","title":"SchemaStateBuilder"},{"location":"source/classes/SchemaStateBuilder/#class-schemastatebuilder","text":"Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:4","title":"Class: SchemaStateBuilder"},{"location":"source/classes/SchemaStateBuilder/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SchemaStateBuilder/#constructor","text":"new SchemaStateBuilder ( exp , facade , helper ): SchemaStateBuilder Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:8","title":"Constructor"},{"location":"source/classes/SchemaStateBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SchemaStateBuilder/#exp","text":"Expressions","title":"exp"},{"location":"source/classes/SchemaStateBuilder/#facade","text":"SchemaFacade","title":"facade"},{"location":"source/classes/SchemaStateBuilder/#helper","text":"OrmBaseH3lp","title":"helper"},{"location":"source/classes/SchemaStateBuilder/#returns","text":"SchemaStateBuilder","title":"Returns"},{"location":"source/classes/SchemaStateBuilder/#methods","text":"","title":"Methods"},{"location":"source/classes/SchemaStateBuilder/#build","text":"build (): SchemaState Defined in: node_modules/lambdaorm-base/schema/infrastructure/stateBuilder.d.ts:9","title":"build()"},{"location":"source/classes/SchemaStateBuilder/#returns_1","text":"SchemaState","title":"Returns"},{"location":"source/classes/Sentence/","text":"Lambda ORM Lambda ORM / Sentence Class: Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:52 Extends Operand Constructors Constructor new Sentence ( pos , name , children , entity , alias ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:61 Parameters pos Position name string children Operand [] entity string alias string Returns Sentence Overrides Operand.constructor Properties action action : SentenceAction Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:57 alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:56 children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Operand.children columns columns : Property [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:53 constraints constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:58 defaults defaults : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:60 entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:55 evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Operand.evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Operand.id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Operand.name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Operand.number parameters parameters : Parameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:54 pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Operand.pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Operand.returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Operand.type values values : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:59 Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Operand.eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Operand.evalAsync getCompositeIncludes() getCompositeIncludes (): SentenceInclude [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:63 Returns SentenceInclude [] getIncludes() getIncludes (): SentenceInclude [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:62 Returns SentenceInclude [] isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Operand.isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Operand.solve","title":"Sentence"},{"location":"source/classes/Sentence/#class-sentence","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:52","title":"Class: Sentence"},{"location":"source/classes/Sentence/#extends","text":"Operand","title":"Extends"},{"location":"source/classes/Sentence/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Sentence/#constructor","text":"new Sentence ( pos , name , children , entity , alias ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:61","title":"Constructor"},{"location":"source/classes/Sentence/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Sentence/#pos","text":"Position","title":"pos"},{"location":"source/classes/Sentence/#name","text":"string","title":"name"},{"location":"source/classes/Sentence/#children","text":"Operand []","title":"children"},{"location":"source/classes/Sentence/#entity","text":"string","title":"entity"},{"location":"source/classes/Sentence/#alias","text":"string","title":"alias"},{"location":"source/classes/Sentence/#returns","text":"Sentence","title":"Returns"},{"location":"source/classes/Sentence/#overrides","text":"Operand.constructor","title":"Overrides"},{"location":"source/classes/Sentence/#properties","text":"","title":"Properties"},{"location":"source/classes/Sentence/#action","text":"action : SentenceAction Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:57","title":"action"},{"location":"source/classes/Sentence/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:56","title":"alias"},{"location":"source/classes/Sentence/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Sentence/#inherited-from","text":"Operand.children","title":"Inherited from"},{"location":"source/classes/Sentence/#columns","text":"columns : Property [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:53","title":"columns"},{"location":"source/classes/Sentence/#constraints","text":"constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:58","title":"constraints"},{"location":"source/classes/Sentence/#defaults","text":"defaults : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:60","title":"defaults"},{"location":"source/classes/Sentence/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:55","title":"entity"},{"location":"source/classes/Sentence/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Sentence/#inherited-from_1","text":"Operand.evaluator","title":"Inherited from"},{"location":"source/classes/Sentence/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Sentence/#inherited-from_2","text":"Operand.id","title":"Inherited from"},{"location":"source/classes/Sentence/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Sentence/#inherited-from_3","text":"Operand.name","title":"Inherited from"},{"location":"source/classes/Sentence/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Sentence/#inherited-from_4","text":"Operand.number","title":"Inherited from"},{"location":"source/classes/Sentence/#parameters_1","text":"parameters : Parameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:54","title":"parameters"},{"location":"source/classes/Sentence/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Sentence/#inherited-from_5","text":"Operand.pos","title":"Inherited from"},{"location":"source/classes/Sentence/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Sentence/#inherited-from_6","text":"Operand.returnType","title":"Inherited from"},{"location":"source/classes/Sentence/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Sentence/#inherited-from_7","text":"Operand.type","title":"Inherited from"},{"location":"source/classes/Sentence/#values","text":"values : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:59","title":"values"},{"location":"source/classes/Sentence/#methods","text":"","title":"Methods"},{"location":"source/classes/Sentence/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Sentence/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Sentence/#context","text":"Context","title":"context"},{"location":"source/classes/Sentence/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Sentence/#inherited-from_8","text":"Operand.eval","title":"Inherited from"},{"location":"source/classes/Sentence/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Sentence/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Sentence/#context_1","text":"Context","title":"context"},{"location":"source/classes/Sentence/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Sentence/#inherited-from_9","text":"Operand.evalAsync","title":"Inherited from"},{"location":"source/classes/Sentence/#getcompositeincludes","text":"getCompositeIncludes (): SentenceInclude [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:63","title":"getCompositeIncludes()"},{"location":"source/classes/Sentence/#returns_3","text":"SentenceInclude []","title":"Returns"},{"location":"source/classes/Sentence/#getincludes","text":"getIncludes (): SentenceInclude [] Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:62","title":"getIncludes()"},{"location":"source/classes/Sentence/#returns_4","text":"SentenceInclude []","title":"Returns"},{"location":"source/classes/Sentence/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Sentence/#returns_5","text":"boolean","title":"Returns"},{"location":"source/classes/Sentence/#inherited-from_10","text":"Operand.isAsync","title":"Inherited from"},{"location":"source/classes/Sentence/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Sentence/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/Sentence/#context_2","text":"Context","title":"context"},{"location":"source/classes/Sentence/#returns_6","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Sentence/#inherited-from_11","text":"Operand.solve","title":"Inherited from"},{"location":"source/classes/SentenceFacade/","text":"Lambda ORM Lambda ORM / SentenceFacade Class: SentenceFacade Defined in: src/lib/sentence/application/facade.ts:18 Constructors Constructor new SentenceFacade ( schemaState , operandFacade , expressions , cache , serializer , helper ): SentenceFacade Defined in: src/lib/sentence/application/facade.ts:27 Parameters schemaState SchemaState operandFacade OperandFacade expressions Expressions cache ICache \\< string , string > serializer SentenceSerializer helper OrmH3lp Returns SentenceFacade Methods build() build ( expression , view , stage ): Sentence Defined in: src/lib/sentence/application/facade.ts:44 Parameters expression string view ViewConfigService stage string Returns Sentence constraints() constraints ( expression ): MetadataConstraint Defined in: src/lib/sentence/application/facade.ts:48 Parameters expression string Returns MetadataConstraint getSource() getSource ( sentence , stage ): Source Defined in: src/lib/sentence/application/facade.ts:64 Parameters sentence Sentence stage string Returns Source metadata() metadata ( expression ): Metadata Defined in: src/lib/sentence/application/facade.ts:52 Parameters expression string Returns Metadata model() model ( expression ): MetadataModel [] Defined in: src/lib/sentence/application/facade.ts:56 Parameters expression string Returns MetadataModel [] parameters() parameters ( expression ): MetadataParameter [] Defined in: src/lib/sentence/application/facade.ts:60 Parameters expression string Returns MetadataParameter []","title":"SentenceFacade"},{"location":"source/classes/SentenceFacade/#class-sentencefacade","text":"Defined in: src/lib/sentence/application/facade.ts:18","title":"Class: SentenceFacade"},{"location":"source/classes/SentenceFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SentenceFacade/#constructor","text":"new SentenceFacade ( schemaState , operandFacade , expressions , cache , serializer , helper ): SentenceFacade Defined in: src/lib/sentence/application/facade.ts:27","title":"Constructor"},{"location":"source/classes/SentenceFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/SentenceFacade/#operandfacade","text":"OperandFacade","title":"operandFacade"},{"location":"source/classes/SentenceFacade/#expressions","text":"Expressions","title":"expressions"},{"location":"source/classes/SentenceFacade/#cache","text":"ICache \\< string , string >","title":"cache"},{"location":"source/classes/SentenceFacade/#serializer","text":"SentenceSerializer","title":"serializer"},{"location":"source/classes/SentenceFacade/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/SentenceFacade/#returns","text":"SentenceFacade","title":"Returns"},{"location":"source/classes/SentenceFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/SentenceFacade/#build","text":"build ( expression , view , stage ): Sentence Defined in: src/lib/sentence/application/facade.ts:44","title":"build()"},{"location":"source/classes/SentenceFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#expression","text":"string","title":"expression"},{"location":"source/classes/SentenceFacade/#view","text":"ViewConfigService","title":"view"},{"location":"source/classes/SentenceFacade/#stage","text":"string","title":"stage"},{"location":"source/classes/SentenceFacade/#returns_1","text":"Sentence","title":"Returns"},{"location":"source/classes/SentenceFacade/#constraints","text":"constraints ( expression ): MetadataConstraint Defined in: src/lib/sentence/application/facade.ts:48","title":"constraints()"},{"location":"source/classes/SentenceFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#expression_1","text":"string","title":"expression"},{"location":"source/classes/SentenceFacade/#returns_2","text":"MetadataConstraint","title":"Returns"},{"location":"source/classes/SentenceFacade/#getsource","text":"getSource ( sentence , stage ): Source Defined in: src/lib/sentence/application/facade.ts:64","title":"getSource()"},{"location":"source/classes/SentenceFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#sentence","text":"Sentence","title":"sentence"},{"location":"source/classes/SentenceFacade/#stage_1","text":"string","title":"stage"},{"location":"source/classes/SentenceFacade/#returns_3","text":"Source","title":"Returns"},{"location":"source/classes/SentenceFacade/#metadata","text":"metadata ( expression ): Metadata Defined in: src/lib/sentence/application/facade.ts:52","title":"metadata()"},{"location":"source/classes/SentenceFacade/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#expression_2","text":"string","title":"expression"},{"location":"source/classes/SentenceFacade/#returns_4","text":"Metadata","title":"Returns"},{"location":"source/classes/SentenceFacade/#model","text":"model ( expression ): MetadataModel [] Defined in: src/lib/sentence/application/facade.ts:56","title":"model()"},{"location":"source/classes/SentenceFacade/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#expression_3","text":"string","title":"expression"},{"location":"source/classes/SentenceFacade/#returns_5","text":"MetadataModel []","title":"Returns"},{"location":"source/classes/SentenceFacade/#parameters_6","text":"parameters ( expression ): MetadataParameter [] Defined in: src/lib/sentence/application/facade.ts:60","title":"parameters()"},{"location":"source/classes/SentenceFacade/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/SentenceFacade/#expression_4","text":"string","title":"expression"},{"location":"source/classes/SentenceFacade/#returns_6","text":"MetadataParameter []","title":"Returns"},{"location":"source/classes/SentenceInclude/","text":"Lambda ORM Lambda ORM / SentenceInclude Class: SentenceInclude Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:65 Extends Operand Constructors Constructor new SentenceInclude ( pos , name , children , relation ): SentenceInclude Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:67 Parameters pos Position name string children Operand [] relation Relation Returns SentenceInclude Overrides Operand.constructor Properties children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Operand.children evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Operand.evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Operand.id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Operand.name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Operand.number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Operand.pos relation relation : Relation Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:66 returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Operand.returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Operand.type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Operand.eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Operand.evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Operand.isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Operand.solve","title":"SentenceInclude"},{"location":"source/classes/SentenceInclude/#class-sentenceinclude","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:65","title":"Class: SentenceInclude"},{"location":"source/classes/SentenceInclude/#extends","text":"Operand","title":"Extends"},{"location":"source/classes/SentenceInclude/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SentenceInclude/#constructor","text":"new SentenceInclude ( pos , name , children , relation ): SentenceInclude Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:67","title":"Constructor"},{"location":"source/classes/SentenceInclude/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SentenceInclude/#pos","text":"Position","title":"pos"},{"location":"source/classes/SentenceInclude/#name","text":"string","title":"name"},{"location":"source/classes/SentenceInclude/#children","text":"Operand []","title":"children"},{"location":"source/classes/SentenceInclude/#relation","text":"Relation","title":"relation"},{"location":"source/classes/SentenceInclude/#returns","text":"SentenceInclude","title":"Returns"},{"location":"source/classes/SentenceInclude/#overrides","text":"Operand.constructor","title":"Overrides"},{"location":"source/classes/SentenceInclude/#properties","text":"","title":"Properties"},{"location":"source/classes/SentenceInclude/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/SentenceInclude/#inherited-from","text":"Operand.children","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/SentenceInclude/#inherited-from_1","text":"Operand.evaluator","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/SentenceInclude/#inherited-from_2","text":"Operand.id","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/SentenceInclude/#inherited-from_3","text":"Operand.name","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/SentenceInclude/#inherited-from_4","text":"Operand.number","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/SentenceInclude/#inherited-from_5","text":"Operand.pos","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#relation_1","text":"relation : Relation Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:66","title":"relation"},{"location":"source/classes/SentenceInclude/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/SentenceInclude/#inherited-from_6","text":"Operand.returnType","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/SentenceInclude/#inherited-from_7","text":"Operand.type","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#methods","text":"","title":"Methods"},{"location":"source/classes/SentenceInclude/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/SentenceInclude/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SentenceInclude/#context","text":"Context","title":"context"},{"location":"source/classes/SentenceInclude/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/SentenceInclude/#inherited-from_8","text":"Operand.eval","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/SentenceInclude/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SentenceInclude/#context_1","text":"Context","title":"context"},{"location":"source/classes/SentenceInclude/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/SentenceInclude/#inherited-from_9","text":"Operand.evalAsync","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/SentenceInclude/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/SentenceInclude/#inherited-from_10","text":"Operand.isAsync","title":"Inherited from"},{"location":"source/classes/SentenceInclude/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/SentenceInclude/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/SentenceInclude/#context_2","text":"Context","title":"context"},{"location":"source/classes/SentenceInclude/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/SentenceInclude/#inherited-from_11","text":"Operand.solve","title":"Inherited from"},{"location":"source/classes/SentenceSerializerImp/","text":"Lambda ORM Lambda ORM / SentenceSerializerImp Class: SentenceSerializerImp Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:8 Implements SentenceSerializer Constructors Constructor new SentenceSerializerImp (): SentenceSerializerImp Returns SentenceSerializerImp Methods clone() clone ( sentence ): Sentence Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:9 Parameters sentence Sentence Returns Sentence Implementation of SentenceSerializer . clone deserialize() deserialize ( value ): Sentence Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:19 Parameters value string Returns Sentence Implementation of SentenceSerializer . deserialize serialize() serialize ( sentence ): string Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:15 Parameters sentence Sentence Returns string Implementation of SentenceSerializer . serialize","title":"SentenceSerializerImp"},{"location":"source/classes/SentenceSerializerImp/#class-sentenceserializerimp","text":"Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:8","title":"Class: SentenceSerializerImp"},{"location":"source/classes/SentenceSerializerImp/#implements","text":"SentenceSerializer","title":"Implements"},{"location":"source/classes/SentenceSerializerImp/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SentenceSerializerImp/#constructor","text":"new SentenceSerializerImp (): SentenceSerializerImp","title":"Constructor"},{"location":"source/classes/SentenceSerializerImp/#returns","text":"SentenceSerializerImp","title":"Returns"},{"location":"source/classes/SentenceSerializerImp/#methods","text":"","title":"Methods"},{"location":"source/classes/SentenceSerializerImp/#clone","text":"clone ( sentence ): Sentence Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:9","title":"clone()"},{"location":"source/classes/SentenceSerializerImp/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SentenceSerializerImp/#sentence","text":"Sentence","title":"sentence"},{"location":"source/classes/SentenceSerializerImp/#returns_1","text":"Sentence","title":"Returns"},{"location":"source/classes/SentenceSerializerImp/#implementation-of","text":"SentenceSerializer . clone","title":"Implementation of"},{"location":"source/classes/SentenceSerializerImp/#deserialize","text":"deserialize ( value ): Sentence Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:19","title":"deserialize()"},{"location":"source/classes/SentenceSerializerImp/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SentenceSerializerImp/#value","text":"string","title":"value"},{"location":"source/classes/SentenceSerializerImp/#returns_2","text":"Sentence","title":"Returns"},{"location":"source/classes/SentenceSerializerImp/#implementation-of_1","text":"SentenceSerializer . deserialize","title":"Implementation of"},{"location":"source/classes/SentenceSerializerImp/#serialize","text":"serialize ( sentence ): string Defined in: src/lib/sentence/application/services/sentenceSerializer.ts:15","title":"serialize()"},{"location":"source/classes/SentenceSerializerImp/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SentenceSerializerImp/#sentence_1","text":"Sentence","title":"sentence"},{"location":"source/classes/SentenceSerializerImp/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/SentenceSerializerImp/#implementation-of_2","text":"SentenceSerializer . serialize","title":"Implementation of"},{"location":"source/classes/SintaxisError/","text":"Lambda ORM Lambda ORM / SintaxisError Class: SintaxisError Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:1 Extends Error Constructors Constructor new SintaxisError ( message ): SintaxisError Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:2 Parameters message string Returns SintaxisError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"SintaxisError"},{"location":"source/classes/SintaxisError/#class-sintaxiserror","text":"Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:1","title":"Class: SintaxisError"},{"location":"source/classes/SintaxisError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/SintaxisError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/SintaxisError/#constructor","text":"new SintaxisError ( message ): SintaxisError Defined in: node_modules/lambdaorm-base/shared/domain/error.d.ts:2","title":"Constructor"},{"location":"source/classes/SintaxisError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/SintaxisError/#message","text":"string","title":"message"},{"location":"source/classes/SintaxisError/#returns","text":"SintaxisError","title":"Returns"},{"location":"source/classes/SintaxisError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/SintaxisError/#properties","text":"","title":"Properties"},{"location":"source/classes/SintaxisError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/SintaxisError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/SintaxisError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/SintaxisError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/SintaxisError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/SintaxisError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/SintaxisError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/SintaxisError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/SintaxisError/#methods","text":"","title":"Methods"},{"location":"source/classes/SintaxisError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/SintaxisError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/SintaxisError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/SintaxisError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/SintaxisError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/SintaxisError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/SintaxisError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/SintaxisError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/SintaxisError/#err","text":"Error","title":"err"},{"location":"source/classes/SintaxisError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/SintaxisError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/SintaxisError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/SintaxisError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/Sort/","text":"Lambda ORM Lambda ORM / Sort Class: Sort Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:30 Extends Clause Constructors Constructor new Sort ( pos , name , children , entity , alias ): Sort Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Sort Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Sort"},{"location":"source/classes/Sort/#class-sort","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:30","title":"Class: Sort"},{"location":"source/classes/Sort/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Sort/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Sort/#constructor","text":"new Sort ( pos , name , children , entity , alias ): Sort Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Sort/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Sort/#pos","text":"Position","title":"pos"},{"location":"source/classes/Sort/#name","text":"string","title":"name"},{"location":"source/classes/Sort/#children","text":"Operand []","title":"children"},{"location":"source/classes/Sort/#entity","text":"string","title":"entity"},{"location":"source/classes/Sort/#alias","text":"string","title":"alias"},{"location":"source/classes/Sort/#returns","text":"Sort","title":"Returns"},{"location":"source/classes/Sort/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Sort/#properties","text":"","title":"Properties"},{"location":"source/classes/Sort/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Sort/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Sort/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Sort/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Sort/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Sort/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Sort/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Sort/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Sort/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Sort/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Sort/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Sort/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Sort/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Sort/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Sort/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Sort/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Sort/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Sort/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Sort/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Sort/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Sort/#methods","text":"","title":"Methods"},{"location":"source/classes/Sort/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Sort/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Sort/#context","text":"Context","title":"context"},{"location":"source/classes/Sort/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Sort/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Sort/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Sort/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Sort/#context_1","text":"Context","title":"context"},{"location":"source/classes/Sort/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Sort/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Sort/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Sort/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Sort/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Sort/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Sort/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Sort/#context_2","text":"Context","title":"context"},{"location":"source/classes/Sort/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Sort/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/StageActionDDL/","text":"Lambda ORM Lambda ORM / StageActionDDL Class: abstract StageActionDDL Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:8 Extended by StageDrop StagePush StageTruncate StagePull Constructors Constructor new StageActionDDL ( executor , stageModelService , schemaState , languages , options , helper ): StageActionDDL Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10 Parameters executor Executor stageModelService StageModelService schemaState SchemaState languages LanguagesService options QueryOptions helper OrmH3lp Returns StageActionDDL Methods execute() abstract execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:17 Returns Promise \\< ExecuteResult []> queries() abstract queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:18 Returns Promise \\< Query []> sentence() sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19 Returns Promise \\< any []>","title":"StageActionDDL"},{"location":"source/classes/StageActionDDL/#class-abstract-stageactionddl","text":"Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:8","title":"Class: abstract StageActionDDL"},{"location":"source/classes/StageActionDDL/#extended-by","text":"StageDrop StagePush StageTruncate StagePull","title":"Extended by"},{"location":"source/classes/StageActionDDL/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageActionDDL/#constructor","text":"new StageActionDDL ( executor , stageModelService , schemaState , languages , options , helper ): StageActionDDL Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10","title":"Constructor"},{"location":"source/classes/StageActionDDL/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageActionDDL/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageActionDDL/#stagemodelservice","text":"StageModelService","title":"stageModelService"},{"location":"source/classes/StageActionDDL/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageActionDDL/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StageActionDDL/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageActionDDL/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageActionDDL/#returns","text":"StageActionDDL","title":"Returns"},{"location":"source/classes/StageActionDDL/#methods","text":"","title":"Methods"},{"location":"source/classes/StageActionDDL/#execute","text":"abstract execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:17","title":"execute()"},{"location":"source/classes/StageActionDDL/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageActionDDL/#queries","text":"abstract queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:18","title":"queries()"},{"location":"source/classes/StageActionDDL/#returns_2","text":"Promise \\< Query []>","title":"Returns"},{"location":"source/classes/StageActionDDL/#sentence","text":"sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19","title":"sentence()"},{"location":"source/classes/StageActionDDL/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/StageActionDML/","text":"Lambda ORM Lambda ORM / StageActionDML Class: abstract StageActionDML Defined in: src/lib/stage/application/useCases/base/actionDML.ts:7 Extended by StageDelete StageExport StageImport Constructors Constructor new StageActionDML ( stageMappingService , domain , expressionFacade , executor , options ): StageActionDML Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15 Parameters stageMappingService StageMappingService domain DomainConfigService expressionFacade ExpressionFacade executor Executor options QueryOptions Returns StageActionDML Methods queries() queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33 Returns Query [] sentence() sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24 Returns Promise \\< any >","title":"StageActionDML"},{"location":"source/classes/StageActionDML/#class-abstract-stageactiondml","text":"Defined in: src/lib/stage/application/useCases/base/actionDML.ts:7","title":"Class: abstract StageActionDML"},{"location":"source/classes/StageActionDML/#extended-by","text":"StageDelete StageExport StageImport","title":"Extended by"},{"location":"source/classes/StageActionDML/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageActionDML/#constructor","text":"new StageActionDML ( stageMappingService , domain , expressionFacade , executor , options ): StageActionDML Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15","title":"Constructor"},{"location":"source/classes/StageActionDML/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageActionDML/#stagemappingservice","text":"StageMappingService","title":"stageMappingService"},{"location":"source/classes/StageActionDML/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/StageActionDML/#expressionfacade","text":"ExpressionFacade","title":"expressionFacade"},{"location":"source/classes/StageActionDML/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageActionDML/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageActionDML/#returns","text":"StageActionDML","title":"Returns"},{"location":"source/classes/StageActionDML/#methods","text":"","title":"Methods"},{"location":"source/classes/StageActionDML/#queries","text":"queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33","title":"queries()"},{"location":"source/classes/StageActionDML/#returns_1","text":"Query []","title":"Returns"},{"location":"source/classes/StageActionDML/#sentence","text":"sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24","title":"sentence()"},{"location":"source/classes/StageActionDML/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageConfigService/","text":"Lambda ORM Lambda ORM / StageConfigService Class: StageConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:2 Constructors Constructor new StageConfigService (): StageConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:4 Returns StageConfigService Properties stages stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:3 Methods get() get ( name? ): Stage Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:6 Parameters name? string Returns Stage load() load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:5 Parameters value Stage Returns void","title":"StageConfigService"},{"location":"source/classes/StageConfigService/#class-stageconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:2","title":"Class: StageConfigService"},{"location":"source/classes/StageConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageConfigService/#constructor","text":"new StageConfigService (): StageConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:4","title":"Constructor"},{"location":"source/classes/StageConfigService/#returns","text":"StageConfigService","title":"Returns"},{"location":"source/classes/StageConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/StageConfigService/#stages","text":"stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:3","title":"stages"},{"location":"source/classes/StageConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/StageConfigService/#get","text":"get ( name? ): Stage Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:6","title":"get()"},{"location":"source/classes/StageConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageConfigService/#name","text":"string","title":"name?"},{"location":"source/classes/StageConfigService/#returns_1","text":"Stage","title":"Returns"},{"location":"source/classes/StageConfigService/#load","text":"load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/stageConfigService.d.ts:5","title":"load()"},{"location":"source/classes/StageConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/StageConfigService/#value","text":"Stage","title":"value"},{"location":"source/classes/StageConfigService/#returns_2","text":"void","title":"Returns"},{"location":"source/classes/StageDelete/","text":"Lambda ORM Lambda ORM / StageDelete Class: StageDelete Defined in: src/lib/stage/application/useCases/delete.ts:5 Extends StageActionDML Constructors Constructor new StageDelete ( stageMappingService , domain , expressionFacade , executor , options ): StageDelete Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15 Parameters stageMappingService StageMappingService domain DomainConfigService expressionFacade ExpressionFacade executor Executor options QueryOptions Returns StageDelete Inherited from StageActionDML . constructor Methods execute() execute (): Promise \\< void > Defined in: src/lib/stage/application/useCases/delete.ts:6 Returns Promise \\< void > queries() queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33 Returns Query [] Inherited from StageActionDML . queries sentence() sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24 Returns Promise \\< any > Inherited from StageActionDML . sentence","title":"StageDelete"},{"location":"source/classes/StageDelete/#class-stagedelete","text":"Defined in: src/lib/stage/application/useCases/delete.ts:5","title":"Class: StageDelete"},{"location":"source/classes/StageDelete/#extends","text":"StageActionDML","title":"Extends"},{"location":"source/classes/StageDelete/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageDelete/#constructor","text":"new StageDelete ( stageMappingService , domain , expressionFacade , executor , options ): StageDelete Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15","title":"Constructor"},{"location":"source/classes/StageDelete/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageDelete/#stagemappingservice","text":"StageMappingService","title":"stageMappingService"},{"location":"source/classes/StageDelete/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/StageDelete/#expressionfacade","text":"ExpressionFacade","title":"expressionFacade"},{"location":"source/classes/StageDelete/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageDelete/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageDelete/#returns","text":"StageDelete","title":"Returns"},{"location":"source/classes/StageDelete/#inherited-from","text":"StageActionDML . constructor","title":"Inherited from"},{"location":"source/classes/StageDelete/#methods","text":"","title":"Methods"},{"location":"source/classes/StageDelete/#execute","text":"execute (): Promise \\< void > Defined in: src/lib/stage/application/useCases/delete.ts:6","title":"execute()"},{"location":"source/classes/StageDelete/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/StageDelete/#queries","text":"queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33","title":"queries()"},{"location":"source/classes/StageDelete/#returns_2","text":"Query []","title":"Returns"},{"location":"source/classes/StageDelete/#inherited-from_1","text":"StageActionDML . queries","title":"Inherited from"},{"location":"source/classes/StageDelete/#sentence","text":"sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24","title":"sentence()"},{"location":"source/classes/StageDelete/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageDelete/#inherited-from_2","text":"StageActionDML . sentence","title":"Inherited from"},{"location":"source/classes/StageDrop/","text":"Lambda ORM Lambda ORM / StageDrop Class: StageDrop Defined in: src/lib/stage/application/useCases/drop.ts:9 Extends StageActionDDL Constructors Constructor new StageDrop ( executor , stateService , mappingService , schemaState , languages , options , helper ): StageDrop Defined in: src/lib/stage/application/useCases/drop.ts:11 Parameters executor Executor stateService StageModelService mappingService StageMappingService schemaState SchemaState languages LanguagesService options QueryOptions helper OrmH3lp Returns StageDrop Overrides StageActionDDL . constructor Methods execute() execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/drop.ts:24 Returns Promise \\< ExecuteResult []> Overrides StageActionDDL . execute queries() queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/drop.ts:16 Returns Promise \\< Query []> Overrides StageActionDDL . queries sentence() sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19 Returns Promise \\< any []> Inherited from StageActionDDL . sentence","title":"StageDrop"},{"location":"source/classes/StageDrop/#class-stagedrop","text":"Defined in: src/lib/stage/application/useCases/drop.ts:9","title":"Class: StageDrop"},{"location":"source/classes/StageDrop/#extends","text":"StageActionDDL","title":"Extends"},{"location":"source/classes/StageDrop/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageDrop/#constructor","text":"new StageDrop ( executor , stateService , mappingService , schemaState , languages , options , helper ): StageDrop Defined in: src/lib/stage/application/useCases/drop.ts:11","title":"Constructor"},{"location":"source/classes/StageDrop/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageDrop/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageDrop/#stateservice","text":"StageModelService","title":"stateService"},{"location":"source/classes/StageDrop/#mappingservice","text":"StageMappingService","title":"mappingService"},{"location":"source/classes/StageDrop/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageDrop/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StageDrop/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageDrop/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageDrop/#returns","text":"StageDrop","title":"Returns"},{"location":"source/classes/StageDrop/#overrides","text":"StageActionDDL . constructor","title":"Overrides"},{"location":"source/classes/StageDrop/#methods","text":"","title":"Methods"},{"location":"source/classes/StageDrop/#execute","text":"execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/drop.ts:24","title":"execute()"},{"location":"source/classes/StageDrop/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageDrop/#overrides_1","text":"StageActionDDL . execute","title":"Overrides"},{"location":"source/classes/StageDrop/#queries","text":"queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/drop.ts:16","title":"queries()"},{"location":"source/classes/StageDrop/#returns_2","text":"Promise \\< Query []>","title":"Returns"},{"location":"source/classes/StageDrop/#overrides_2","text":"StageActionDDL . queries","title":"Overrides"},{"location":"source/classes/StageDrop/#sentence","text":"sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19","title":"sentence()"},{"location":"source/classes/StageDrop/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/StageDrop/#inherited-from","text":"StageActionDDL . sentence","title":"Inherited from"},{"location":"source/classes/StageExport/","text":"Lambda ORM Lambda ORM / StageExport Class: StageExport Defined in: src/lib/stage/application/useCases/export.ts:5 Extends StageActionDML Constructors Constructor new StageExport ( stageMappingService , domain , expressionFacade , executor , options ): StageExport Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15 Parameters stageMappingService StageMappingService domain DomainConfigService expressionFacade ExpressionFacade executor Executor options QueryOptions Returns StageExport Inherited from StageActionDML . constructor Methods execute() execute (): Promise \\< SchemaData > Defined in: src/lib/stage/application/useCases/export.ts:6 Returns Promise \\< SchemaData > queries() queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33 Returns Query [] Inherited from StageActionDML . queries sentence() sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24 Returns Promise \\< any > Inherited from StageActionDML . sentence","title":"StageExport"},{"location":"source/classes/StageExport/#class-stageexport","text":"Defined in: src/lib/stage/application/useCases/export.ts:5","title":"Class: StageExport"},{"location":"source/classes/StageExport/#extends","text":"StageActionDML","title":"Extends"},{"location":"source/classes/StageExport/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageExport/#constructor","text":"new StageExport ( stageMappingService , domain , expressionFacade , executor , options ): StageExport Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15","title":"Constructor"},{"location":"source/classes/StageExport/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageExport/#stagemappingservice","text":"StageMappingService","title":"stageMappingService"},{"location":"source/classes/StageExport/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/StageExport/#expressionfacade","text":"ExpressionFacade","title":"expressionFacade"},{"location":"source/classes/StageExport/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageExport/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageExport/#returns","text":"StageExport","title":"Returns"},{"location":"source/classes/StageExport/#inherited-from","text":"StageActionDML . constructor","title":"Inherited from"},{"location":"source/classes/StageExport/#methods","text":"","title":"Methods"},{"location":"source/classes/StageExport/#execute","text":"execute (): Promise \\< SchemaData > Defined in: src/lib/stage/application/useCases/export.ts:6","title":"execute()"},{"location":"source/classes/StageExport/#returns_1","text":"Promise \\< SchemaData >","title":"Returns"},{"location":"source/classes/StageExport/#queries","text":"queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33","title":"queries()"},{"location":"source/classes/StageExport/#returns_2","text":"Query []","title":"Returns"},{"location":"source/classes/StageExport/#inherited-from_1","text":"StageActionDML . queries","title":"Inherited from"},{"location":"source/classes/StageExport/#sentence","text":"sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24","title":"sentence()"},{"location":"source/classes/StageExport/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageExport/#inherited-from_2","text":"StageActionDML . sentence","title":"Inherited from"},{"location":"source/classes/StageFacade/","text":"Lambda ORM Lambda ORM / StageFacade Class: StageFacade Defined in: src/lib/stage/application/facade.ts:19 Constructors Constructor new StageFacade ( schemaState , expression , executor , languages , helper ): StageFacade Defined in: src/lib/stage/application/facade.ts:23 Parameters schemaState SchemaState expression ExpressionFacade executor Executor languages LanguagesService helper OrmH3lp Returns StageFacade Methods delete() delete ( options? ): StageDelete Defined in: src/lib/stage/application/facade.ts:78 Delete source entities related to the stage Parameters options? QueryOptions QueryOptions Returns StageDelete drop() drop ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:58 Drop source entities related to the stage Parameters options? QueryOptions QueryOptions Returns StageActionDDL exists() exists ( name ): Promise \\< boolean > Defined in: src/lib/stage/application/facade.ts:38 Check if the stage exists Parameters name string string Returns Promise \\< boolean > export() export ( options? ): StageExport Defined in: src/lib/stage/application/facade.ts:88 Export source entities related to the stage Parameters options? QueryOptions QueryOptions Returns StageExport fetch() fetch ( options? ): Promise \\< Mapping []> Defined in: src/lib/stage/application/facade.ts:108 Fetch all mappings from the stage Parameters options? QueryOptions QueryOptions Returns Promise \\< Mapping []> import() import ( options? ): StageImport Defined in: src/lib/stage/application/facade.ts:98 Import data into source entities related to the stage Parameters options? QueryOptions QueryOptions Returns StageImport incorporate() incorporate ( data , name , options? ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:144 Update and Push Schema and import data Parameters data any any|any[] name string string options? QueryOptions QueryOptions Returns Promise \\< ExecuteResult []> introspect() introspect ( data , name , options? ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:132 Update and Push Schema with data Parameters data any any|any[] name string string options? QueryOptions QueryOptions Returns Promise \\< ExecuteResult []> pull() pull ( options ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:118 Pull the stage with the sources Parameters options StagePullOptions = ... StagePullOptions Returns Promise \\< ExecuteResult []> push() push ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:48 Push the stage with sources Parameters options? QueryOptions QueryOptions Returns StageActionDDL truncate() truncate ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:68 Truncate source entities related to the stage Parameters options? QueryOptions QueryOptions Returns StageActionDDL","title":"StageFacade"},{"location":"source/classes/StageFacade/#class-stagefacade","text":"Defined in: src/lib/stage/application/facade.ts:19","title":"Class: StageFacade"},{"location":"source/classes/StageFacade/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageFacade/#constructor","text":"new StageFacade ( schemaState , expression , executor , languages , helper ): StageFacade Defined in: src/lib/stage/application/facade.ts:23","title":"Constructor"},{"location":"source/classes/StageFacade/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageFacade/#expression","text":"ExpressionFacade","title":"expression"},{"location":"source/classes/StageFacade/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageFacade/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StageFacade/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageFacade/#returns","text":"StageFacade","title":"Returns"},{"location":"source/classes/StageFacade/#methods","text":"","title":"Methods"},{"location":"source/classes/StageFacade/#delete","text":"delete ( options? ): StageDelete Defined in: src/lib/stage/application/facade.ts:78 Delete source entities related to the stage","title":"delete()"},{"location":"source/classes/StageFacade/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_1","text":"StageDelete","title":"Returns"},{"location":"source/classes/StageFacade/#drop","text":"drop ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:58 Drop source entities related to the stage","title":"drop()"},{"location":"source/classes/StageFacade/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_1","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_2","text":"StageActionDDL","title":"Returns"},{"location":"source/classes/StageFacade/#exists","text":"exists ( name ): Promise \\< boolean > Defined in: src/lib/stage/application/facade.ts:38 Check if the stage exists","title":"exists()"},{"location":"source/classes/StageFacade/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#name","text":"string string","title":"name"},{"location":"source/classes/StageFacade/#returns_3","text":"Promise \\< boolean >","title":"Returns"},{"location":"source/classes/StageFacade/#export","text":"export ( options? ): StageExport Defined in: src/lib/stage/application/facade.ts:88 Export source entities related to the stage","title":"export()"},{"location":"source/classes/StageFacade/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_2","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_4","text":"StageExport","title":"Returns"},{"location":"source/classes/StageFacade/#fetch","text":"fetch ( options? ): Promise \\< Mapping []> Defined in: src/lib/stage/application/facade.ts:108 Fetch all mappings from the stage","title":"fetch()"},{"location":"source/classes/StageFacade/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_3","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_5","text":"Promise \\< Mapping []>","title":"Returns"},{"location":"source/classes/StageFacade/#import","text":"import ( options? ): StageImport Defined in: src/lib/stage/application/facade.ts:98 Import data into source entities related to the stage","title":"import()"},{"location":"source/classes/StageFacade/#parameters_6","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_4","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_6","text":"StageImport","title":"Returns"},{"location":"source/classes/StageFacade/#incorporate","text":"incorporate ( data , name , options? ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:144 Update and Push Schema and import data","title":"incorporate()"},{"location":"source/classes/StageFacade/#parameters_7","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#data","text":"any any|any[]","title":"data"},{"location":"source/classes/StageFacade/#name_1","text":"string string","title":"name"},{"location":"source/classes/StageFacade/#options_5","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_7","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageFacade/#introspect","text":"introspect ( data , name , options? ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:132 Update and Push Schema with data","title":"introspect()"},{"location":"source/classes/StageFacade/#parameters_8","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#data_1","text":"any any|any[]","title":"data"},{"location":"source/classes/StageFacade/#name_2","text":"string string","title":"name"},{"location":"source/classes/StageFacade/#options_6","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_8","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageFacade/#pull","text":"pull ( options ): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/facade.ts:118 Pull the stage with the sources","title":"pull()"},{"location":"source/classes/StageFacade/#parameters_9","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_7","text":"StagePullOptions = ... StagePullOptions","title":"options"},{"location":"source/classes/StageFacade/#returns_9","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageFacade/#push","text":"push ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:48 Push the stage with sources","title":"push()"},{"location":"source/classes/StageFacade/#parameters_10","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_8","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_10","text":"StageActionDDL","title":"Returns"},{"location":"source/classes/StageFacade/#truncate","text":"truncate ( options? ): StageActionDDL Defined in: src/lib/stage/application/facade.ts:68 Truncate source entities related to the stage","title":"truncate()"},{"location":"source/classes/StageFacade/#parameters_11","text":"","title":"Parameters"},{"location":"source/classes/StageFacade/#options_9","text":"QueryOptions QueryOptions","title":"options?"},{"location":"source/classes/StageFacade/#returns_11","text":"StageActionDDL","title":"Returns"},{"location":"source/classes/StageFetch/","text":"Lambda ORM Lambda ORM / StageFetch Class: StageFetch Defined in: src/lib/stage/application/useCases/fetch.ts:6 Constructors Constructor new StageFetch ( executor , schemaState , languages , helper , options ): StageFetch Defined in: src/lib/stage/application/useCases/fetch.ts:8 Parameters executor Executor schemaState SchemaState languages LanguagesService helper SchemaHelper options QueryOptions Returns StageFetch Methods execute() execute (): Promise \\< Mapping []> Defined in: src/lib/stage/application/useCases/fetch.ts:16 Returns Promise \\< Mapping []>","title":"StageFetch"},{"location":"source/classes/StageFetch/#class-stagefetch","text":"Defined in: src/lib/stage/application/useCases/fetch.ts:6","title":"Class: StageFetch"},{"location":"source/classes/StageFetch/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageFetch/#constructor","text":"new StageFetch ( executor , schemaState , languages , helper , options ): StageFetch Defined in: src/lib/stage/application/useCases/fetch.ts:8","title":"Constructor"},{"location":"source/classes/StageFetch/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageFetch/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageFetch/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageFetch/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StageFetch/#helper","text":"SchemaHelper","title":"helper"},{"location":"source/classes/StageFetch/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageFetch/#returns","text":"StageFetch","title":"Returns"},{"location":"source/classes/StageFetch/#methods","text":"","title":"Methods"},{"location":"source/classes/StageFetch/#execute","text":"execute (): Promise \\< Mapping []> Defined in: src/lib/stage/application/useCases/fetch.ts:16","title":"execute()"},{"location":"source/classes/StageFetch/#returns_1","text":"Promise \\< Mapping []>","title":"Returns"},{"location":"source/classes/StageImport/","text":"Lambda ORM Lambda ORM / StageImport Class: StageImport Defined in: src/lib/stage/application/useCases/import.ts:6 Extends StageActionDML Constructors Constructor new StageImport ( stageMappingService , domain , expressionFacade , executor , options ): StageImport Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15 Parameters stageMappingService StageMappingService domain DomainConfigService expressionFacade ExpressionFacade executor Executor options QueryOptions Returns StageImport Inherited from StageActionDML . constructor Methods execute() execute ( data ): Promise \\< void > Defined in: src/lib/stage/application/useCases/import.ts:7 Parameters data SchemaData Returns Promise \\< void > queries() queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33 Returns Query [] Inherited from StageActionDML . queries sentence() sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24 Returns Promise \\< any > Inherited from StageActionDML . sentence","title":"StageImport"},{"location":"source/classes/StageImport/#class-stageimport","text":"Defined in: src/lib/stage/application/useCases/import.ts:6","title":"Class: StageImport"},{"location":"source/classes/StageImport/#extends","text":"StageActionDML","title":"Extends"},{"location":"source/classes/StageImport/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageImport/#constructor","text":"new StageImport ( stageMappingService , domain , expressionFacade , executor , options ): StageImport Defined in: src/lib/stage/application/useCases/base/actionDML.ts:15","title":"Constructor"},{"location":"source/classes/StageImport/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageImport/#stagemappingservice","text":"StageMappingService","title":"stageMappingService"},{"location":"source/classes/StageImport/#domain","text":"DomainConfigService","title":"domain"},{"location":"source/classes/StageImport/#expressionfacade","text":"ExpressionFacade","title":"expressionFacade"},{"location":"source/classes/StageImport/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageImport/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageImport/#returns","text":"StageImport","title":"Returns"},{"location":"source/classes/StageImport/#inherited-from","text":"StageActionDML . constructor","title":"Inherited from"},{"location":"source/classes/StageImport/#methods","text":"","title":"Methods"},{"location":"source/classes/StageImport/#execute","text":"execute ( data ): Promise \\< void > Defined in: src/lib/stage/application/useCases/import.ts:7","title":"execute()"},{"location":"source/classes/StageImport/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/StageImport/#data","text":"SchemaData","title":"data"},{"location":"source/classes/StageImport/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/StageImport/#queries","text":"queries (): Query [] Defined in: src/lib/stage/application/useCases/base/actionDML.ts:33","title":"queries()"},{"location":"source/classes/StageImport/#returns_2","text":"Query []","title":"Returns"},{"location":"source/classes/StageImport/#inherited-from_1","text":"StageActionDML . queries","title":"Inherited from"},{"location":"source/classes/StageImport/#sentence","text":"sentence (): Promise \\< any > Defined in: src/lib/stage/application/useCases/base/actionDML.ts:24","title":"sentence()"},{"location":"source/classes/StageImport/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageImport/#inherited-from_2","text":"StageActionDML . sentence","title":"Inherited from"},{"location":"source/classes/StageMappingService/","text":"Lambda ORM Lambda ORM / StageMappingService Class: StageMappingService Defined in: src/lib/stage/application/services/stateService.ts:40 Extends StageStateService \\< MappingConfig > Constructors Constructor new StageMappingService ( schemaState , helper ): StageMappingService Defined in: src/lib/stage/application/services/stateService.ts:7 Parameters schemaState SchemaState helper OrmH3lp Returns StageMappingService Inherited from StageStateService<MappingConfig>.constructor Accessors schemaDirPath Get Signature get schemaDirPath (): string Defined in: src/lib/stage/application/services/stateService.ts:9 Returns string Inherited from StageStateService.schemaDirPath Methods get() get ( name ): Promise \\< MappingConfig > Defined in: src/lib/stage/application/services/stateService.ts:13 Parameters name string Returns Promise \\< MappingConfig > Inherited from StageStateService.get getFile() getFile ( name ): string Defined in: src/lib/stage/application/services/stateService.ts:45 Parameters name string Returns string Overrides StageStateService.getFile remove() remove ( name ): Promise \\< any > Defined in: src/lib/stage/application/services/stateService.ts:30 Parameters name string Returns Promise \\< any > Inherited from StageStateService.remove update() update ( name , data ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:25 Parameters name string data MappingConfig Returns Promise \\< void > Inherited from StageStateService.update","title":"StageMappingService"},{"location":"source/classes/StageMappingService/#class-stagemappingservice","text":"Defined in: src/lib/stage/application/services/stateService.ts:40","title":"Class: StageMappingService"},{"location":"source/classes/StageMappingService/#extends","text":"StageStateService \\< MappingConfig >","title":"Extends"},{"location":"source/classes/StageMappingService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageMappingService/#constructor","text":"new StageMappingService ( schemaState , helper ): StageMappingService Defined in: src/lib/stage/application/services/stateService.ts:7","title":"Constructor"},{"location":"source/classes/StageMappingService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageMappingService/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageMappingService/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageMappingService/#returns","text":"StageMappingService","title":"Returns"},{"location":"source/classes/StageMappingService/#inherited-from","text":"StageStateService<MappingConfig>.constructor","title":"Inherited from"},{"location":"source/classes/StageMappingService/#accessors","text":"","title":"Accessors"},{"location":"source/classes/StageMappingService/#schemadirpath","text":"","title":"schemaDirPath"},{"location":"source/classes/StageMappingService/#get-signature","text":"get schemaDirPath (): string Defined in: src/lib/stage/application/services/stateService.ts:9","title":"Get Signature"},{"location":"source/classes/StageMappingService/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/StageMappingService/#inherited-from_1","text":"StageStateService.schemaDirPath","title":"Inherited from"},{"location":"source/classes/StageMappingService/#methods","text":"","title":"Methods"},{"location":"source/classes/StageMappingService/#get","text":"get ( name ): Promise \\< MappingConfig > Defined in: src/lib/stage/application/services/stateService.ts:13","title":"get()"},{"location":"source/classes/StageMappingService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/StageMappingService/#name","text":"string","title":"name"},{"location":"source/classes/StageMappingService/#returns_2","text":"Promise \\< MappingConfig >","title":"Returns"},{"location":"source/classes/StageMappingService/#inherited-from_2","text":"StageStateService.get","title":"Inherited from"},{"location":"source/classes/StageMappingService/#getfile","text":"getFile ( name ): string Defined in: src/lib/stage/application/services/stateService.ts:45","title":"getFile()"},{"location":"source/classes/StageMappingService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/StageMappingService/#name_1","text":"string","title":"name"},{"location":"source/classes/StageMappingService/#returns_3","text":"string","title":"Returns"},{"location":"source/classes/StageMappingService/#overrides","text":"StageStateService.getFile","title":"Overrides"},{"location":"source/classes/StageMappingService/#remove","text":"remove ( name ): Promise \\< any > Defined in: src/lib/stage/application/services/stateService.ts:30","title":"remove()"},{"location":"source/classes/StageMappingService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/StageMappingService/#name_2","text":"string","title":"name"},{"location":"source/classes/StageMappingService/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageMappingService/#inherited-from_3","text":"StageStateService.remove","title":"Inherited from"},{"location":"source/classes/StageMappingService/#update","text":"update ( name , data ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:25","title":"update()"},{"location":"source/classes/StageMappingService/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/StageMappingService/#name_3","text":"string","title":"name"},{"location":"source/classes/StageMappingService/#data","text":"MappingConfig","title":"data"},{"location":"source/classes/StageMappingService/#returns_5","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/StageMappingService/#inherited-from_4","text":"StageStateService.update","title":"Inherited from"},{"location":"source/classes/StageModelService/","text":"Lambda ORM Lambda ORM / StageModelService Class: StageModelService Defined in: src/lib/stage/application/services/stateService.ts:50 Extends StageStateService \\< ModelConfig > Constructors Constructor new StageModelService ( schemaState , helper ): StageModelService Defined in: src/lib/stage/application/services/stateService.ts:7 Parameters schemaState SchemaState helper OrmH3lp Returns StageModelService Inherited from StageStateService<ModelConfig>.constructor Accessors schemaDirPath Get Signature get schemaDirPath (): string Defined in: src/lib/stage/application/services/stateService.ts:9 Returns string Inherited from StageStateService.schemaDirPath Methods ddl() ddl ( action , queries ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:59 Parameters action string queries Query [] Returns Promise \\< void > get() get ( name ): Promise \\< ModelConfig > Defined in: src/lib/stage/application/services/stateService.ts:13 Parameters name string Returns Promise \\< ModelConfig > Inherited from StageStateService.get getFile() getFile ( name ): string Defined in: src/lib/stage/application/services/stateService.ts:55 Parameters name string Returns string Overrides StageStateService.getFile remove() remove ( name ): Promise \\< any > Defined in: src/lib/stage/application/services/stateService.ts:30 Parameters name string Returns Promise \\< any > Inherited from StageStateService.remove update() update ( name , data ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:25 Parameters name string data ModelConfig Returns Promise \\< void > Inherited from StageStateService.update","title":"StageModelService"},{"location":"source/classes/StageModelService/#class-stagemodelservice","text":"Defined in: src/lib/stage/application/services/stateService.ts:50","title":"Class: StageModelService"},{"location":"source/classes/StageModelService/#extends","text":"StageStateService \\< ModelConfig >","title":"Extends"},{"location":"source/classes/StageModelService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageModelService/#constructor","text":"new StageModelService ( schemaState , helper ): StageModelService Defined in: src/lib/stage/application/services/stateService.ts:7","title":"Constructor"},{"location":"source/classes/StageModelService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageModelService/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageModelService/#returns","text":"StageModelService","title":"Returns"},{"location":"source/classes/StageModelService/#inherited-from","text":"StageStateService<ModelConfig>.constructor","title":"Inherited from"},{"location":"source/classes/StageModelService/#accessors","text":"","title":"Accessors"},{"location":"source/classes/StageModelService/#schemadirpath","text":"","title":"schemaDirPath"},{"location":"source/classes/StageModelService/#get-signature","text":"get schemaDirPath (): string Defined in: src/lib/stage/application/services/stateService.ts:9","title":"Get Signature"},{"location":"source/classes/StageModelService/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/StageModelService/#inherited-from_1","text":"StageStateService.schemaDirPath","title":"Inherited from"},{"location":"source/classes/StageModelService/#methods","text":"","title":"Methods"},{"location":"source/classes/StageModelService/#ddl","text":"ddl ( action , queries ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:59","title":"ddl()"},{"location":"source/classes/StageModelService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#action","text":"string","title":"action"},{"location":"source/classes/StageModelService/#queries","text":"Query []","title":"queries"},{"location":"source/classes/StageModelService/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/StageModelService/#get","text":"get ( name ): Promise \\< ModelConfig > Defined in: src/lib/stage/application/services/stateService.ts:13","title":"get()"},{"location":"source/classes/StageModelService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#name","text":"string","title":"name"},{"location":"source/classes/StageModelService/#returns_3","text":"Promise \\< ModelConfig >","title":"Returns"},{"location":"source/classes/StageModelService/#inherited-from_2","text":"StageStateService.get","title":"Inherited from"},{"location":"source/classes/StageModelService/#getfile","text":"getFile ( name ): string Defined in: src/lib/stage/application/services/stateService.ts:55","title":"getFile()"},{"location":"source/classes/StageModelService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#name_1","text":"string","title":"name"},{"location":"source/classes/StageModelService/#returns_4","text":"string","title":"Returns"},{"location":"source/classes/StageModelService/#overrides","text":"StageStateService.getFile","title":"Overrides"},{"location":"source/classes/StageModelService/#remove","text":"remove ( name ): Promise \\< any > Defined in: src/lib/stage/application/services/stateService.ts:30","title":"remove()"},{"location":"source/classes/StageModelService/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#name_2","text":"string","title":"name"},{"location":"source/classes/StageModelService/#returns_5","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/StageModelService/#inherited-from_3","text":"StageStateService.remove","title":"Inherited from"},{"location":"source/classes/StageModelService/#update","text":"update ( name , data ): Promise \\< void > Defined in: src/lib/stage/application/services/stateService.ts:25","title":"update()"},{"location":"source/classes/StageModelService/#parameters_5","text":"","title":"Parameters"},{"location":"source/classes/StageModelService/#name_3","text":"string","title":"name"},{"location":"source/classes/StageModelService/#data","text":"ModelConfig","title":"data"},{"location":"source/classes/StageModelService/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"source/classes/StageModelService/#inherited-from_4","text":"StageStateService.update","title":"Inherited from"},{"location":"source/classes/StagePull/","text":"Lambda ORM Lambda ORM / StagePull Class: StagePull Defined in: src/lib/stage/application/useCases/pull.ts:5 Extends StageActionDDL Constructors Constructor new StagePull ( executor , stageModelService , schemaState , languages , options , helper ): StagePull Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10 Parameters executor Executor stageModelService StageModelService schemaState SchemaState languages LanguagesService options QueryOptions helper OrmH3lp Returns StagePull Inherited from StageActionDDL . constructor Methods execute() execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/pull.ts:11 Returns Promise \\< ExecuteResult []> Overrides StageActionDDL . execute queries() queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/pull.ts:6 Returns Promise \\< Query []> Overrides StageActionDDL . queries sentence() sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19 Returns Promise \\< any []> Inherited from StageActionDDL . sentence","title":"StagePull"},{"location":"source/classes/StagePull/#class-stagepull","text":"Defined in: src/lib/stage/application/useCases/pull.ts:5","title":"Class: StagePull"},{"location":"source/classes/StagePull/#extends","text":"StageActionDDL","title":"Extends"},{"location":"source/classes/StagePull/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StagePull/#constructor","text":"new StagePull ( executor , stageModelService , schemaState , languages , options , helper ): StagePull Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10","title":"Constructor"},{"location":"source/classes/StagePull/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StagePull/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StagePull/#stagemodelservice","text":"StageModelService","title":"stageModelService"},{"location":"source/classes/StagePull/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StagePull/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StagePull/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StagePull/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StagePull/#returns","text":"StagePull","title":"Returns"},{"location":"source/classes/StagePull/#inherited-from","text":"StageActionDDL . constructor","title":"Inherited from"},{"location":"source/classes/StagePull/#methods","text":"","title":"Methods"},{"location":"source/classes/StagePull/#execute","text":"execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/pull.ts:11","title":"execute()"},{"location":"source/classes/StagePull/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StagePull/#overrides","text":"StageActionDDL . execute","title":"Overrides"},{"location":"source/classes/StagePull/#queries","text":"queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/pull.ts:6","title":"queries()"},{"location":"source/classes/StagePull/#returns_2","text":"Promise \\< Query []>","title":"Returns"},{"location":"source/classes/StagePull/#overrides_1","text":"StageActionDDL . queries","title":"Overrides"},{"location":"source/classes/StagePull/#sentence","text":"sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19","title":"sentence()"},{"location":"source/classes/StagePull/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/StagePull/#inherited-from_1","text":"StageActionDDL . sentence","title":"Inherited from"},{"location":"source/classes/StagePush/","text":"Lambda ORM Lambda ORM / StagePush Class: StagePush Defined in: src/lib/stage/application/useCases/push.ts:5 Extends StageActionDDL Constructors Constructor new StagePush ( executor , stageModelService , schemaState , languages , options , helper ): StagePush Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10 Parameters executor Executor stageModelService StageModelService schemaState SchemaState languages LanguagesService options QueryOptions helper OrmH3lp Returns StagePush Inherited from StageActionDDL . constructor Methods execute() execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/push.ts:11 Returns Promise \\< ExecuteResult []> Overrides StageActionDDL . execute queries() queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/push.ts:6 Returns Promise \\< Query []> Overrides StageActionDDL . queries sentence() sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19 Returns Promise \\< any []> Inherited from StageActionDDL . sentence","title":"StagePush"},{"location":"source/classes/StagePush/#class-stagepush","text":"Defined in: src/lib/stage/application/useCases/push.ts:5","title":"Class: StagePush"},{"location":"source/classes/StagePush/#extends","text":"StageActionDDL","title":"Extends"},{"location":"source/classes/StagePush/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StagePush/#constructor","text":"new StagePush ( executor , stageModelService , schemaState , languages , options , helper ): StagePush Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10","title":"Constructor"},{"location":"source/classes/StagePush/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StagePush/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StagePush/#stagemodelservice","text":"StageModelService","title":"stageModelService"},{"location":"source/classes/StagePush/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StagePush/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StagePush/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StagePush/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StagePush/#returns","text":"StagePush","title":"Returns"},{"location":"source/classes/StagePush/#inherited-from","text":"StageActionDDL . constructor","title":"Inherited from"},{"location":"source/classes/StagePush/#methods","text":"","title":"Methods"},{"location":"source/classes/StagePush/#execute","text":"execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/push.ts:11","title":"execute()"},{"location":"source/classes/StagePush/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StagePush/#overrides","text":"StageActionDDL . execute","title":"Overrides"},{"location":"source/classes/StagePush/#queries","text":"queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/push.ts:6","title":"queries()"},{"location":"source/classes/StagePush/#returns_2","text":"Promise \\< Query []>","title":"Returns"},{"location":"source/classes/StagePush/#overrides_1","text":"StageActionDDL . queries","title":"Overrides"},{"location":"source/classes/StagePush/#sentence","text":"sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19","title":"sentence()"},{"location":"source/classes/StagePush/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/StagePush/#inherited-from_1","text":"StageActionDDL . sentence","title":"Inherited from"},{"location":"source/classes/StageTruncate/","text":"Lambda ORM Lambda ORM / StageTruncate Class: StageTruncate Defined in: src/lib/stage/application/useCases/truncate.ts:4 Extends StageActionDDL Constructors Constructor new StageTruncate ( executor , stageModelService , schemaState , languages , options , helper ): StageTruncate Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10 Parameters executor Executor stageModelService StageModelService schemaState SchemaState languages LanguagesService options QueryOptions helper OrmH3lp Returns StageTruncate Inherited from StageActionDDL . constructor Methods execute() execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/truncate.ts:13 Returns Promise \\< ExecuteResult []> Overrides StageActionDDL . execute queries() queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/truncate.ts:5 Returns Promise \\< Query []> Overrides StageActionDDL . queries sentence() sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19 Returns Promise \\< any []> Inherited from StageActionDDL . sentence","title":"StageTruncate"},{"location":"source/classes/StageTruncate/#class-stagetruncate","text":"Defined in: src/lib/stage/application/useCases/truncate.ts:4","title":"Class: StageTruncate"},{"location":"source/classes/StageTruncate/#extends","text":"StageActionDDL","title":"Extends"},{"location":"source/classes/StageTruncate/#constructors","text":"","title":"Constructors"},{"location":"source/classes/StageTruncate/#constructor","text":"new StageTruncate ( executor , stageModelService , schemaState , languages , options , helper ): StageTruncate Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:10","title":"Constructor"},{"location":"source/classes/StageTruncate/#parameters","text":"","title":"Parameters"},{"location":"source/classes/StageTruncate/#executor","text":"Executor","title":"executor"},{"location":"source/classes/StageTruncate/#stagemodelservice","text":"StageModelService","title":"stageModelService"},{"location":"source/classes/StageTruncate/#schemastate","text":"SchemaState","title":"schemaState"},{"location":"source/classes/StageTruncate/#languages","text":"LanguagesService","title":"languages"},{"location":"source/classes/StageTruncate/#options","text":"QueryOptions","title":"options"},{"location":"source/classes/StageTruncate/#helper","text":"OrmH3lp","title":"helper"},{"location":"source/classes/StageTruncate/#returns","text":"StageTruncate","title":"Returns"},{"location":"source/classes/StageTruncate/#inherited-from","text":"StageActionDDL . constructor","title":"Inherited from"},{"location":"source/classes/StageTruncate/#methods","text":"","title":"Methods"},{"location":"source/classes/StageTruncate/#execute","text":"execute (): Promise \\< ExecuteResult []> Defined in: src/lib/stage/application/useCases/truncate.ts:13","title":"execute()"},{"location":"source/classes/StageTruncate/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/classes/StageTruncate/#overrides","text":"StageActionDDL . execute","title":"Overrides"},{"location":"source/classes/StageTruncate/#queries","text":"queries (): Promise \\< Query []> Defined in: src/lib/stage/application/useCases/truncate.ts:5","title":"queries()"},{"location":"source/classes/StageTruncate/#returns_2","text":"Promise \\< Query []>","title":"Returns"},{"location":"source/classes/StageTruncate/#overrides_1","text":"StageActionDDL . queries","title":"Overrides"},{"location":"source/classes/StageTruncate/#sentence","text":"sentence (): Promise \\< any []> Defined in: src/lib/stage/application/useCases/base/actionDDL.ts:19","title":"sentence()"},{"location":"source/classes/StageTruncate/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/classes/StageTruncate/#inherited-from_1","text":"StageActionDDL . sentence","title":"Inherited from"},{"location":"source/classes/Transaction/","text":"Lambda ORM Lambda ORM / Transaction Class: Transaction Defined in: src/lib/execution/domain/transaction.ts:6 Constructors Constructor new Transaction ( queryExecutor ): Transaction Defined in: src/lib/execution/domain/transaction.ts:7 Parameters queryExecutor QueryExecutor Returns Transaction Accessors options Get Signature get options (): QueryOptions Defined in: src/lib/execution/domain/transaction.ts:15 Returns QueryOptions Methods execute() execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/domain/transaction.ts:11 Parameters query Query data any = {} Returns Promise \\< any >","title":"Transaction"},{"location":"source/classes/Transaction/#class-transaction","text":"Defined in: src/lib/execution/domain/transaction.ts:6","title":"Class: Transaction"},{"location":"source/classes/Transaction/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Transaction/#constructor","text":"new Transaction ( queryExecutor ): Transaction Defined in: src/lib/execution/domain/transaction.ts:7","title":"Constructor"},{"location":"source/classes/Transaction/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Transaction/#queryexecutor","text":"QueryExecutor","title":"queryExecutor"},{"location":"source/classes/Transaction/#returns","text":"Transaction","title":"Returns"},{"location":"source/classes/Transaction/#accessors","text":"","title":"Accessors"},{"location":"source/classes/Transaction/#options","text":"","title":"options"},{"location":"source/classes/Transaction/#get-signature","text":"get options (): QueryOptions Defined in: src/lib/execution/domain/transaction.ts:15","title":"Get Signature"},{"location":"source/classes/Transaction/#returns_1","text":"QueryOptions","title":"Returns"},{"location":"source/classes/Transaction/#methods","text":"","title":"Methods"},{"location":"source/classes/Transaction/#execute","text":"execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/domain/transaction.ts:11","title":"execute()"},{"location":"source/classes/Transaction/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Transaction/#query","text":"Query","title":"query"},{"location":"source/classes/Transaction/#data","text":"any = {}","title":"data"},{"location":"source/classes/Transaction/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/UUIDWrapper/","text":"Lambda ORM Lambda ORM / UUIDWrapper Class: UUIDWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:26 Constructors Constructor new UUIDWrapper (): UUIDWrapper Returns UUIDWrapper Methods empty() empty (): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:29 Returns string fromString() fromString ( text , namespace? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:30 Parameters text string namespace? string Returns string isUuid() isUuid ( id ): boolean Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:28 Parameters id string Returns boolean jsonSchema() jsonSchema (): any Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:31 Returns any v4() v4 (): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:27 Returns string","title":"UUIDWrapper"},{"location":"source/classes/UUIDWrapper/#class-uuidwrapper","text":"Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:26","title":"Class: UUIDWrapper"},{"location":"source/classes/UUIDWrapper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/UUIDWrapper/#constructor","text":"new UUIDWrapper (): UUIDWrapper","title":"Constructor"},{"location":"source/classes/UUIDWrapper/#returns","text":"UUIDWrapper","title":"Returns"},{"location":"source/classes/UUIDWrapper/#methods","text":"","title":"Methods"},{"location":"source/classes/UUIDWrapper/#empty","text":"empty (): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:29","title":"empty()"},{"location":"source/classes/UUIDWrapper/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/UUIDWrapper/#fromstring","text":"fromString ( text , namespace? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:30","title":"fromString()"},{"location":"source/classes/UUIDWrapper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/UUIDWrapper/#text","text":"string","title":"text"},{"location":"source/classes/UUIDWrapper/#namespace","text":"string","title":"namespace?"},{"location":"source/classes/UUIDWrapper/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/UUIDWrapper/#isuuid","text":"isUuid ( id ): boolean Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:28","title":"isUuid()"},{"location":"source/classes/UUIDWrapper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/UUIDWrapper/#id","text":"string","title":"id"},{"location":"source/classes/UUIDWrapper/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/UUIDWrapper/#jsonschema","text":"jsonSchema (): any Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:31","title":"jsonSchema()"},{"location":"source/classes/UUIDWrapper/#returns_4","text":"any","title":"Returns"},{"location":"source/classes/UUIDWrapper/#v4","text":"v4 (): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:27","title":"v4()"},{"location":"source/classes/UUIDWrapper/#returns_5","text":"string","title":"Returns"},{"location":"source/classes/Update/","text":"Lambda ORM Lambda ORM / Update Class: Update Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:42 Extends Clause Constructors Constructor new Update ( pos , name , children , entity , alias ): Update Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Update Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Update"},{"location":"source/classes/Update/#class-update","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:42","title":"Class: Update"},{"location":"source/classes/Update/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Update/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Update/#constructor","text":"new Update ( pos , name , children , entity , alias ): Update Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Update/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Update/#pos","text":"Position","title":"pos"},{"location":"source/classes/Update/#name","text":"string","title":"name"},{"location":"source/classes/Update/#children","text":"Operand []","title":"children"},{"location":"source/classes/Update/#entity","text":"string","title":"entity"},{"location":"source/classes/Update/#alias","text":"string","title":"alias"},{"location":"source/classes/Update/#returns","text":"Update","title":"Returns"},{"location":"source/classes/Update/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Update/#properties","text":"","title":"Properties"},{"location":"source/classes/Update/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Update/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Update/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Update/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Update/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Update/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Update/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Update/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Update/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Update/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Update/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Update/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Update/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Update/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Update/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Update/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Update/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Update/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Update/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Update/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Update/#methods","text":"","title":"Methods"},{"location":"source/classes/Update/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Update/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Update/#context","text":"Context","title":"context"},{"location":"source/classes/Update/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Update/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Update/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Update/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Update/#context_1","text":"Context","title":"context"},{"location":"source/classes/Update/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Update/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Update/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Update/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Update/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Update/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Update/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Update/#context_2","text":"Context","title":"context"},{"location":"source/classes/Update/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Update/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/UpdateSchema/","text":"Lambda ORM Lambda ORM / UpdateSchema Class: UpdateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:4 Constructors Constructor new UpdateSchema ( createEntitiesService ): UpdateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:6 Parameters createEntitiesService CreateEntitiesService Returns UpdateSchema Methods update() update ( schema , data , name ): Type Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:7 Parameters schema Schema data any name string Returns Type","title":"UpdateSchema"},{"location":"source/classes/UpdateSchema/#class-updateschema","text":"Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:4","title":"Class: UpdateSchema"},{"location":"source/classes/UpdateSchema/#constructors","text":"","title":"Constructors"},{"location":"source/classes/UpdateSchema/#constructor","text":"new UpdateSchema ( createEntitiesService ): UpdateSchema Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:6","title":"Constructor"},{"location":"source/classes/UpdateSchema/#parameters","text":"","title":"Parameters"},{"location":"source/classes/UpdateSchema/#createentitiesservice","text":"CreateEntitiesService","title":"createEntitiesService"},{"location":"source/classes/UpdateSchema/#returns","text":"UpdateSchema","title":"Returns"},{"location":"source/classes/UpdateSchema/#methods","text":"","title":"Methods"},{"location":"source/classes/UpdateSchema/#update","text":"update ( schema , data , name ): Type Defined in: node_modules/lambdaorm-base/schema/application/useCases/update.d.ts:7","title":"update()"},{"location":"source/classes/UpdateSchema/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/UpdateSchema/#schema","text":"Schema","title":"schema"},{"location":"source/classes/UpdateSchema/#data","text":"any","title":"data"},{"location":"source/classes/UpdateSchema/#name","text":"string","title":"name"},{"location":"source/classes/UpdateSchema/#returns_1","text":"Type","title":"Returns"},{"location":"source/classes/Upsert/","text":"Lambda ORM Lambda ORM / Upsert Class: Upsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:44 Extends Clause Constructors Constructor new Upsert ( pos , name , children , entity , alias ): Upsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20 Parameters pos Position name string children Operand [] entity string alias string Returns Upsert Inherited from Clause . constructor Properties alias alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18 Inherited from Clause . alias children children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44 Inherited from Clause . children entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19 Inherited from Clause . entity evaluator? optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46 Inherited from Clause . evaluator id? optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48 Inherited from Clause . id name name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42 Inherited from Clause . name number? optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47 Inherited from Clause . number pos readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41 Inherited from Clause . pos returnType? optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45 Inherited from Clause . returnType type readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43 Inherited from Clause . type Methods eval() eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50 Parameters context Context Returns any Inherited from Clause . eval evalAsync() evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51 Parameters context Context Returns Promise \\< any > Inherited from Clause . evalAsync isAsync() isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52 Returns boolean Inherited from Clause . isAsync solve() solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53 Parameters context Context Returns Promise \\< any > Inherited from Clause . solve","title":"Upsert"},{"location":"source/classes/Upsert/#class-upsert","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:44","title":"Class: Upsert"},{"location":"source/classes/Upsert/#extends","text":"Clause","title":"Extends"},{"location":"source/classes/Upsert/#constructors","text":"","title":"Constructors"},{"location":"source/classes/Upsert/#constructor","text":"new Upsert ( pos , name , children , entity , alias ): Upsert Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:20","title":"Constructor"},{"location":"source/classes/Upsert/#parameters","text":"","title":"Parameters"},{"location":"source/classes/Upsert/#pos","text":"Position","title":"pos"},{"location":"source/classes/Upsert/#name","text":"string","title":"name"},{"location":"source/classes/Upsert/#children","text":"Operand []","title":"children"},{"location":"source/classes/Upsert/#entity","text":"string","title":"entity"},{"location":"source/classes/Upsert/#alias","text":"string","title":"alias"},{"location":"source/classes/Upsert/#returns","text":"Upsert","title":"Returns"},{"location":"source/classes/Upsert/#inherited-from","text":"Clause . constructor","title":"Inherited from"},{"location":"source/classes/Upsert/#properties","text":"","title":"Properties"},{"location":"source/classes/Upsert/#alias_1","text":"alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:18","title":"alias"},{"location":"source/classes/Upsert/#inherited-from_1","text":"Clause . alias","title":"Inherited from"},{"location":"source/classes/Upsert/#children_1","text":"children : Operand [] Defined in: node_modules/3xpr/shared/domain/operand.d.ts:44","title":"children"},{"location":"source/classes/Upsert/#inherited-from_2","text":"Clause . children","title":"Inherited from"},{"location":"source/classes/Upsert/#entity_1","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/sentence.d.ts:19","title":"entity"},{"location":"source/classes/Upsert/#inherited-from_3","text":"Clause . entity","title":"Inherited from"},{"location":"source/classes/Upsert/#evaluator","text":"optional evaluator : IEvaluator Defined in: node_modules/3xpr/shared/domain/operand.d.ts:46","title":"evaluator?"},{"location":"source/classes/Upsert/#inherited-from_4","text":"Clause . evaluator","title":"Inherited from"},{"location":"source/classes/Upsert/#id","text":"optional id : string Defined in: node_modules/3xpr/shared/domain/operand.d.ts:48","title":"id?"},{"location":"source/classes/Upsert/#inherited-from_5","text":"Clause . id","title":"Inherited from"},{"location":"source/classes/Upsert/#name_1","text":"name : any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:42","title":"name"},{"location":"source/classes/Upsert/#inherited-from_6","text":"Clause . name","title":"Inherited from"},{"location":"source/classes/Upsert/#number","text":"optional number : number Defined in: node_modules/3xpr/shared/domain/operand.d.ts:47","title":"number?"},{"location":"source/classes/Upsert/#inherited-from_7","text":"Clause . number","title":"Inherited from"},{"location":"source/classes/Upsert/#pos_1","text":"readonly pos : Position Defined in: node_modules/3xpr/shared/domain/operand.d.ts:41","title":"pos"},{"location":"source/classes/Upsert/#inherited-from_8","text":"Clause . pos","title":"Inherited from"},{"location":"source/classes/Upsert/#returntype","text":"optional returnType : Type Defined in: node_modules/3xpr/shared/domain/operand.d.ts:45","title":"returnType?"},{"location":"source/classes/Upsert/#inherited-from_9","text":"Clause . returnType","title":"Inherited from"},{"location":"source/classes/Upsert/#type","text":"readonly type : OperandType Defined in: node_modules/3xpr/shared/domain/operand.d.ts:43","title":"type"},{"location":"source/classes/Upsert/#inherited-from_10","text":"Clause . type","title":"Inherited from"},{"location":"source/classes/Upsert/#methods","text":"","title":"Methods"},{"location":"source/classes/Upsert/#eval","text":"eval ( context ): any Defined in: node_modules/3xpr/shared/domain/operand.d.ts:50","title":"eval()"},{"location":"source/classes/Upsert/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/Upsert/#context","text":"Context","title":"context"},{"location":"source/classes/Upsert/#returns_1","text":"any","title":"Returns"},{"location":"source/classes/Upsert/#inherited-from_11","text":"Clause . eval","title":"Inherited from"},{"location":"source/classes/Upsert/#evalasync","text":"evalAsync ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:51","title":"evalAsync()"},{"location":"source/classes/Upsert/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/Upsert/#context_1","text":"Context","title":"context"},{"location":"source/classes/Upsert/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Upsert/#inherited-from_12","text":"Clause . evalAsync","title":"Inherited from"},{"location":"source/classes/Upsert/#isasync","text":"isAsync (): boolean Defined in: node_modules/3xpr/shared/domain/operand.d.ts:52","title":"isAsync()"},{"location":"source/classes/Upsert/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/Upsert/#inherited-from_13","text":"Clause . isAsync","title":"Inherited from"},{"location":"source/classes/Upsert/#solve","text":"solve ( context ): Promise \\< any > Defined in: node_modules/3xpr/shared/domain/operand.d.ts:53","title":"solve()"},{"location":"source/classes/Upsert/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/Upsert/#context_2","text":"Context","title":"context"},{"location":"source/classes/Upsert/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/classes/Upsert/#inherited-from_14","text":"Clause . solve","title":"Inherited from"},{"location":"source/classes/ValidationError/","text":"Lambda ORM Lambda ORM / ValidationError Class: ValidationError Defined in: src/lib/execution/domain/errors.ts:1 Extends Error Constructors Constructor new ValidationError ( source , entity , expression , sentence , message , data ): ValidationError Defined in: src/lib/execution/domain/errors.ts:2 Parameters source string entity string expression string sentence string message string data any = {} Returns ValidationError Overrides Error.constructor Properties message message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077 Inherited from Error.message name name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076 Inherited from Error.name stack? optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078 Inherited from Error.stack stackTraceLimit static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames. Inherited from Error.stackTraceLimit Methods captureStackTrace() static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a(); Parameters targetObject object constructorOpt? Function Returns void Inherited from Error.captureStackTrace prepareStackTrace() static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149 Parameters err Error stackTraces CallSite [] Returns any See https://v8.dev/docs/stack-trace-api#customizing-stack-traces Inherited from Error.prepareStackTrace","title":"ValidationError"},{"location":"source/classes/ValidationError/#class-validationerror","text":"Defined in: src/lib/execution/domain/errors.ts:1","title":"Class: ValidationError"},{"location":"source/classes/ValidationError/#extends","text":"Error","title":"Extends"},{"location":"source/classes/ValidationError/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ValidationError/#constructor","text":"new ValidationError ( source , entity , expression , sentence , message , data ): ValidationError Defined in: src/lib/execution/domain/errors.ts:2","title":"Constructor"},{"location":"source/classes/ValidationError/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ValidationError/#source","text":"string","title":"source"},{"location":"source/classes/ValidationError/#entity","text":"string","title":"entity"},{"location":"source/classes/ValidationError/#expression","text":"string","title":"expression"},{"location":"source/classes/ValidationError/#sentence","text":"string","title":"sentence"},{"location":"source/classes/ValidationError/#message","text":"string","title":"message"},{"location":"source/classes/ValidationError/#data","text":"any = {}","title":"data"},{"location":"source/classes/ValidationError/#returns","text":"ValidationError","title":"Returns"},{"location":"source/classes/ValidationError/#overrides","text":"Error.constructor","title":"Overrides"},{"location":"source/classes/ValidationError/#properties","text":"","title":"Properties"},{"location":"source/classes/ValidationError/#message_1","text":"message : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1077","title":"message"},{"location":"source/classes/ValidationError/#inherited-from","text":"Error.message","title":"Inherited from"},{"location":"source/classes/ValidationError/#name","text":"name : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1076","title":"name"},{"location":"source/classes/ValidationError/#inherited-from_1","text":"Error.name","title":"Inherited from"},{"location":"source/classes/ValidationError/#stack","text":"optional stack : string Defined in: node_modules/typescript/lib/lib.es5.d.ts:1078","title":"stack?"},{"location":"source/classes/ValidationError/#inherited-from_2","text":"Error.stack","title":"Inherited from"},{"location":"source/classes/ValidationError/#stacktracelimit","text":"static stackTraceLimit : number Defined in: node_modules/@types/node/globals.d.ts:161 The Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj) ). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.","title":"stackTraceLimit"},{"location":"source/classes/ValidationError/#inherited-from_3","text":"Error.stackTraceLimit","title":"Inherited from"},{"location":"source/classes/ValidationError/#methods","text":"","title":"Methods"},{"location":"source/classes/ValidationError/#capturestacktrace","text":"static captureStackTrace ( targetObject , constructorOpt? ): void Defined in: node_modules/@types/node/globals.d.ts:145 Creates a .stack property on targetObject , which when accessed returns a string representing the location in the code at which Error.captureStackTrace() was called. const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack` The first line of the trace will be prefixed with ${myObject.name}: ${myObject.message} . The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt , including constructorOpt , will be omitted from the generated stack trace. The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance: function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();","title":"captureStackTrace()"},{"location":"source/classes/ValidationError/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ValidationError/#targetobject","text":"object","title":"targetObject"},{"location":"source/classes/ValidationError/#constructoropt","text":"Function","title":"constructorOpt?"},{"location":"source/classes/ValidationError/#returns_1","text":"void","title":"Returns"},{"location":"source/classes/ValidationError/#inherited-from_4","text":"Error.captureStackTrace","title":"Inherited from"},{"location":"source/classes/ValidationError/#preparestacktrace","text":"static prepareStackTrace ( err , stackTraces ): any Defined in: node_modules/@types/node/globals.d.ts:149","title":"prepareStackTrace()"},{"location":"source/classes/ValidationError/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ValidationError/#err","text":"Error","title":"err"},{"location":"source/classes/ValidationError/#stacktraces","text":"CallSite []","title":"stackTraces"},{"location":"source/classes/ValidationError/#returns_2","text":"any","title":"Returns"},{"location":"source/classes/ValidationError/#see","text":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","title":"See"},{"location":"source/classes/ValidationError/#inherited-from_5","text":"Error.prepareStackTrace","title":"Inherited from"},{"location":"source/classes/ViewConfigService/","text":"Lambda ORM Lambda ORM / ViewConfigService Class: ViewConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:2 Constructors Constructor new ViewConfigService ( view ): ViewConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:4 Parameters view View Returns ViewConfigService Accessors entities Get Signature get entities (): EntityView [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:8 Returns EntityView [] name Get Signature get name (): string Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:5 Returns string Methods excludeEntity() excludeEntity ( name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:11 Parameters name string Returns boolean get() get (): View Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:6 Returns View getEntity() getEntity ( name ): undefined | EntityView Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:9 Parameters name string Returns undefined | EntityView getProperty() getProperty ( entityName , name ): undefined | PropertyView Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:10 Parameters entityName string name string Returns undefined | PropertyView set() set ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:7 Parameters value View Returns void","title":"ViewConfigService"},{"location":"source/classes/ViewConfigService/#class-viewconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:2","title":"Class: ViewConfigService"},{"location":"source/classes/ViewConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ViewConfigService/#constructor","text":"new ViewConfigService ( view ): ViewConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:4","title":"Constructor"},{"location":"source/classes/ViewConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ViewConfigService/#view","text":"View","title":"view"},{"location":"source/classes/ViewConfigService/#returns","text":"ViewConfigService","title":"Returns"},{"location":"source/classes/ViewConfigService/#accessors","text":"","title":"Accessors"},{"location":"source/classes/ViewConfigService/#entities","text":"","title":"entities"},{"location":"source/classes/ViewConfigService/#get-signature","text":"get entities (): EntityView [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:8","title":"Get Signature"},{"location":"source/classes/ViewConfigService/#returns_1","text":"EntityView []","title":"Returns"},{"location":"source/classes/ViewConfigService/#name","text":"","title":"name"},{"location":"source/classes/ViewConfigService/#get-signature_1","text":"get name (): string Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:5","title":"Get Signature"},{"location":"source/classes/ViewConfigService/#returns_2","text":"string","title":"Returns"},{"location":"source/classes/ViewConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/ViewConfigService/#excludeentity","text":"excludeEntity ( name ): boolean Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:11","title":"excludeEntity()"},{"location":"source/classes/ViewConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ViewConfigService/#name_1","text":"string","title":"name"},{"location":"source/classes/ViewConfigService/#returns_3","text":"boolean","title":"Returns"},{"location":"source/classes/ViewConfigService/#get","text":"get (): View Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:6","title":"get()"},{"location":"source/classes/ViewConfigService/#returns_4","text":"View","title":"Returns"},{"location":"source/classes/ViewConfigService/#getentity","text":"getEntity ( name ): undefined | EntityView Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:9","title":"getEntity()"},{"location":"source/classes/ViewConfigService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ViewConfigService/#name_2","text":"string","title":"name"},{"location":"source/classes/ViewConfigService/#returns_5","text":"undefined | EntityView","title":"Returns"},{"location":"source/classes/ViewConfigService/#getproperty","text":"getProperty ( entityName , name ): undefined | PropertyView Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:10","title":"getProperty()"},{"location":"source/classes/ViewConfigService/#parameters_3","text":"","title":"Parameters"},{"location":"source/classes/ViewConfigService/#entityname","text":"string","title":"entityName"},{"location":"source/classes/ViewConfigService/#name_3","text":"string","title":"name"},{"location":"source/classes/ViewConfigService/#returns_6","text":"undefined | PropertyView","title":"Returns"},{"location":"source/classes/ViewConfigService/#set","text":"set ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewConfigService.d.ts:7","title":"set()"},{"location":"source/classes/ViewConfigService/#parameters_4","text":"","title":"Parameters"},{"location":"source/classes/ViewConfigService/#value","text":"View","title":"value"},{"location":"source/classes/ViewConfigService/#returns_7","text":"void","title":"Returns"},{"location":"source/classes/ViewsConfigService/","text":"Lambda ORM Lambda ORM / ViewsConfigService Class: ViewsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:3 Constructors Constructor new ViewsConfigService (): ViewsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:5 Returns ViewsConfigService Properties views views : View [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:4 Methods get() get ( name? ): View Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:7 Parameters name? string Returns View getInstance() getInstance ( name? ): ViewConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:8 Parameters name? string Returns ViewConfigService load() load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:6 Parameters value View Returns void","title":"ViewsConfigService"},{"location":"source/classes/ViewsConfigService/#class-viewsconfigservice","text":"Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:3","title":"Class: ViewsConfigService"},{"location":"source/classes/ViewsConfigService/#constructors","text":"","title":"Constructors"},{"location":"source/classes/ViewsConfigService/#constructor","text":"new ViewsConfigService (): ViewsConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:5","title":"Constructor"},{"location":"source/classes/ViewsConfigService/#returns","text":"ViewsConfigService","title":"Returns"},{"location":"source/classes/ViewsConfigService/#properties","text":"","title":"Properties"},{"location":"source/classes/ViewsConfigService/#views","text":"views : View [] Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:4","title":"views"},{"location":"source/classes/ViewsConfigService/#methods","text":"","title":"Methods"},{"location":"source/classes/ViewsConfigService/#get","text":"get ( name? ): View Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:7","title":"get()"},{"location":"source/classes/ViewsConfigService/#parameters","text":"","title":"Parameters"},{"location":"source/classes/ViewsConfigService/#name","text":"string","title":"name?"},{"location":"source/classes/ViewsConfigService/#returns_1","text":"View","title":"Returns"},{"location":"source/classes/ViewsConfigService/#getinstance","text":"getInstance ( name? ): ViewConfigService Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:8","title":"getInstance()"},{"location":"source/classes/ViewsConfigService/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/ViewsConfigService/#name_1","text":"string","title":"name?"},{"location":"source/classes/ViewsConfigService/#returns_2","text":"ViewConfigService","title":"Returns"},{"location":"source/classes/ViewsConfigService/#load","text":"load ( value ): void Defined in: node_modules/lambdaorm-base/schema/application/services/config/viewsConfigService.d.ts:6","title":"load()"},{"location":"source/classes/ViewsConfigService/#parameters_2","text":"","title":"Parameters"},{"location":"source/classes/ViewsConfigService/#value","text":"View","title":"value"},{"location":"source/classes/ViewsConfigService/#returns_3","text":"void","title":"Returns"},{"location":"source/classes/YamlWrapper/","text":"Lambda ORM Lambda ORM / YamlWrapper Class: YamlWrapper Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:6 Constructors Constructor new YamlWrapper (): YamlWrapper Returns YamlWrapper Methods dump() dump ( obj? , options? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:8 Parameters obj? any options? any Returns string load() load ( yaml? ): any Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:7 Parameters yaml? null | string Returns any","title":"YamlWrapper"},{"location":"source/classes/YamlWrapper/#class-yamlwrapper","text":"Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:6","title":"Class: YamlWrapper"},{"location":"source/classes/YamlWrapper/#constructors","text":"","title":"Constructors"},{"location":"source/classes/YamlWrapper/#constructor","text":"new YamlWrapper (): YamlWrapper","title":"Constructor"},{"location":"source/classes/YamlWrapper/#returns","text":"YamlWrapper","title":"Returns"},{"location":"source/classes/YamlWrapper/#methods","text":"","title":"Methods"},{"location":"source/classes/YamlWrapper/#dump","text":"dump ( obj? , options? ): string Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:8","title":"dump()"},{"location":"source/classes/YamlWrapper/#parameters","text":"","title":"Parameters"},{"location":"source/classes/YamlWrapper/#obj","text":"any","title":"obj?"},{"location":"source/classes/YamlWrapper/#options","text":"any","title":"options?"},{"location":"source/classes/YamlWrapper/#returns_1","text":"string","title":"Returns"},{"location":"source/classes/YamlWrapper/#load","text":"load ( yaml? ): any Defined in: node_modules/lambdaorm-base/shared/infrastructure/helper.d.ts:7","title":"load()"},{"location":"source/classes/YamlWrapper/#parameters_1","text":"","title":"Parameters"},{"location":"source/classes/YamlWrapper/#yaml","text":"null | string","title":"yaml?"},{"location":"source/classes/YamlWrapper/#returns_2","text":"any","title":"Returns"},{"location":"source/enumerations/Dialect/","text":"Lambda ORM Lambda ORM / Dialect Enumeration: Dialect Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:1 Enumeration Members MariaDB MariaDB : \"MariaDB\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:3 MongoDB MongoDB : \"MongoDB\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:8 MySQL MySQL : \"MySQL\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:2 Oracle Oracle : \"Oracle\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:7 PostgreSQL PostgreSQL : \"PostgreSQL\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:4 SQLjs SQLjs : \"SQLjs\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:6 SqlLite SqlLite : \"SqlLite\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:9 SqlServer SqlServer : \"SqlServer\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:5","title":"Dialect"},{"location":"source/enumerations/Dialect/#enumeration-dialect","text":"Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:1","title":"Enumeration: Dialect"},{"location":"source/enumerations/Dialect/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/Dialect/#mariadb","text":"MariaDB : \"MariaDB\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:3","title":"MariaDB"},{"location":"source/enumerations/Dialect/#mongodb","text":"MongoDB : \"MongoDB\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:8","title":"MongoDB"},{"location":"source/enumerations/Dialect/#mysql","text":"MySQL : \"MySQL\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:2","title":"MySQL"},{"location":"source/enumerations/Dialect/#oracle","text":"Oracle : \"Oracle\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:7","title":"Oracle"},{"location":"source/enumerations/Dialect/#postgresql","text":"PostgreSQL : \"PostgreSQL\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:4","title":"PostgreSQL"},{"location":"source/enumerations/Dialect/#sqljs","text":"SQLjs : \"SQLjs\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:6","title":"SQLjs"},{"location":"source/enumerations/Dialect/#sqllite","text":"SqlLite : \"SqlLite\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:9","title":"SqlLite"},{"location":"source/enumerations/Dialect/#sqlserver","text":"SqlServer : \"SqlServer\" Defined in: node_modules/lambdaorm-base/schema/domain/dialect.d.ts:5","title":"SqlServer"},{"location":"source/enumerations/LogLevel/","text":"Lambda ORM Lambda ORM / LogLevel Enumeration: LogLevel Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:1 Enumeration Members ERROR ERROR : \"error\" Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:3 INFO INFO : \"info\" Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:2","title":"LogLevel"},{"location":"source/enumerations/LogLevel/#enumeration-loglevel","text":"Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:1","title":"Enumeration: LogLevel"},{"location":"source/enumerations/LogLevel/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/LogLevel/#error","text":"ERROR : \"error\" Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:3","title":"ERROR"},{"location":"source/enumerations/LogLevel/#info","text":"INFO : \"info\" Defined in: node_modules/lambdaorm-base/shared/domain/ports/logger.d.ts:2","title":"INFO"},{"location":"source/enumerations/RelationType/","text":"Lambda ORM Lambda ORM / RelationType Enumeration: RelationType Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:4 Enumeration Members manyToOne manyToOne : \"manyToOne\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:6 oneToMany oneToMany : \"oneToMany\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:5 oneToOne oneToOne : \"oneToOne\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:7","title":"RelationType"},{"location":"source/enumerations/RelationType/#enumeration-relationtype","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:4","title":"Enumeration: RelationType"},{"location":"source/enumerations/RelationType/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/RelationType/#manytoone","text":"manyToOne : \"manyToOne\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:6","title":"manyToOne"},{"location":"source/enumerations/RelationType/#onetomany","text":"oneToMany : \"oneToMany\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:5","title":"oneToMany"},{"location":"source/enumerations/RelationType/#onetoone","text":"oneToOne : \"oneToOne\" Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:7","title":"oneToOne"},{"location":"source/enumerations/SentenceAction/","text":"Lambda ORM Lambda ORM / SentenceAction Enumeration: SentenceAction Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:20 Enumeration Members addFk addFk : \"addFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:41 addPk addPk : \"addPk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:39 addProperty addProperty : \"addProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:38 addUk addUk : \"addUk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:40 alterProperty alterProperty : \"alterProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:37 bulkDelete bulkDelete : \"bulkDelete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:26 bulkInsert bulkInsert : \"bulkInsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:25 bulkMerge bulkMerge : \"bulkMerge\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:31 createEntity createEntity : \"createEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:33 createFk createFk : \"createFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:35 createIndex createIndex : \"createIndex\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:36 createSequence createSequence : \"createSequence\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:34 delete delete : \"delete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:29 dropEntity dropEntity : \"dropEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:43 dropFk dropFk : \"dropFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:47 dropIndex dropIndex : \"dropIndex\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:48 dropPk dropPk : \"dropPk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:45 dropProperty dropProperty : \"dropProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:44 dropSequence dropSequence : \"dropSequence\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:42 dropUk dropUk : \"dropUk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:46 foreignKeys foreignKeys : \"foreignKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:56 indexes indexes : \"indexes\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:53 insert insert : \"insert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:23 insertConditional insertConditional : \"insertConditional\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:24 merge merge : \"merge\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:30 objects objects : \"objects\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:49 partitions partitions : \"partitions\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:57 primaryKeys primaryKeys : \"primaryKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:54 select select : \"select\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:22 sequences sequences : \"sequences\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:52 tables tables : \"tables\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:50 truncateEntity truncateEntity : \"truncateEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:32 undefined undefined : \"undefined\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:21 uniqueKeys uniqueKeys : \"uniqueKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:55 update update : \"update\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:27 upsert upsert : \"upsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:28 views views : \"views\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:51","title":"SentenceAction"},{"location":"source/enumerations/SentenceAction/#enumeration-sentenceaction","text":"Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:20","title":"Enumeration: SentenceAction"},{"location":"source/enumerations/SentenceAction/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/SentenceAction/#addfk","text":"addFk : \"addFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:41","title":"addFk"},{"location":"source/enumerations/SentenceAction/#addpk","text":"addPk : \"addPk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:39","title":"addPk"},{"location":"source/enumerations/SentenceAction/#addproperty","text":"addProperty : \"addProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:38","title":"addProperty"},{"location":"source/enumerations/SentenceAction/#adduk","text":"addUk : \"addUk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:40","title":"addUk"},{"location":"source/enumerations/SentenceAction/#alterproperty","text":"alterProperty : \"alterProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:37","title":"alterProperty"},{"location":"source/enumerations/SentenceAction/#bulkdelete","text":"bulkDelete : \"bulkDelete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:26","title":"bulkDelete"},{"location":"source/enumerations/SentenceAction/#bulkinsert","text":"bulkInsert : \"bulkInsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:25","title":"bulkInsert"},{"location":"source/enumerations/SentenceAction/#bulkmerge","text":"bulkMerge : \"bulkMerge\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:31","title":"bulkMerge"},{"location":"source/enumerations/SentenceAction/#createentity","text":"createEntity : \"createEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:33","title":"createEntity"},{"location":"source/enumerations/SentenceAction/#createfk","text":"createFk : \"createFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:35","title":"createFk"},{"location":"source/enumerations/SentenceAction/#createindex","text":"createIndex : \"createIndex\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:36","title":"createIndex"},{"location":"source/enumerations/SentenceAction/#createsequence","text":"createSequence : \"createSequence\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:34","title":"createSequence"},{"location":"source/enumerations/SentenceAction/#delete","text":"delete : \"delete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:29","title":"delete"},{"location":"source/enumerations/SentenceAction/#dropentity","text":"dropEntity : \"dropEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:43","title":"dropEntity"},{"location":"source/enumerations/SentenceAction/#dropfk","text":"dropFk : \"dropFk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:47","title":"dropFk"},{"location":"source/enumerations/SentenceAction/#dropindex","text":"dropIndex : \"dropIndex\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:48","title":"dropIndex"},{"location":"source/enumerations/SentenceAction/#droppk","text":"dropPk : \"dropPk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:45","title":"dropPk"},{"location":"source/enumerations/SentenceAction/#dropproperty","text":"dropProperty : \"dropProperty\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:44","title":"dropProperty"},{"location":"source/enumerations/SentenceAction/#dropsequence","text":"dropSequence : \"dropSequence\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:42","title":"dropSequence"},{"location":"source/enumerations/SentenceAction/#dropuk","text":"dropUk : \"dropUk\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:46","title":"dropUk"},{"location":"source/enumerations/SentenceAction/#foreignkeys","text":"foreignKeys : \"foreignKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:56","title":"foreignKeys"},{"location":"source/enumerations/SentenceAction/#indexes","text":"indexes : \"indexes\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:53","title":"indexes"},{"location":"source/enumerations/SentenceAction/#insert","text":"insert : \"insert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:23","title":"insert"},{"location":"source/enumerations/SentenceAction/#insertconditional","text":"insertConditional : \"insertConditional\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:24","title":"insertConditional"},{"location":"source/enumerations/SentenceAction/#merge","text":"merge : \"merge\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:30","title":"merge"},{"location":"source/enumerations/SentenceAction/#objects","text":"objects : \"objects\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:49","title":"objects"},{"location":"source/enumerations/SentenceAction/#partitions","text":"partitions : \"partitions\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:57","title":"partitions"},{"location":"source/enumerations/SentenceAction/#primarykeys","text":"primaryKeys : \"primaryKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:54","title":"primaryKeys"},{"location":"source/enumerations/SentenceAction/#select","text":"select : \"select\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:22","title":"select"},{"location":"source/enumerations/SentenceAction/#sequences","text":"sequences : \"sequences\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:52","title":"sequences"},{"location":"source/enumerations/SentenceAction/#tables","text":"tables : \"tables\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:50","title":"tables"},{"location":"source/enumerations/SentenceAction/#truncateentity","text":"truncateEntity : \"truncateEntity\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:32","title":"truncateEntity"},{"location":"source/enumerations/SentenceAction/#undefined","text":"undefined : \"undefined\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:21","title":"undefined"},{"location":"source/enumerations/SentenceAction/#uniquekeys","text":"uniqueKeys : \"uniqueKeys\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:55","title":"uniqueKeys"},{"location":"source/enumerations/SentenceAction/#update","text":"update : \"update\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:27","title":"update"},{"location":"source/enumerations/SentenceAction/#upsert","text":"upsert : \"upsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:28","title":"upsert"},{"location":"source/enumerations/SentenceAction/#views","text":"views : \"views\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:51","title":"views"},{"location":"source/enumerations/SentenceCategory/","text":"Lambda ORM Lambda ORM / SentenceCategory Enumeration: SentenceCategory Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:1 Enumeration Members add add : \"add\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:10 alter alter : \"alter\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:11 create create : \"create\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:9 delete delete : \"delete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:7 drop drop : \"drop\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:12 insert insert : \"insert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:4 select select : \"select\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:3 truncate truncate : \"truncate\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:8 undefined undefined : \"undefined\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:2 update update : \"update\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:6 upsert upsert : \"upsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:5","title":"SentenceCategory"},{"location":"source/enumerations/SentenceCategory/#enumeration-sentencecategory","text":"Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:1","title":"Enumeration: SentenceCategory"},{"location":"source/enumerations/SentenceCategory/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/SentenceCategory/#add","text":"add : \"add\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:10","title":"add"},{"location":"source/enumerations/SentenceCategory/#alter","text":"alter : \"alter\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:11","title":"alter"},{"location":"source/enumerations/SentenceCategory/#create","text":"create : \"create\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:9","title":"create"},{"location":"source/enumerations/SentenceCategory/#delete","text":"delete : \"delete\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:7","title":"delete"},{"location":"source/enumerations/SentenceCategory/#drop","text":"drop : \"drop\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:12","title":"drop"},{"location":"source/enumerations/SentenceCategory/#insert","text":"insert : \"insert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:4","title":"insert"},{"location":"source/enumerations/SentenceCategory/#select","text":"select : \"select\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:3","title":"select"},{"location":"source/enumerations/SentenceCategory/#truncate","text":"truncate : \"truncate\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:8","title":"truncate"},{"location":"source/enumerations/SentenceCategory/#undefined","text":"undefined : \"undefined\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:2","title":"undefined"},{"location":"source/enumerations/SentenceCategory/#update","text":"update : \"update\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:6","title":"update"},{"location":"source/enumerations/SentenceCategory/#upsert","text":"upsert : \"upsert\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:5","title":"upsert"},{"location":"source/enumerations/SentenceType/","text":"Lambda ORM Lambda ORM / SentenceType Enumeration: SentenceType Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:14 Enumeration Members ddl ddl : \"ddl\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:17 dml dml : \"dml\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:16 dql dql : \"dql\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:15 metadata metadata : \"metadata\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:18","title":"SentenceType"},{"location":"source/enumerations/SentenceType/#enumeration-sentencetype","text":"Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:14","title":"Enumeration: SentenceType"},{"location":"source/enumerations/SentenceType/#enumeration-members","text":"","title":"Enumeration Members"},{"location":"source/enumerations/SentenceType/#ddl","text":"ddl : \"ddl\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:17","title":"ddl"},{"location":"source/enumerations/SentenceType/#dml","text":"dml : \"dml\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:16","title":"dml"},{"location":"source/enumerations/SentenceType/#dql","text":"dql : \"dql\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:15","title":"dql"},{"location":"source/enumerations/SentenceType/#metadata","text":"metadata : \"metadata\" Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:18","title":"metadata"},{"location":"source/functions/abs/","text":"Lambda ORM Lambda ORM / abs Function: abs() abs ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:165 Get the absolute value Parameters value number Returns number","title":"Abs"},{"location":"source/functions/abs/#function-abs","text":"abs ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:165 Get the absolute value","title":"Function: abs()"},{"location":"source/functions/abs/#parameters","text":"","title":"Parameters"},{"location":"source/functions/abs/#value","text":"number","title":"value"},{"location":"source/functions/abs/#returns","text":"number","title":"Returns"},{"location":"source/functions/acos/","text":"Lambda ORM Lambda ORM / acos Function: acos() acos ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:167 Get the arc cosine Parameters value number Returns number","title":"Acos"},{"location":"source/functions/acos/#function-acos","text":"acos ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:167 Get the arc cosine","title":"Function: acos()"},{"location":"source/functions/acos/#parameters","text":"","title":"Parameters"},{"location":"source/functions/acos/#value","text":"number","title":"value"},{"location":"source/functions/acos/#returns","text":"number","title":"Returns"},{"location":"source/functions/addDay/","text":"Lambda ORM Lambda ORM / addDay Function: addDay() addDay ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:270 Parameters date Date value number Returns Date","title":"addDay"},{"location":"source/functions/addDay/#function-addday","text":"addDay ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:270","title":"Function: addDay()"},{"location":"source/functions/addDay/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addDay/#date","text":"Date","title":"date"},{"location":"source/functions/addDay/#value","text":"number","title":"value"},{"location":"source/functions/addDay/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addHours/","text":"Lambda ORM Lambda ORM / addHours Function: addHours() addHours ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:272 Parameters date Date value number Returns Date","title":"addHours"},{"location":"source/functions/addHours/#function-addhours","text":"addHours ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:272","title":"Function: addHours()"},{"location":"source/functions/addHours/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addHours/#date","text":"Date","title":"date"},{"location":"source/functions/addHours/#value","text":"number","title":"value"},{"location":"source/functions/addHours/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addMinutes/","text":"Lambda ORM Lambda ORM / addMinutes Function: addMinutes() addMinutes ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:274 Parameters date Date value number Returns Date","title":"addMinutes"},{"location":"source/functions/addMinutes/#function-addminutes","text":"addMinutes ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:274","title":"Function: addMinutes()"},{"location":"source/functions/addMinutes/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addMinutes/#date","text":"Date","title":"date"},{"location":"source/functions/addMinutes/#value","text":"number","title":"value"},{"location":"source/functions/addMinutes/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addMonth/","text":"Lambda ORM Lambda ORM / addMonth Function: addMonth() addMonth ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:268 Parameters date Date value number Returns Date","title":"addMonth"},{"location":"source/functions/addMonth/#function-addmonth","text":"addMonth ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:268","title":"Function: addMonth()"},{"location":"source/functions/addMonth/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addMonth/#date","text":"Date","title":"date"},{"location":"source/functions/addMonth/#value","text":"number","title":"value"},{"location":"source/functions/addMonth/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addSeconds/","text":"Lambda ORM Lambda ORM / addSeconds Function: addSeconds() addSeconds ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:276 Parameters date Date value number Returns Date","title":"addSeconds"},{"location":"source/functions/addSeconds/#function-addseconds","text":"addSeconds ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:276","title":"Function: addSeconds()"},{"location":"source/functions/addSeconds/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addSeconds/#date","text":"Date","title":"date"},{"location":"source/functions/addSeconds/#value","text":"number","title":"value"},{"location":"source/functions/addSeconds/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addTime/","text":"Lambda ORM Lambda ORM / addTime Function: addTime() addTime ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:278 Parameters date Date value number Returns Date","title":"addTime"},{"location":"source/functions/addTime/#function-addtime","text":"addTime ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:278","title":"Function: addTime()"},{"location":"source/functions/addTime/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addTime/#date","text":"Date","title":"date"},{"location":"source/functions/addTime/#value","text":"number","title":"value"},{"location":"source/functions/addTime/#returns","text":"Date","title":"Returns"},{"location":"source/functions/addYear/","text":"Lambda ORM Lambda ORM / addYear Function: addYear() addYear ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:266 Parameters date Date value number Returns Date","title":"addYear"},{"location":"source/functions/addYear/#function-addyear","text":"addYear ( date , value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:266","title":"Function: addYear()"},{"location":"source/functions/addYear/#parameters","text":"","title":"Parameters"},{"location":"source/functions/addYear/#date","text":"Date","title":"date"},{"location":"source/functions/addYear/#value","text":"number","title":"value"},{"location":"source/functions/addYear/#returns","text":"Date","title":"Returns"},{"location":"source/functions/as/","text":"Lambda ORM Lambda ORM / as Function: as() as ( value , name ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:153 Parameters value any name any Returns any","title":"As"},{"location":"source/functions/as/#function-as","text":"as ( value , name ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:153","title":"Function: as()"},{"location":"source/functions/as/#parameters","text":"","title":"Parameters"},{"location":"source/functions/as/#value","text":"any","title":"value"},{"location":"source/functions/as/#name","text":"any","title":"name"},{"location":"source/functions/as/#returns","text":"any","title":"Returns"},{"location":"source/functions/asc/","text":"Lambda ORM Lambda ORM / asc Function: asc() asc ( value ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:157 Parameters value any Returns void","title":"Asc"},{"location":"source/functions/asc/#function-asc","text":"asc ( value ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:157","title":"Function: asc()"},{"location":"source/functions/asc/#parameters","text":"","title":"Parameters"},{"location":"source/functions/asc/#value","text":"any","title":"value"},{"location":"source/functions/asc/#returns","text":"void","title":"Returns"},{"location":"source/functions/asin/","text":"Lambda ORM Lambda ORM / asin Function: asin() asin ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:169 Get the arc sine Parameters value number Returns number","title":"Asin"},{"location":"source/functions/asin/#function-asin","text":"asin ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:169 Get the arc sine","title":"Function: asin()"},{"location":"source/functions/asin/#parameters","text":"","title":"Parameters"},{"location":"source/functions/asin/#value","text":"number","title":"value"},{"location":"source/functions/asin/#returns","text":"number","title":"Returns"},{"location":"source/functions/atan/","text":"Lambda ORM Lambda ORM / atan Function: atan() atan ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:171 Get the arc tangent Parameters value number Returns number","title":"Atan"},{"location":"source/functions/atan/#function-atan","text":"atan ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:171 Get the arc tangent","title":"Function: atan()"},{"location":"source/functions/atan/#parameters","text":"","title":"Parameters"},{"location":"source/functions/atan/#value","text":"number","title":"value"},{"location":"source/functions/atan/#returns","text":"number","title":"Returns"},{"location":"source/functions/atan2/","text":"Lambda ORM Lambda ORM / atan2 Function: atan2() atan2 ( x , y ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:173 Get the arc tangent of x and y Parameters x number y number Returns number","title":"Atan2"},{"location":"source/functions/atan2/#function-atan2","text":"atan2 ( x , y ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:173 Get the arc tangent of x and y","title":"Function: atan2()"},{"location":"source/functions/atan2/#parameters","text":"","title":"Parameters"},{"location":"source/functions/atan2/#x","text":"number","title":"x"},{"location":"source/functions/atan2/#y","text":"number","title":"y"},{"location":"source/functions/atan2/#returns","text":"number","title":"Returns"},{"location":"source/functions/avg/","text":"Lambda ORM Lambda ORM / avg Function: avg() avg ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:308 Parameters value any Returns any","title":"Avg"},{"location":"source/functions/avg/#function-avg","text":"avg ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:308","title":"Function: avg()"},{"location":"source/functions/avg/#parameters","text":"","title":"Parameters"},{"location":"source/functions/avg/#value","text":"any","title":"value"},{"location":"source/functions/avg/#returns","text":"any","title":"Returns"},{"location":"source/functions/between/","text":"Lambda ORM Lambda ORM / between Function: between() between ( value , from , to ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:159 Parameters value any from any to any Returns boolean","title":"Between"},{"location":"source/functions/between/#function-between","text":"between ( value , from , to ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:159","title":"Function: between()"},{"location":"source/functions/between/#parameters","text":"","title":"Parameters"},{"location":"source/functions/between/#value","text":"any","title":"value"},{"location":"source/functions/between/#from","text":"any","title":"from"},{"location":"source/functions/between/#to","text":"any","title":"to"},{"location":"source/functions/between/#returns","text":"boolean","title":"Returns"},{"location":"source/functions/ceil/","text":"Lambda ORM Lambda ORM / ceil Function: ceil() ceil ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:175 Get the smallest following integer Parameters value number Returns number","title":"Ceil"},{"location":"source/functions/ceil/#function-ceil","text":"ceil ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:175 Get the smallest following integer","title":"Function: ceil()"},{"location":"source/functions/ceil/#parameters","text":"","title":"Parameters"},{"location":"source/functions/ceil/#value","text":"number","title":"value"},{"location":"source/functions/ceil/#returns","text":"number","title":"Returns"},{"location":"source/functions/chr/","text":"Lambda ORM Lambda ORM / chr Function: chr() chr ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:205 Get character from ASCII code Parameters value string Returns string","title":"Chr"},{"location":"source/functions/chr/#function-chr","text":"chr ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:205 Get character from ASCII code","title":"Function: chr()"},{"location":"source/functions/chr/#parameters","text":"","title":"Parameters"},{"location":"source/functions/chr/#value","text":"string","title":"value"},{"location":"source/functions/chr/#returns","text":"string","title":"Returns"},{"location":"source/functions/concat/","text":"Lambda ORM Lambda ORM / concat Function: concat() concat (... values ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:228 String concatenation Parameters values ... string [] Returns string","title":"Concat"},{"location":"source/functions/concat/#function-concat","text":"concat (... values ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:228 String concatenation","title":"Function: concat()"},{"location":"source/functions/concat/#parameters","text":"","title":"Parameters"},{"location":"source/functions/concat/#values","text":"... string []","title":"values"},{"location":"source/functions/concat/#returns","text":"string","title":"Returns"},{"location":"source/functions/cos/","text":"Lambda ORM Lambda ORM / cos Function: cos() cos ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:177 Get the cosine Parameters value number Returns number","title":"Cos"},{"location":"source/functions/cos/#function-cos","text":"cos ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:177 Get the cosine","title":"Function: cos()"},{"location":"source/functions/cos/#parameters","text":"","title":"Parameters"},{"location":"source/functions/cos/#value","text":"number","title":"value"},{"location":"source/functions/cos/#returns","text":"number","title":"Returns"},{"location":"source/functions/cosh/","text":"Lambda ORM Lambda ORM / cosh Function: cosh() cosh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:179 Get hyperbolic cosine Parameters value number Returns number","title":"Cosh"},{"location":"source/functions/cosh/#function-cosh","text":"cosh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:179 Get hyperbolic cosine","title":"Function: cosh()"},{"location":"source/functions/cosh/#parameters","text":"","title":"Parameters"},{"location":"source/functions/cosh/#value","text":"number","title":"value"},{"location":"source/functions/cosh/#returns","text":"number","title":"Returns"},{"location":"source/functions/count/","text":"Lambda ORM Lambda ORM / count Function: count() count ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:310 Parameters value any Returns any","title":"Count"},{"location":"source/functions/count/#function-count","text":"count ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:310","title":"Function: count()"},{"location":"source/functions/count/#parameters","text":"","title":"Parameters"},{"location":"source/functions/count/#value","text":"any","title":"value"},{"location":"source/functions/count/#returns","text":"any","title":"Returns"},{"location":"source/functions/curTime/","text":"Lambda ORM Lambda ORM / curTime Function: curTime() curTime (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:240 Get the current time Returns Date","title":"curTime"},{"location":"source/functions/curTime/#function-curtime","text":"curTime (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:240 Get the current time","title":"Function: curTime()"},{"location":"source/functions/curTime/#returns","text":"Date","title":"Returns"},{"location":"source/functions/date/","text":"Lambda ORM Lambda ORM / date Function: date() date ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:248 Parameters value any Returns Date","title":"Date"},{"location":"source/functions/date/#function-date","text":"date ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:248","title":"Function: date()"},{"location":"source/functions/date/#parameters","text":"","title":"Parameters"},{"location":"source/functions/date/#value","text":"any","title":"value"},{"location":"source/functions/date/#returns","text":"Date","title":"Returns"},{"location":"source/functions/dateDiff/","text":"Lambda ORM Lambda ORM / dateDiff Function: dateDiff() dateDiff ( date , date2 ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:280 Parameters date Date date2 Date Returns Date","title":"dateDiff"},{"location":"source/functions/dateDiff/#function-datediff","text":"dateDiff ( date , date2 ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:280","title":"Function: dateDiff()"},{"location":"source/functions/dateDiff/#parameters","text":"","title":"Parameters"},{"location":"source/functions/dateDiff/#date","text":"Date","title":"date"},{"location":"source/functions/dateDiff/#date2","text":"Date","title":"date2"},{"location":"source/functions/dateDiff/#returns","text":"Date","title":"Returns"},{"location":"source/functions/dateTime/","text":"Lambda ORM Lambda ORM / dateTime Function: dateTime() dateTime ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:250 Parameters value any Returns Date","title":"dateTime"},{"location":"source/functions/dateTime/#function-datetime","text":"dateTime ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:250","title":"Function: dateTime()"},{"location":"source/functions/dateTime/#parameters","text":"","title":"Parameters"},{"location":"source/functions/dateTime/#value","text":"any","title":"value"},{"location":"source/functions/dateTime/#returns","text":"Date","title":"Returns"},{"location":"source/functions/day/","text":"Lambda ORM Lambda ORM / day Function: day() day ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:256 Parameters value Date Returns number","title":"Day"},{"location":"source/functions/day/#function-day","text":"day ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:256","title":"Function: day()"},{"location":"source/functions/day/#parameters","text":"","title":"Parameters"},{"location":"source/functions/day/#value","text":"Date","title":"value"},{"location":"source/functions/day/#returns","text":"number","title":"Returns"},{"location":"source/functions/desc/","text":"Lambda ORM Lambda ORM / desc Function: desc() desc ( value ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:155 Parameters value any Returns void","title":"Desc"},{"location":"source/functions/desc/#function-desc","text":"desc ( value ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:155","title":"Function: desc()"},{"location":"source/functions/desc/#parameters","text":"","title":"Parameters"},{"location":"source/functions/desc/#value","text":"any","title":"value"},{"location":"source/functions/desc/#returns","text":"void","title":"Returns"},{"location":"source/functions/distinct/","text":"Lambda ORM Lambda ORM / distinct Function: distinct() distinct ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:163 Parameters value any Returns any","title":"Distinct"},{"location":"source/functions/distinct/#function-distinct","text":"distinct ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:163","title":"Function: distinct()"},{"location":"source/functions/distinct/#parameters","text":"","title":"Parameters"},{"location":"source/functions/distinct/#value","text":"any","title":"value"},{"location":"source/functions/distinct/#returns","text":"any","title":"Returns"},{"location":"source/functions/exp/","text":"Lambda ORM Lambda ORM / exp Function: exp() exp ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:181 Raise e to the nth power Parameters value number Returns number","title":"Exp"},{"location":"source/functions/exp/#function-exp","text":"exp ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:181 Raise e to the nth power","title":"Function: exp()"},{"location":"source/functions/exp/#parameters","text":"","title":"Parameters"},{"location":"source/functions/exp/#value","text":"number","title":"value"},{"location":"source/functions/exp/#returns","text":"number","title":"Returns"},{"location":"source/functions/first/","text":"Lambda ORM Lambda ORM / first Function: first() first ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:312 Parameters value any Returns any","title":"First"},{"location":"source/functions/first/#function-first","text":"first ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:312","title":"Function: first()"},{"location":"source/functions/first/#parameters","text":"","title":"Parameters"},{"location":"source/functions/first/#value","text":"any","title":"value"},{"location":"source/functions/first/#returns","text":"any","title":"Returns"},{"location":"source/functions/floor/","text":"Lambda ORM Lambda ORM / floor Function: floor() floor ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:183 Get the largest preceding integer Parameters value number Returns number","title":"Floor"},{"location":"source/functions/floor/#function-floor","text":"floor ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:183 Get the largest preceding integer","title":"Function: floor()"},{"location":"source/functions/floor/#parameters","text":"","title":"Parameters"},{"location":"source/functions/floor/#value","text":"number","title":"value"},{"location":"source/functions/floor/#returns","text":"number","title":"Returns"},{"location":"source/functions/hours/","text":"Lambda ORM Lambda ORM / hours Function: hours() hours ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:260 Parameters value Date Returns number","title":"Hours"},{"location":"source/functions/hours/#function-hours","text":"hours ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:260","title":"Function: hours()"},{"location":"source/functions/hours/#parameters","text":"","title":"Parameters"},{"location":"source/functions/hours/#value","text":"Date","title":"value"},{"location":"source/functions/hours/#returns","text":"number","title":"Returns"},{"location":"source/functions/includes/","text":"Lambda ORM Lambda ORM / includes Function: includes() Call Signature includes ( value , list ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:161 Parameters value any list any [] Returns boolean Call Signature includes ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:238 Returns true if searchString appears as a substring of the result of converting this Parameters field string searchString string Returns string","title":"Includes"},{"location":"source/functions/includes/#function-includes","text":"","title":"Function: includes()"},{"location":"source/functions/includes/#call-signature","text":"includes ( value , list ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:161","title":"Call Signature"},{"location":"source/functions/includes/#parameters","text":"","title":"Parameters"},{"location":"source/functions/includes/#value","text":"any","title":"value"},{"location":"source/functions/includes/#list","text":"any []","title":"list"},{"location":"source/functions/includes/#returns","text":"boolean","title":"Returns"},{"location":"source/functions/includes/#call-signature_1","text":"includes ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:238 Returns true if searchString appears as a substring of the result of converting this","title":"Call Signature"},{"location":"source/functions/includes/#parameters_1","text":"","title":"Parameters"},{"location":"source/functions/includes/#field","text":"string","title":"field"},{"location":"source/functions/includes/#searchstring","text":"string","title":"searchString"},{"location":"source/functions/includes/#returns_1","text":"string","title":"Returns"},{"location":"source/functions/isNotNull/","text":"Lambda ORM Lambda ORM / isNotNull Function: isNotNull() isNotNull ( value ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:306 Parameters value any Returns boolean","title":"isNotNull"},{"location":"source/functions/isNotNull/#function-isnotnull","text":"isNotNull ( value ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:306","title":"Function: isNotNull()"},{"location":"source/functions/isNotNull/#parameters","text":"","title":"Parameters"},{"location":"source/functions/isNotNull/#value","text":"any","title":"value"},{"location":"source/functions/isNotNull/#returns","text":"boolean","title":"Returns"},{"location":"source/functions/isNull/","text":"Lambda ORM Lambda ORM / isNull Function: isNull() isNull ( value ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:304 Parameters value any Returns boolean","title":"isNull"},{"location":"source/functions/isNull/#function-isnull","text":"isNull ( value ): boolean Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:304","title":"Function: isNull()"},{"location":"source/functions/isNull/#parameters","text":"","title":"Parameters"},{"location":"source/functions/isNull/#value","text":"any","title":"value"},{"location":"source/functions/isNull/#returns","text":"boolean","title":"Returns"},{"location":"source/functions/last/","text":"Lambda ORM Lambda ORM / last Function: last() last ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:314 Parameters value any Returns any","title":"Last"},{"location":"source/functions/last/#function-last","text":"last ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:314","title":"Function: last()"},{"location":"source/functions/last/#parameters","text":"","title":"Parameters"},{"location":"source/functions/last/#value","text":"any","title":"value"},{"location":"source/functions/last/#returns","text":"any","title":"Returns"},{"location":"source/functions/like/","text":"Lambda ORM Lambda ORM / like Function: like() like ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:230 Get the position of the first occurrence of substring Parameters field string searchString string Returns string","title":"Like"},{"location":"source/functions/like/#function-like","text":"like ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:230 Get the position of the first occurrence of substring","title":"Function: like()"},{"location":"source/functions/like/#parameters","text":"","title":"Parameters"},{"location":"source/functions/like/#field","text":"string","title":"field"},{"location":"source/functions/like/#searchstring","text":"string","title":"searchString"},{"location":"source/functions/like/#returns","text":"string","title":"Returns"},{"location":"source/functions/ln/","text":"Lambda ORM Lambda ORM / ln Function: ln() ln ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:185 Get natural logarithm of num Parameters value number Returns number","title":"Ln"},{"location":"source/functions/ln/#function-ln","text":"ln ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:185 Get natural logarithm of num","title":"Function: ln()"},{"location":"source/functions/ln/#parameters","text":"","title":"Parameters"},{"location":"source/functions/ln/#value","text":"number","title":"value"},{"location":"source/functions/ln/#returns","text":"number","title":"Returns"},{"location":"source/functions/log/","text":"Lambda ORM Lambda ORM / log Function: log() log ( num1 , num2 ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:187 Get logarithm, base num1, of num2 Parameters num1 number num2 number Returns number","title":"Log"},{"location":"source/functions/log/#function-log","text":"log ( num1 , num2 ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:187 Get logarithm, base num1, of num2","title":"Function: log()"},{"location":"source/functions/log/#parameters","text":"","title":"Parameters"},{"location":"source/functions/log/#num1","text":"number","title":"num1"},{"location":"source/functions/log/#num2","text":"number","title":"num2"},{"location":"source/functions/log/#returns","text":"number","title":"Returns"},{"location":"source/functions/lower/","text":"Lambda ORM Lambda ORM / lower Function: lower() lower ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:208 Lowercase string Parameters value string Returns string","title":"Lower"},{"location":"source/functions/lower/#function-lower","text":"lower ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:208 Lowercase string","title":"Function: lower()"},{"location":"source/functions/lower/#parameters","text":"","title":"Parameters"},{"location":"source/functions/lower/#value","text":"string","title":"value"},{"location":"source/functions/lower/#returns","text":"string","title":"Returns"},{"location":"source/functions/lpad/","text":"Lambda ORM Lambda ORM / lpad Function: lpad() lpad ( value , len , pad ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:210 Pad the left-side of string Parameters value string len number pad string Returns string","title":"Lpad"},{"location":"source/functions/lpad/#function-lpad","text":"lpad ( value , len , pad ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:210 Pad the left-side of string","title":"Function: lpad()"},{"location":"source/functions/lpad/#parameters","text":"","title":"Parameters"},{"location":"source/functions/lpad/#value","text":"string","title":"value"},{"location":"source/functions/lpad/#len","text":"number","title":"len"},{"location":"source/functions/lpad/#pad","text":"string","title":"pad"},{"location":"source/functions/lpad/#returns","text":"string","title":"Returns"},{"location":"source/functions/ltrim/","text":"Lambda ORM Lambda ORM / ltrim Function: ltrim() ltrim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:212 Remove leading chars Parameters value string Returns string","title":"Ltrim"},{"location":"source/functions/ltrim/#function-ltrim","text":"ltrim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:212 Remove leading chars","title":"Function: ltrim()"},{"location":"source/functions/ltrim/#parameters","text":"","title":"Parameters"},{"location":"source/functions/ltrim/#value","text":"string","title":"value"},{"location":"source/functions/ltrim/#returns","text":"string","title":"Returns"},{"location":"source/functions/max/","text":"Lambda ORM Lambda ORM / max Function: max() max ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:316 Parameters value any Returns any","title":"Max"},{"location":"source/functions/max/#function-max","text":"max ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:316","title":"Function: max()"},{"location":"source/functions/max/#parameters","text":"","title":"Parameters"},{"location":"source/functions/max/#value","text":"any","title":"value"},{"location":"source/functions/max/#returns","text":"any","title":"Returns"},{"location":"source/functions/min/","text":"Lambda ORM Lambda ORM / min Function: min() min ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:318 Parameters value any Returns any","title":"Min"},{"location":"source/functions/min/#function-min","text":"min ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:318","title":"Function: min()"},{"location":"source/functions/min/#parameters","text":"","title":"Parameters"},{"location":"source/functions/min/#value","text":"any","title":"value"},{"location":"source/functions/min/#returns","text":"any","title":"Returns"},{"location":"source/functions/minutes/","text":"Lambda ORM Lambda ORM / minutes Function: minutes() minutes ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:262 Parameters value Date Returns number","title":"Minutes"},{"location":"source/functions/minutes/#function-minutes","text":"minutes ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:262","title":"Function: minutes()"},{"location":"source/functions/minutes/#parameters","text":"","title":"Parameters"},{"location":"source/functions/minutes/#value","text":"Date","title":"value"},{"location":"source/functions/minutes/#returns","text":"number","title":"Returns"},{"location":"source/functions/month/","text":"Lambda ORM Lambda ORM / month Function: month() month ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:254 Parameters value Date Returns number","title":"Month"},{"location":"source/functions/month/#function-month","text":"month ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:254","title":"Function: month()"},{"location":"source/functions/month/#parameters","text":"","title":"Parameters"},{"location":"source/functions/month/#value","text":"Date","title":"value"},{"location":"source/functions/month/#returns","text":"number","title":"Returns"},{"location":"source/functions/now/","text":"Lambda ORM Lambda ORM / now Function: now() now (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:244 Get the current dateTime Returns Date","title":"Now"},{"location":"source/functions/now/#function-now","text":"now (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:244 Get the current dateTime","title":"Function: now()"},{"location":"source/functions/now/#returns","text":"Date","title":"Returns"},{"location":"source/functions/nvl/","text":"Lambda ORM Lambda ORM / nvl Function: nvl() nvl ( value , _default ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:300 Parameters value any _default any Returns any","title":"Nvl"},{"location":"source/functions/nvl/#function-nvl","text":"nvl ( value , _default ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:300","title":"Function: nvl()"},{"location":"source/functions/nvl/#parameters","text":"","title":"Parameters"},{"location":"source/functions/nvl/#value","text":"any","title":"value"},{"location":"source/functions/nvl/#_default","text":"any","title":"_default"},{"location":"source/functions/nvl/#returns","text":"any","title":"Returns"},{"location":"source/functions/nvl2/","text":"Lambda ORM Lambda ORM / nvl2 Function: nvl2() nvl2 ( value , a , b ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:302 Parameters value any a any b any Returns any","title":"Nvl2"},{"location":"source/functions/nvl2/#function-nvl2","text":"nvl2 ( value , a , b ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:302","title":"Function: nvl2()"},{"location":"source/functions/nvl2/#parameters","text":"","title":"Parameters"},{"location":"source/functions/nvl2/#value","text":"any","title":"value"},{"location":"source/functions/nvl2/#a","text":"any","title":"a"},{"location":"source/functions/nvl2/#b","text":"any","title":"b"},{"location":"source/functions/nvl2/#returns","text":"any","title":"Returns"},{"location":"source/functions/remainder/","text":"Lambda ORM Lambda ORM / remainder Function: remainder() remainder ( n1 , n2 ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:189 Get remainder Parameters n1 number n2 number Returns number","title":"Remainder"},{"location":"source/functions/remainder/#function-remainder","text":"remainder ( n1 , n2 ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:189 Get remainder","title":"Function: remainder()"},{"location":"source/functions/remainder/#parameters","text":"","title":"Parameters"},{"location":"source/functions/remainder/#n1","text":"number","title":"n1"},{"location":"source/functions/remainder/#n2","text":"number","title":"n2"},{"location":"source/functions/remainder/#returns","text":"number","title":"Returns"},{"location":"source/functions/replace/","text":"Lambda ORM Lambda ORM / replace Function: replace() replace ( value , source , target ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:214 The replace() method searches a string for a specified value and returns a new string where the specified values are replaced. Parameters value string source string target string Returns string","title":"Replace"},{"location":"source/functions/replace/#function-replace","text":"replace ( value , source , target ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:214 The replace() method searches a string for a specified value and returns a new string where the specified values are replaced.","title":"Function: replace()"},{"location":"source/functions/replace/#parameters","text":"","title":"Parameters"},{"location":"source/functions/replace/#value","text":"string","title":"value"},{"location":"source/functions/replace/#source","text":"string","title":"source"},{"location":"source/functions/replace/#target","text":"string","title":"target"},{"location":"source/functions/replace/#returns","text":"string","title":"Returns"},{"location":"source/functions/round/","text":"Lambda ORM Lambda ORM / round Function: round() round ( value , decimals ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:191 Get rounded value Parameters value number decimals number Returns number","title":"Round"},{"location":"source/functions/round/#function-round","text":"round ( value , decimals ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:191 Get rounded value","title":"Function: round()"},{"location":"source/functions/round/#parameters","text":"","title":"Parameters"},{"location":"source/functions/round/#value","text":"number","title":"value"},{"location":"source/functions/round/#decimals","text":"number","title":"decimals"},{"location":"source/functions/round/#returns","text":"number","title":"Returns"},{"location":"source/functions/rpad/","text":"Lambda ORM Lambda ORM / rpad Function: rpad() rpad ( value , len , pad ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:216 Pad the right-side of string Parameters value string len number pad string Returns string","title":"Rpad"},{"location":"source/functions/rpad/#function-rpad","text":"rpad ( value , len , pad ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:216 Pad the right-side of string","title":"Function: rpad()"},{"location":"source/functions/rpad/#parameters","text":"","title":"Parameters"},{"location":"source/functions/rpad/#value","text":"string","title":"value"},{"location":"source/functions/rpad/#len","text":"number","title":"len"},{"location":"source/functions/rpad/#pad","text":"string","title":"pad"},{"location":"source/functions/rpad/#returns","text":"string","title":"Returns"},{"location":"source/functions/rtrim/","text":"Lambda ORM Lambda ORM / rtrim Function: rtrim() rtrim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:218 Remove trailing spaces Parameters value string Returns string","title":"Rtrim"},{"location":"source/functions/rtrim/#function-rtrim","text":"rtrim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:218 Remove trailing spaces","title":"Function: rtrim()"},{"location":"source/functions/rtrim/#parameters","text":"","title":"Parameters"},{"location":"source/functions/rtrim/#value","text":"string","title":"value"},{"location":"source/functions/rtrim/#returns","text":"string","title":"Returns"},{"location":"source/functions/seconds/","text":"Lambda ORM Lambda ORM / seconds Function: seconds() seconds ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:264 Parameters value Date Returns number","title":"Seconds"},{"location":"source/functions/seconds/#function-seconds","text":"seconds ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:264","title":"Function: seconds()"},{"location":"source/functions/seconds/#parameters","text":"","title":"Parameters"},{"location":"source/functions/seconds/#value","text":"Date","title":"value"},{"location":"source/functions/seconds/#returns","text":"number","title":"Returns"},{"location":"source/functions/sign/","text":"Lambda ORM Lambda ORM / sign Function: sign() sign ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:193 Get sign of exp Parameters value number Returns number","title":"Sign"},{"location":"source/functions/sign/#function-sign","text":"sign ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:193 Get sign of exp","title":"Function: sign()"},{"location":"source/functions/sign/#parameters","text":"","title":"Parameters"},{"location":"source/functions/sign/#value","text":"number","title":"value"},{"location":"source/functions/sign/#returns","text":"number","title":"Returns"},{"location":"source/functions/sin/","text":"Lambda ORM Lambda ORM / sin Function: sin() sin ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:195 Get sine Parameters value number Returns number","title":"Sin"},{"location":"source/functions/sin/#function-sin","text":"sin ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:195 Get sine","title":"Function: sin()"},{"location":"source/functions/sin/#parameters","text":"","title":"Parameters"},{"location":"source/functions/sin/#value","text":"number","title":"value"},{"location":"source/functions/sin/#returns","text":"number","title":"Returns"},{"location":"source/functions/sinh/","text":"Lambda ORM Lambda ORM / sinh Function: sinh() sinh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:197 Get hyperbolic sine Parameters value number Returns number","title":"Sinh"},{"location":"source/functions/sinh/#function-sinh","text":"sinh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:197 Get hyperbolic sine","title":"Function: sinh()"},{"location":"source/functions/sinh/#parameters","text":"","title":"Parameters"},{"location":"source/functions/sinh/#value","text":"number","title":"value"},{"location":"source/functions/sinh/#returns","text":"number","title":"Returns"},{"location":"source/functions/source/","text":"Lambda ORM Lambda ORM / source Function: source() source (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:298 Returns string","title":"Source"},{"location":"source/functions/source/#function-source","text":"source (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:298","title":"Function: source()"},{"location":"source/functions/source/#returns","text":"string","title":"Returns"},{"location":"source/functions/startsWith/","text":"Lambda ORM Lambda ORM / startsWith Function: startsWith() startsWith ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:236 Returns true if the sequence of elements of searchString converted to a String is the same as the corresponding elements of this object (converted to a String) starting at position. Otherwise returns false. Parameters field string searchString string Returns string","title":"startsWith"},{"location":"source/functions/startsWith/#function-startswith","text":"startsWith ( field , searchString ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:236 Returns true if the sequence of elements of searchString converted to a String is the same as the corresponding elements of this object (converted to a String) starting at position. Otherwise returns false.","title":"Function: startsWith()"},{"location":"source/functions/startsWith/#parameters","text":"","title":"Parameters"},{"location":"source/functions/startsWith/#field","text":"string","title":"field"},{"location":"source/functions/startsWith/#searchstring","text":"string","title":"searchString"},{"location":"source/functions/startsWith/#returns","text":"string","title":"Returns"},{"location":"source/functions/substr/","text":"Lambda ORM Lambda ORM / substr Function: substr() substr ( value , from , count ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:220 Get a substring of string Parameters value string from number count number Returns string","title":"Substr"},{"location":"source/functions/substr/#function-substr","text":"substr ( value , from , count ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:220 Get a substring of string","title":"Function: substr()"},{"location":"source/functions/substr/#parameters","text":"","title":"Parameters"},{"location":"source/functions/substr/#value","text":"string","title":"value"},{"location":"source/functions/substr/#from","text":"number","title":"from"},{"location":"source/functions/substr/#count","text":"number","title":"count"},{"location":"source/functions/substr/#returns","text":"string","title":"Returns"},{"location":"source/functions/substring/","text":"Lambda ORM Lambda ORM / substring Function: substring() substring ( value , from , count ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:222 Get a substring of string Parameters value string from number count number Returns string","title":"Substring"},{"location":"source/functions/substring/#function-substring","text":"substring ( value , from , count ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:222 Get a substring of string","title":"Function: substring()"},{"location":"source/functions/substring/#parameters","text":"","title":"Parameters"},{"location":"source/functions/substring/#value","text":"string","title":"value"},{"location":"source/functions/substring/#from","text":"number","title":"from"},{"location":"source/functions/substring/#count","text":"number","title":"count"},{"location":"source/functions/substring/#returns","text":"string","title":"Returns"},{"location":"source/functions/sum/","text":"Lambda ORM Lambda ORM / sum Function: sum() sum ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:320 Parameters value any Returns any","title":"Sum"},{"location":"source/functions/sum/#function-sum","text":"sum ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:320","title":"Function: sum()"},{"location":"source/functions/sum/#parameters","text":"","title":"Parameters"},{"location":"source/functions/sum/#value","text":"any","title":"value"},{"location":"source/functions/sum/#returns","text":"any","title":"Returns"},{"location":"source/functions/tan/","text":"Lambda ORM Lambda ORM / tan Function: tan() tan ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:199 Get tangent Parameters value number Returns number","title":"Tan"},{"location":"source/functions/tan/#function-tan","text":"tan ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:199 Get tangent","title":"Function: tan()"},{"location":"source/functions/tan/#parameters","text":"","title":"Parameters"},{"location":"source/functions/tan/#value","text":"number","title":"value"},{"location":"source/functions/tan/#returns","text":"number","title":"Returns"},{"location":"source/functions/tanh/","text":"Lambda ORM Lambda ORM / tanh Function: tanh() tanh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:201 Get hyperbolic tangent Parameters value number Returns number","title":"Tanh"},{"location":"source/functions/tanh/#function-tanh","text":"tanh ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:201 Get hyperbolic tangent","title":"Function: tanh()"},{"location":"source/functions/tanh/#parameters","text":"","title":"Parameters"},{"location":"source/functions/tanh/#value","text":"number","title":"value"},{"location":"source/functions/tanh/#returns","text":"number","title":"Returns"},{"location":"source/functions/time/","text":"Lambda ORM Lambda ORM / time Function: time() time ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:246 Parameters value any Returns Date","title":"Time"},{"location":"source/functions/time/#function-time","text":"time ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:246","title":"Function: time()"},{"location":"source/functions/time/#parameters","text":"","title":"Parameters"},{"location":"source/functions/time/#value","text":"any","title":"value"},{"location":"source/functions/time/#returns","text":"Date","title":"Returns"},{"location":"source/functions/timeDiff/","text":"Lambda ORM Lambda ORM / timeDiff Function: timeDiff() timeDiff ( time , time2 ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:282 Parameters time Date time2 Date Returns Date","title":"timeDiff"},{"location":"source/functions/timeDiff/#function-timediff","text":"timeDiff ( time , time2 ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:282","title":"Function: timeDiff()"},{"location":"source/functions/timeDiff/#parameters","text":"","title":"Parameters"},{"location":"source/functions/timeDiff/#time","text":"Date","title":"time"},{"location":"source/functions/timeDiff/#time2","text":"Date","title":"time2"},{"location":"source/functions/timeDiff/#returns","text":"Date","title":"Returns"},{"location":"source/functions/toDate/","text":"Lambda ORM Lambda ORM / toDate Function: toDate() toDate ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:286 Parameters value any Returns Date","title":"toDate"},{"location":"source/functions/toDate/#function-todate","text":"toDate ( value ): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:286","title":"Function: toDate()"},{"location":"source/functions/toDate/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toDate/#value","text":"any","title":"value"},{"location":"source/functions/toDate/#returns","text":"Date","title":"Returns"},{"location":"source/functions/toDateTime/","text":"Lambda ORM Lambda ORM / toDateTime Function: toDateTime() toDateTime ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:288 Parameters value any Returns string","title":"toDateTime"},{"location":"source/functions/toDateTime/#function-todatetime","text":"toDateTime ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:288","title":"Function: toDateTime()"},{"location":"source/functions/toDateTime/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toDateTime/#value","text":"any","title":"value"},{"location":"source/functions/toDateTime/#returns","text":"string","title":"Returns"},{"location":"source/functions/toJson/","text":"Lambda ORM Lambda ORM / toJson Function: toJson() toJson ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:292 Parameters value any Returns any","title":"toJson"},{"location":"source/functions/toJson/#function-tojson","text":"toJson ( value ): any Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:292","title":"Function: toJson()"},{"location":"source/functions/toJson/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toJson/#value","text":"any","title":"value"},{"location":"source/functions/toJson/#returns","text":"any","title":"Returns"},{"location":"source/functions/toNumber/","text":"Lambda ORM Lambda ORM / toNumber Function: toNumber() toNumber ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:294 Parameters value any Returns number","title":"toNumber"},{"location":"source/functions/toNumber/#function-tonumber","text":"toNumber ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:294","title":"Function: toNumber()"},{"location":"source/functions/toNumber/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toNumber/#value","text":"any","title":"value"},{"location":"source/functions/toNumber/#returns","text":"number","title":"Returns"},{"location":"source/functions/toString/","text":"Lambda ORM Lambda ORM / toString Function: toString() toString ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:284 Parameters value any Returns string","title":"toString"},{"location":"source/functions/toString/#function-tostring","text":"toString ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:284","title":"Function: toString()"},{"location":"source/functions/toString/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toString/#value","text":"any","title":"value"},{"location":"source/functions/toString/#returns","text":"string","title":"Returns"},{"location":"source/functions/toTime/","text":"Lambda ORM Lambda ORM / toTime Function: toTime() toTime ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:290 Parameters value any Returns string","title":"toTime"},{"location":"source/functions/toTime/#function-totime","text":"toTime ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:290","title":"Function: toTime()"},{"location":"source/functions/toTime/#parameters","text":"","title":"Parameters"},{"location":"source/functions/toTime/#value","text":"any","title":"value"},{"location":"source/functions/toTime/#returns","text":"string","title":"Returns"},{"location":"source/functions/today/","text":"Lambda ORM Lambda ORM / today Function: today() today (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:242 Get the current date Returns Date","title":"Today"},{"location":"source/functions/today/#function-today","text":"today (): Date Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:242 Get the current date","title":"Function: today()"},{"location":"source/functions/today/#returns","text":"Date","title":"Returns"},{"location":"source/functions/trim/","text":"Lambda ORM Lambda ORM / trim Function: trim() trim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:224 Remove characters Parameters value string Returns string","title":"Trim"},{"location":"source/functions/trim/#function-trim","text":"trim ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:224 Remove characters","title":"Function: trim()"},{"location":"source/functions/trim/#parameters","text":"","title":"Parameters"},{"location":"source/functions/trim/#value","text":"string","title":"value"},{"location":"source/functions/trim/#returns","text":"string","title":"Returns"},{"location":"source/functions/trunc/","text":"Lambda ORM Lambda ORM / trunc Function: trunc() trunc ( value , decimals ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:203 Truncate num Parameters value number decimals number Returns number","title":"Trunc"},{"location":"source/functions/trunc/#function-trunc","text":"trunc ( value , decimals ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:203 Truncate num","title":"Function: trunc()"},{"location":"source/functions/trunc/#parameters","text":"","title":"Parameters"},{"location":"source/functions/trunc/#value","text":"number","title":"value"},{"location":"source/functions/trunc/#decimals","text":"number","title":"decimals"},{"location":"source/functions/trunc/#returns","text":"number","title":"Returns"},{"location":"source/functions/upper/","text":"Lambda ORM Lambda ORM / upper Function: upper() upper ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:226 Uppercase string Parameters value string Returns string","title":"Upper"},{"location":"source/functions/upper/#function-upper","text":"upper ( value ): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:226 Uppercase string","title":"Function: upper()"},{"location":"source/functions/upper/#parameters","text":"","title":"Parameters"},{"location":"source/functions/upper/#value","text":"string","title":"value"},{"location":"source/functions/upper/#returns","text":"string","title":"Returns"},{"location":"source/functions/user/","text":"Lambda ORM Lambda ORM / user Function: user() user (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:296 Returns string","title":"User"},{"location":"source/functions/user/#function-user","text":"user (): string Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:296","title":"Function: user()"},{"location":"source/functions/user/#returns","text":"string","title":"Returns"},{"location":"source/functions/weekday/","text":"Lambda ORM Lambda ORM / weekday Function: weekday() weekday ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:258 Parameters value Date Returns number","title":"Weekday"},{"location":"source/functions/weekday/#function-weekday","text":"weekday ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:258","title":"Function: weekday()"},{"location":"source/functions/weekday/#parameters","text":"","title":"Parameters"},{"location":"source/functions/weekday/#value","text":"Date","title":"value"},{"location":"source/functions/weekday/#returns","text":"number","title":"Returns"},{"location":"source/functions/year/","text":"Lambda ORM Lambda ORM / year Function: year() year ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:252 Parameters value Date Returns number","title":"Year"},{"location":"source/functions/year/#function-year","text":"year ( value ): number Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:252","title":"Function: year()"},{"location":"source/functions/year/#parameters","text":"","title":"Parameters"},{"location":"source/functions/year/#value","text":"Date","title":"value"},{"location":"source/functions/year/#returns","text":"number","title":"Returns"},{"location":"source/interfaces/ActionObserverArgs/","text":"Lambda ORM Lambda ORM / ActionObserverArgs Interface: ActionObserverArgs Defined in: src/lib/execution/domain/executor.ts:7 Properties action action : SentenceAction Defined in: src/lib/execution/domain/executor.ts:8 category category : SentenceCategory Defined in: src/lib/execution/domain/executor.ts:10 data data : any Defined in: src/lib/execution/domain/executor.ts:16 dialect dialect : string Defined in: src/lib/execution/domain/executor.ts:12 entity entity : string Defined in: src/lib/execution/domain/executor.ts:14 error? optional error : any Defined in: src/lib/execution/domain/executor.ts:19 options options : QueryOptions Defined in: src/lib/execution/domain/executor.ts:17 query query : string Defined in: src/lib/execution/domain/executor.ts:15 result? optional result : any Defined in: src/lib/execution/domain/executor.ts:18 sentence sentence : string Defined in: src/lib/execution/domain/executor.ts:11 source source : string Defined in: src/lib/execution/domain/executor.ts:13 type type : SentenceType Defined in: src/lib/execution/domain/executor.ts:9","title":"ActionObserverArgs"},{"location":"source/interfaces/ActionObserverArgs/#interface-actionobserverargs","text":"Defined in: src/lib/execution/domain/executor.ts:7","title":"Interface: ActionObserverArgs"},{"location":"source/interfaces/ActionObserverArgs/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ActionObserverArgs/#action","text":"action : SentenceAction Defined in: src/lib/execution/domain/executor.ts:8","title":"action"},{"location":"source/interfaces/ActionObserverArgs/#category","text":"category : SentenceCategory Defined in: src/lib/execution/domain/executor.ts:10","title":"category"},{"location":"source/interfaces/ActionObserverArgs/#data","text":"data : any Defined in: src/lib/execution/domain/executor.ts:16","title":"data"},{"location":"source/interfaces/ActionObserverArgs/#dialect","text":"dialect : string Defined in: src/lib/execution/domain/executor.ts:12","title":"dialect"},{"location":"source/interfaces/ActionObserverArgs/#entity","text":"entity : string Defined in: src/lib/execution/domain/executor.ts:14","title":"entity"},{"location":"source/interfaces/ActionObserverArgs/#error","text":"optional error : any Defined in: src/lib/execution/domain/executor.ts:19","title":"error?"},{"location":"source/interfaces/ActionObserverArgs/#options","text":"options : QueryOptions Defined in: src/lib/execution/domain/executor.ts:17","title":"options"},{"location":"source/interfaces/ActionObserverArgs/#query","text":"query : string Defined in: src/lib/execution/domain/executor.ts:15","title":"query"},{"location":"source/interfaces/ActionObserverArgs/#result","text":"optional result : any Defined in: src/lib/execution/domain/executor.ts:18","title":"result?"},{"location":"source/interfaces/ActionObserverArgs/#sentence","text":"sentence : string Defined in: src/lib/execution/domain/executor.ts:11","title":"sentence"},{"location":"source/interfaces/ActionObserverArgs/#source","text":"source : string Defined in: src/lib/execution/domain/executor.ts:13","title":"source"},{"location":"source/interfaces/ActionObserverArgs/#type","text":"type : SentenceType Defined in: src/lib/execution/domain/executor.ts:9","title":"type"},{"location":"source/interfaces/AppPathsConfig/","text":"Lambda ORM Lambda ORM / AppPathsConfig Interface: AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:152 Properties domain? optional domain : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:155 src? optional src : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:153 state? optional state : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:154","title":"AppPathsConfig"},{"location":"source/interfaces/AppPathsConfig/#interface-apppathsconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:152","title":"Interface: AppPathsConfig"},{"location":"source/interfaces/AppPathsConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/AppPathsConfig/#domain","text":"optional domain : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:155","title":"domain?"},{"location":"source/interfaces/AppPathsConfig/#src","text":"optional src : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:153","title":"src?"},{"location":"source/interfaces/AppPathsConfig/#state","text":"optional state : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:154","title":"state?"},{"location":"source/interfaces/ApplicationSchema/","text":"Lambda ORM Lambda ORM / ApplicationSchema Interface: ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:173 Properties end? optional end : TaskConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:176 listeners? optional listeners : ListenerConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:175 start? optional start : TaskConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:174","title":"ApplicationSchema"},{"location":"source/interfaces/ApplicationSchema/#interface-applicationschema","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:173","title":"Interface: ApplicationSchema"},{"location":"source/interfaces/ApplicationSchema/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ApplicationSchema/#end","text":"optional end : TaskConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:176","title":"end?"},{"location":"source/interfaces/ApplicationSchema/#listeners","text":"optional listeners : ListenerConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:175","title":"listeners?"},{"location":"source/interfaces/ApplicationSchema/#start","text":"optional start : TaskConfig [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:174","title":"start?"},{"location":"source/interfaces/Behavior/","text":"Lambda ORM Lambda ORM / Behavior Interface: Behavior Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:196 Properties alias? optional alias : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:197 expression expression : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:199 property property : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:198","title":"Behavior"},{"location":"source/interfaces/Behavior/#interface-behavior","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:196","title":"Interface: Behavior"},{"location":"source/interfaces/Behavior/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Behavior/#alias","text":"optional alias : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:197","title":"alias?"},{"location":"source/interfaces/Behavior/#expression","text":"expression : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:199","title":"expression"},{"location":"source/interfaces/Behavior/#property","text":"property : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:198","title":"property"},{"location":"source/interfaces/Connection/","text":"Lambda ORM Lambda ORM / Connection Interface: Connection Defined in: src/lib/connection/domain/ports/connection.ts:5 Properties cnx cnx : any Defined in: src/lib/connection/domain/ports/connection.ts:7 id id : string Defined in: src/lib/connection/domain/ports/connection.ts:6 inTransaction inTransaction : boolean Defined in: src/lib/connection/domain/ports/connection.ts:9 maxChunkSizeIdsOnSelect maxChunkSizeIdsOnSelect : number Defined in: src/lib/connection/domain/ports/connection.ts:11 maxChunkSizeOnBulkInsert maxChunkSizeOnBulkInsert : number Defined in: src/lib/connection/domain/ports/connection.ts:12 maxChunkSizeOnSelect maxChunkSizeOnSelect : number Defined in: src/lib/connection/domain/ports/connection.ts:10 pool pool : any Defined in: src/lib/connection/domain/ports/connection.ts:8 Accessors config Get Signature get config (): ConnectionConfig Defined in: src/lib/connection/domain/ports/connection.ts:13 Returns ConnectionConfig Methods addFk() addFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:45 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > addPk() addPk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:43 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > addProperty() addProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:42 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > addUk() addUk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:44 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > alterProperty() alterProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:41 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > beginTransaction() beginTransaction (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:32 Returns Promise \\< void > bulkDelete() bulkDelete ( _mapping , _dialect , _query , _array ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:26 Parameters _mapping MappingConfigService _dialect DialectService _query Query _array any [] Returns Promise \\< number > bulkInsert() bulkInsert ( mapping , dialect , query , array ): Promise \\< any []> Defined in: src/lib/connection/domain/ports/connection.ts:21 Parameters mapping MappingConfigService dialect DialectService query Query array any [] Returns Promise \\< any []> bulkMerge() bulkMerge ( mapping , dialect , query , array ): Promise \\< any []> Defined in: src/lib/connection/domain/ports/connection.ts:28 Parameters mapping MappingConfigService dialect DialectService query Query array any [] Returns Promise \\< any []> bulkUpdate() bulkUpdate ( _mapping , _dialect , _query , _array ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:24 Parameters _mapping MappingConfigService _dialect DialectService _query Query _array any [] Returns Promise \\< number > commit() commit (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:33 Returns Promise \\< void > createEntity() createEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:37 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > createFk() createFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:39 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > createIndex() createIndex ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:40 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > createSequence() createSequence ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:38 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > delete() delete ( mapping , dialect , query , data ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:25 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< number > dropEntity() dropEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:47 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropFk() dropFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:51 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropIndex() dropIndex ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:52 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropPk() dropPk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:49 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropProperty() dropProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:48 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropSequence() dropSequence ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:46 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > dropUk() dropUk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:50 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > end() end (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:14 Returns Promise \\< void > execute() execute ( query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:29 Parameters query Query Returns Promise \\< any > executeDDL() executeDDL ( query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:30 Parameters query Query Returns Promise \\< any > executeSentence() executeSentence ( sentence ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:31 Parameters sentence any Returns Promise \\< any > foreignKeys() foreignKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:58 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > indexes() indexes ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:61 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > insert() insert ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:19 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > insertConditional() insertConditional ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:20 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > merge() merge ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:27 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > objects() objects ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:53 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > partitions() partitions ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:56 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > primaryKeys() primaryKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:59 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > rollback() rollback (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:34 Returns Promise \\< void > select() select ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:18 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > sequences() sequences ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:57 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > tables() tables ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:54 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > truncateEntity() truncateEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:36 Parameters _mapping MappingConfigService query Query Returns Promise \\< any > uniqueKeys() uniqueKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:60 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > update() update ( mapping , dialect , query , data ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:22 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< number > upsert() upsert ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:23 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > views() views ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:55 Parameters mapping MappingConfigService dialect DialectService query Query data Data Returns Promise \\< any > writeDate() writeDate ( value , mapping , dialect ): any Defined in: src/lib/connection/domain/ports/connection.ts:15 Parameters value any mapping MappingConfigService dialect DialectService Returns any writeTime() writeTime ( value , mapping , dialect ): any Defined in: src/lib/connection/domain/ports/connection.ts:16 Parameters value any mapping MappingConfigService dialect DialectService Returns any","title":"Connection"},{"location":"source/interfaces/Connection/#interface-connection","text":"Defined in: src/lib/connection/domain/ports/connection.ts:5","title":"Interface: Connection"},{"location":"source/interfaces/Connection/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Connection/#cnx","text":"cnx : any Defined in: src/lib/connection/domain/ports/connection.ts:7","title":"cnx"},{"location":"source/interfaces/Connection/#id","text":"id : string Defined in: src/lib/connection/domain/ports/connection.ts:6","title":"id"},{"location":"source/interfaces/Connection/#intransaction","text":"inTransaction : boolean Defined in: src/lib/connection/domain/ports/connection.ts:9","title":"inTransaction"},{"location":"source/interfaces/Connection/#maxchunksizeidsonselect","text":"maxChunkSizeIdsOnSelect : number Defined in: src/lib/connection/domain/ports/connection.ts:11","title":"maxChunkSizeIdsOnSelect"},{"location":"source/interfaces/Connection/#maxchunksizeonbulkinsert","text":"maxChunkSizeOnBulkInsert : number Defined in: src/lib/connection/domain/ports/connection.ts:12","title":"maxChunkSizeOnBulkInsert"},{"location":"source/interfaces/Connection/#maxchunksizeonselect","text":"maxChunkSizeOnSelect : number Defined in: src/lib/connection/domain/ports/connection.ts:10","title":"maxChunkSizeOnSelect"},{"location":"source/interfaces/Connection/#pool","text":"pool : any Defined in: src/lib/connection/domain/ports/connection.ts:8","title":"pool"},{"location":"source/interfaces/Connection/#accessors","text":"","title":"Accessors"},{"location":"source/interfaces/Connection/#config","text":"","title":"config"},{"location":"source/interfaces/Connection/#get-signature","text":"get config (): ConnectionConfig Defined in: src/lib/connection/domain/ports/connection.ts:13","title":"Get Signature"},{"location":"source/interfaces/Connection/#returns","text":"ConnectionConfig","title":"Returns"},{"location":"source/interfaces/Connection/#methods","text":"","title":"Methods"},{"location":"source/interfaces/Connection/#addfk","text":"addFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:45","title":"addFk()"},{"location":"source/interfaces/Connection/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#addpk","text":"addPk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:43","title":"addPk()"},{"location":"source/interfaces/Connection/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_1","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_1","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#addproperty","text":"addProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:42","title":"addProperty()"},{"location":"source/interfaces/Connection/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_2","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_2","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_3","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#adduk","text":"addUk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:44","title":"addUk()"},{"location":"source/interfaces/Connection/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_3","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_3","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_4","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#alterproperty","text":"alterProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:41","title":"alterProperty()"},{"location":"source/interfaces/Connection/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_4","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_4","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_5","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#begintransaction","text":"beginTransaction (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:32","title":"beginTransaction()"},{"location":"source/interfaces/Connection/#returns_6","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/Connection/#bulkdelete","text":"bulkDelete ( _mapping , _dialect , _query , _array ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:26","title":"bulkDelete()"},{"location":"source/interfaces/Connection/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_5","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#_dialect","text":"DialectService","title":"_dialect"},{"location":"source/interfaces/Connection/#_query","text":"Query","title":"_query"},{"location":"source/interfaces/Connection/#_array","text":"any []","title":"_array"},{"location":"source/interfaces/Connection/#returns_7","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/Connection/#bulkinsert","text":"bulkInsert ( mapping , dialect , query , array ): Promise \\< any []> Defined in: src/lib/connection/domain/ports/connection.ts:21","title":"bulkInsert()"},{"location":"source/interfaces/Connection/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_5","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#array","text":"any []","title":"array"},{"location":"source/interfaces/Connection/#returns_8","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/Connection/#bulkmerge","text":"bulkMerge ( mapping , dialect , query , array ): Promise \\< any []> Defined in: src/lib/connection/domain/ports/connection.ts:28","title":"bulkMerge()"},{"location":"source/interfaces/Connection/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_1","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_1","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_6","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#array_1","text":"any []","title":"array"},{"location":"source/interfaces/Connection/#returns_9","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/Connection/#bulkupdate","text":"bulkUpdate ( _mapping , _dialect , _query , _array ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:24","title":"bulkUpdate()"},{"location":"source/interfaces/Connection/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_6","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#_dialect_1","text":"DialectService","title":"_dialect"},{"location":"source/interfaces/Connection/#_query_1","text":"Query","title":"_query"},{"location":"source/interfaces/Connection/#_array_1","text":"any []","title":"_array"},{"location":"source/interfaces/Connection/#returns_10","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/Connection/#commit","text":"commit (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:33","title":"commit()"},{"location":"source/interfaces/Connection/#returns_11","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/Connection/#createentity","text":"createEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:37","title":"createEntity()"},{"location":"source/interfaces/Connection/#parameters_9","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_7","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_7","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_12","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#createfk","text":"createFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:39","title":"createFk()"},{"location":"source/interfaces/Connection/#parameters_10","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_8","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_8","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_13","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#createindex","text":"createIndex ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:40","title":"createIndex()"},{"location":"source/interfaces/Connection/#parameters_11","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_9","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_9","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_14","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#createsequence","text":"createSequence ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:38","title":"createSequence()"},{"location":"source/interfaces/Connection/#parameters_12","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_10","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_10","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_15","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#delete","text":"delete ( mapping , dialect , query , data ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:25","title":"delete()"},{"location":"source/interfaces/Connection/#parameters_13","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_2","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_2","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_11","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_16","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/Connection/#dropentity","text":"dropEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:47","title":"dropEntity()"},{"location":"source/interfaces/Connection/#parameters_14","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_11","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_12","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_17","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#dropfk","text":"dropFk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:51","title":"dropFk()"},{"location":"source/interfaces/Connection/#parameters_15","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_12","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_13","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_18","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#dropindex","text":"dropIndex ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:52","title":"dropIndex()"},{"location":"source/interfaces/Connection/#parameters_16","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_13","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_14","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_19","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#droppk","text":"dropPk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:49","title":"dropPk()"},{"location":"source/interfaces/Connection/#parameters_17","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_14","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_15","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_20","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#dropproperty","text":"dropProperty ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:48","title":"dropProperty()"},{"location":"source/interfaces/Connection/#parameters_18","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_15","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_16","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_21","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#dropsequence","text":"dropSequence ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:46","title":"dropSequence()"},{"location":"source/interfaces/Connection/#parameters_19","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_16","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_17","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_22","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#dropuk","text":"dropUk ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:50","title":"dropUk()"},{"location":"source/interfaces/Connection/#parameters_20","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_17","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_18","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_23","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#end","text":"end (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:14","title":"end()"},{"location":"source/interfaces/Connection/#returns_24","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/Connection/#execute","text":"execute ( query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:29","title":"execute()"},{"location":"source/interfaces/Connection/#parameters_21","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#query_19","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_25","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#executeddl","text":"executeDDL ( query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:30","title":"executeDDL()"},{"location":"source/interfaces/Connection/#parameters_22","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#query_20","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_26","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#executesentence","text":"executeSentence ( sentence ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:31","title":"executeSentence()"},{"location":"source/interfaces/Connection/#parameters_23","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#sentence","text":"any","title":"sentence"},{"location":"source/interfaces/Connection/#returns_27","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#foreignkeys","text":"foreignKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:58","title":"foreignKeys()"},{"location":"source/interfaces/Connection/#parameters_24","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_3","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_3","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_21","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_1","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_28","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#indexes","text":"indexes ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:61","title":"indexes()"},{"location":"source/interfaces/Connection/#parameters_25","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_4","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_4","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_22","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_2","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_29","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#insert","text":"insert ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:19","title":"insert()"},{"location":"source/interfaces/Connection/#parameters_26","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_5","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_5","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_23","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_3","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_30","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#insertconditional","text":"insertConditional ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:20","title":"insertConditional()"},{"location":"source/interfaces/Connection/#parameters_27","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_6","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_6","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_24","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_4","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_31","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#merge","text":"merge ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:27","title":"merge()"},{"location":"source/interfaces/Connection/#parameters_28","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_7","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_7","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_25","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_5","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_32","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#objects","text":"objects ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:53","title":"objects()"},{"location":"source/interfaces/Connection/#parameters_29","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_8","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_8","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_26","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_6","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_33","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#partitions","text":"partitions ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:56","title":"partitions()"},{"location":"source/interfaces/Connection/#parameters_30","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_9","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_9","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_27","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_7","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_34","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#primarykeys","text":"primaryKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:59","title":"primaryKeys()"},{"location":"source/interfaces/Connection/#parameters_31","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_10","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_10","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_28","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_8","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_35","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#rollback","text":"rollback (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connection.ts:34","title":"rollback()"},{"location":"source/interfaces/Connection/#returns_36","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/Connection/#select","text":"select ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:18","title":"select()"},{"location":"source/interfaces/Connection/#parameters_32","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_11","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_11","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_29","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_9","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_37","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#sequences","text":"sequences ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:57","title":"sequences()"},{"location":"source/interfaces/Connection/#parameters_33","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_12","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_12","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_30","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_10","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_38","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#tables","text":"tables ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:54","title":"tables()"},{"location":"source/interfaces/Connection/#parameters_34","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_13","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_13","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_31","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_11","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_39","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#truncateentity","text":"truncateEntity ( _mapping , query ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:36","title":"truncateEntity()"},{"location":"source/interfaces/Connection/#parameters_35","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#_mapping_18","text":"MappingConfigService","title":"_mapping"},{"location":"source/interfaces/Connection/#query_32","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#returns_40","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#uniquekeys","text":"uniqueKeys ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:60","title":"uniqueKeys()"},{"location":"source/interfaces/Connection/#parameters_36","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_14","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_14","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_33","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_12","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_41","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#update","text":"update ( mapping , dialect , query , data ): Promise \\< number > Defined in: src/lib/connection/domain/ports/connection.ts:22","title":"update()"},{"location":"source/interfaces/Connection/#parameters_37","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_15","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_15","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_34","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_13","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_42","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/Connection/#upsert","text":"upsert ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:23","title":"upsert()"},{"location":"source/interfaces/Connection/#parameters_38","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_16","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_16","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_35","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_14","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_43","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#views","text":"views ( mapping , dialect , query , data ): Promise \\< any > Defined in: src/lib/connection/domain/ports/connection.ts:55","title":"views()"},{"location":"source/interfaces/Connection/#parameters_39","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#mapping_17","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_17","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#query_36","text":"Query","title":"query"},{"location":"source/interfaces/Connection/#data_15","text":"Data","title":"data"},{"location":"source/interfaces/Connection/#returns_44","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Connection/#writedate","text":"writeDate ( value , mapping , dialect ): any Defined in: src/lib/connection/domain/ports/connection.ts:15","title":"writeDate()"},{"location":"source/interfaces/Connection/#parameters_40","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#value","text":"any","title":"value"},{"location":"source/interfaces/Connection/#mapping_18","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_18","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#returns_45","text":"any","title":"Returns"},{"location":"source/interfaces/Connection/#writetime","text":"writeTime ( value , mapping , dialect ): any Defined in: src/lib/connection/domain/ports/connection.ts:16","title":"writeTime()"},{"location":"source/interfaces/Connection/#parameters_41","text":"","title":"Parameters"},{"location":"source/interfaces/Connection/#value_1","text":"any","title":"value"},{"location":"source/interfaces/Connection/#mapping_19","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Connection/#dialect_19","text":"DialectService","title":"dialect"},{"location":"source/interfaces/Connection/#returns_46","text":"any","title":"Returns"},{"location":"source/interfaces/ConnectionConfig/","text":"Lambda ORM Lambda ORM / ConnectionConfig Interface: ConnectionConfig Defined in: src/lib/connection/domain/connection.ts:1 Properties connection connection : any Defined in: src/lib/connection/domain/connection.ts:4 dialect dialect : string Defined in: src/lib/connection/domain/connection.ts:3 name name : string Defined in: src/lib/connection/domain/connection.ts:2","title":"ConnectionConfig"},{"location":"source/interfaces/ConnectionConfig/#interface-connectionconfig","text":"Defined in: src/lib/connection/domain/connection.ts:1","title":"Interface: ConnectionConfig"},{"location":"source/interfaces/ConnectionConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ConnectionConfig/#connection","text":"connection : any Defined in: src/lib/connection/domain/connection.ts:4","title":"connection"},{"location":"source/interfaces/ConnectionConfig/#dialect","text":"dialect : string Defined in: src/lib/connection/domain/connection.ts:3","title":"dialect"},{"location":"source/interfaces/ConnectionConfig/#name","text":"name : string Defined in: src/lib/connection/domain/connection.ts:2","title":"name"},{"location":"source/interfaces/ConnectionPool/","text":"Lambda ORM Lambda ORM / ConnectionPool Interface: ConnectionPool Defined in: src/lib/connection/domain/ports/connectionPool.ts:4 Properties config config : ConnectionConfig Defined in: src/lib/connection/domain/ports/connectionPool.ts:5 Methods acquire() acquire (): Promise \\< Connection > Defined in: src/lib/connection/domain/ports/connectionPool.ts:7 Returns Promise \\< Connection > end() end (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:9 Returns Promise \\< void > init() init (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:6 Returns Promise \\< void > release() release ( connection ): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:8 Parameters connection Connection Returns Promise \\< void >","title":"ConnectionPool"},{"location":"source/interfaces/ConnectionPool/#interface-connectionpool","text":"Defined in: src/lib/connection/domain/ports/connectionPool.ts:4","title":"Interface: ConnectionPool"},{"location":"source/interfaces/ConnectionPool/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ConnectionPool/#config","text":"config : ConnectionConfig Defined in: src/lib/connection/domain/ports/connectionPool.ts:5","title":"config"},{"location":"source/interfaces/ConnectionPool/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ConnectionPool/#acquire","text":"acquire (): Promise \\< Connection > Defined in: src/lib/connection/domain/ports/connectionPool.ts:7","title":"acquire()"},{"location":"source/interfaces/ConnectionPool/#returns","text":"Promise \\< Connection >","title":"Returns"},{"location":"source/interfaces/ConnectionPool/#end","text":"end (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:9","title":"end()"},{"location":"source/interfaces/ConnectionPool/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/ConnectionPool/#init","text":"init (): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:6","title":"init()"},{"location":"source/interfaces/ConnectionPool/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/ConnectionPool/#release","text":"release ( connection ): Promise \\< void > Defined in: src/lib/connection/domain/ports/connectionPool.ts:8","title":"release()"},{"location":"source/interfaces/ConnectionPool/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ConnectionPool/#connection","text":"Connection","title":"connection"},{"location":"source/interfaces/ConnectionPool/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/Constraint/","text":"Lambda ORM Lambda ORM / Constraint Interface: Constraint Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:19 Properties condition condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:21 message message : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:20","title":"Constraint"},{"location":"source/interfaces/Constraint/#interface-constraint","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:19","title":"Interface: Constraint"},{"location":"source/interfaces/Constraint/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Constraint/#condition","text":"condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:21","title":"condition"},{"location":"source/interfaces/Constraint/#message","text":"message : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:20","title":"message"},{"location":"source/interfaces/DdlBuilder/","text":"Lambda ORM Lambda ORM / DdlBuilder Interface: DdlBuilder Defined in: src/lib/language/domain/ports/DdlBuilder.ts:4 Methods addFk() addFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:24 Parameters entity EntityMapping relation Relation Returns undefined | Query addPk() addPk ( entity , primaryKey ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:22 Parameters entity EntityMapping primaryKey string [] Returns undefined | Query addProperty() addProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:14 Parameters entity EntityMapping property PropertyMapping Returns undefined | Query addUk() addUk ( entity , uniqueKey ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:23 Parameters entity EntityMapping uniqueKey string [] Returns undefined | Query ~~alterProperty()~~ alterProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:18 Parameters entity EntityMapping property PropertyMapping Returns undefined | Query Deprecated Use alterPropertyType or alterPropertyRequired alterPropertyRequired() alterPropertyRequired ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:20 Parameters entity EntityMapping property PropertyMapping Returns undefined | Query alterPropertyType() alterPropertyType ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:19 Parameters entity EntityMapping property PropertyMapping Returns undefined | Query createEntity() createEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:13 Parameters entity EntityMapping Returns undefined | Query createFk() createFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:25 Parameters entity EntityMapping relation Relation Returns undefined | Query createIndex() createIndex ( entity , index ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:26 Parameters entity EntityMapping index Index Returns undefined | Query createSequence() createSequence ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:27 Parameters entity EntityMapping Returns undefined | Query dropEntity() dropEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:10 Parameters entity EntityMapping Returns undefined | Query dropFk() dropFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:7 Parameters entity EntityMapping relation Relation Returns undefined | Query dropIndex() dropIndex ( entity , index ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:8 Parameters entity EntityMapping index Index Returns undefined | Query dropPk() dropPk ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:11 Parameters entity EntityMapping Returns undefined | Query dropProperty() dropProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:21 Parameters entity EntityMapping property PropertyMapping Returns undefined | Query dropSequence() dropSequence ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:9 Parameters entity EntityMapping Returns undefined | Query dropUk() dropUk ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:12 Parameters entity EntityMapping Returns undefined | Query foreignKeys() foreignKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:33 Parameters tableNames string [] Returns Query indexes() indexes ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:34 Parameters tableNames string [] Returns Query objects() objects (): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:28 Returns Query primaryKeys() primaryKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:31 Parameters tableNames string [] Returns Query sequences() sequences (): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:35 Returns Query setNull() setNull ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:6 Parameters entity EntityMapping relation Relation Returns undefined | Query tables() tables ( names ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:29 Parameters names string [] Returns Query truncateEntity() truncateEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:5 Parameters entity EntityMapping Returns undefined | Query uniqueKeys() uniqueKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:32 Parameters tableNames string [] Returns Query views() views ( names ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:30 Parameters names string [] Returns Query","title":"DdlBuilder"},{"location":"source/interfaces/DdlBuilder/#interface-ddlbuilder","text":"Defined in: src/lib/language/domain/ports/DdlBuilder.ts:4","title":"Interface: DdlBuilder"},{"location":"source/interfaces/DdlBuilder/#methods","text":"","title":"Methods"},{"location":"source/interfaces/DdlBuilder/#addfk","text":"addFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:24","title":"addFk()"},{"location":"source/interfaces/DdlBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#relation","text":"Relation","title":"relation"},{"location":"source/interfaces/DdlBuilder/#returns","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#addpk","text":"addPk ( entity , primaryKey ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:22","title":"addPk()"},{"location":"source/interfaces/DdlBuilder/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_1","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#primarykey","text":"string []","title":"primaryKey"},{"location":"source/interfaces/DdlBuilder/#returns_1","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#addproperty","text":"addProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:14","title":"addProperty()"},{"location":"source/interfaces/DdlBuilder/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_2","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#property","text":"PropertyMapping","title":"property"},{"location":"source/interfaces/DdlBuilder/#returns_2","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#adduk","text":"addUk ( entity , uniqueKey ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:23","title":"addUk()"},{"location":"source/interfaces/DdlBuilder/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_3","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#uniquekey","text":"string []","title":"uniqueKey"},{"location":"source/interfaces/DdlBuilder/#returns_3","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#alterproperty","text":"alterProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:18","title":"~~alterProperty()~~"},{"location":"source/interfaces/DdlBuilder/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_4","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#property_1","text":"PropertyMapping","title":"property"},{"location":"source/interfaces/DdlBuilder/#returns_4","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#deprecated","text":"Use alterPropertyType or alterPropertyRequired","title":"Deprecated"},{"location":"source/interfaces/DdlBuilder/#alterpropertyrequired","text":"alterPropertyRequired ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:20","title":"alterPropertyRequired()"},{"location":"source/interfaces/DdlBuilder/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_5","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#property_2","text":"PropertyMapping","title":"property"},{"location":"source/interfaces/DdlBuilder/#returns_5","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#alterpropertytype","text":"alterPropertyType ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:19","title":"alterPropertyType()"},{"location":"source/interfaces/DdlBuilder/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_6","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#property_3","text":"PropertyMapping","title":"property"},{"location":"source/interfaces/DdlBuilder/#returns_6","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#createentity","text":"createEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:13","title":"createEntity()"},{"location":"source/interfaces/DdlBuilder/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_7","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_7","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#createfk","text":"createFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:25","title":"createFk()"},{"location":"source/interfaces/DdlBuilder/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_8","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#relation_1","text":"Relation","title":"relation"},{"location":"source/interfaces/DdlBuilder/#returns_8","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#createindex","text":"createIndex ( entity , index ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:26","title":"createIndex()"},{"location":"source/interfaces/DdlBuilder/#parameters_9","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_9","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#index","text":"Index","title":"index"},{"location":"source/interfaces/DdlBuilder/#returns_9","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#createsequence","text":"createSequence ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:27","title":"createSequence()"},{"location":"source/interfaces/DdlBuilder/#parameters_10","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_10","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_10","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropentity","text":"dropEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:10","title":"dropEntity()"},{"location":"source/interfaces/DdlBuilder/#parameters_11","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_11","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_11","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropfk","text":"dropFk ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:7","title":"dropFk()"},{"location":"source/interfaces/DdlBuilder/#parameters_12","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_12","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#relation_2","text":"Relation","title":"relation"},{"location":"source/interfaces/DdlBuilder/#returns_12","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropindex","text":"dropIndex ( entity , index ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:8","title":"dropIndex()"},{"location":"source/interfaces/DdlBuilder/#parameters_13","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_13","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#index_1","text":"Index","title":"index"},{"location":"source/interfaces/DdlBuilder/#returns_13","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#droppk","text":"dropPk ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:11","title":"dropPk()"},{"location":"source/interfaces/DdlBuilder/#parameters_14","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_14","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_14","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropproperty","text":"dropProperty ( entity , property ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:21","title":"dropProperty()"},{"location":"source/interfaces/DdlBuilder/#parameters_15","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_15","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#property_4","text":"PropertyMapping","title":"property"},{"location":"source/interfaces/DdlBuilder/#returns_15","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropsequence","text":"dropSequence ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:9","title":"dropSequence()"},{"location":"source/interfaces/DdlBuilder/#parameters_16","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_16","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_16","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#dropuk","text":"dropUk ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:12","title":"dropUk()"},{"location":"source/interfaces/DdlBuilder/#parameters_17","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_17","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_17","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#foreignkeys","text":"foreignKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:33","title":"foreignKeys()"},{"location":"source/interfaces/DdlBuilder/#parameters_18","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#tablenames","text":"string []","title":"tableNames"},{"location":"source/interfaces/DdlBuilder/#returns_18","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#indexes","text":"indexes ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:34","title":"indexes()"},{"location":"source/interfaces/DdlBuilder/#parameters_19","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#tablenames_1","text":"string []","title":"tableNames"},{"location":"source/interfaces/DdlBuilder/#returns_19","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#objects","text":"objects (): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:28","title":"objects()"},{"location":"source/interfaces/DdlBuilder/#returns_20","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#primarykeys","text":"primaryKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:31","title":"primaryKeys()"},{"location":"source/interfaces/DdlBuilder/#parameters_20","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#tablenames_2","text":"string []","title":"tableNames"},{"location":"source/interfaces/DdlBuilder/#returns_21","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#sequences","text":"sequences (): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:35","title":"sequences()"},{"location":"source/interfaces/DdlBuilder/#returns_22","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#setnull","text":"setNull ( entity , relation ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:6","title":"setNull()"},{"location":"source/interfaces/DdlBuilder/#parameters_21","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_18","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#relation_3","text":"Relation","title":"relation"},{"location":"source/interfaces/DdlBuilder/#returns_23","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#tables","text":"tables ( names ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:29","title":"tables()"},{"location":"source/interfaces/DdlBuilder/#parameters_22","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#names","text":"string []","title":"names"},{"location":"source/interfaces/DdlBuilder/#returns_24","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#truncateentity","text":"truncateEntity ( entity ): undefined | Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:5","title":"truncateEntity()"},{"location":"source/interfaces/DdlBuilder/#parameters_23","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#entity_19","text":"EntityMapping","title":"entity"},{"location":"source/interfaces/DdlBuilder/#returns_25","text":"undefined | Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#uniquekeys","text":"uniqueKeys ( tableNames ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:32","title":"uniqueKeys()"},{"location":"source/interfaces/DdlBuilder/#parameters_24","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#tablenames_3","text":"string []","title":"tableNames"},{"location":"source/interfaces/DdlBuilder/#returns_26","text":"Query","title":"Returns"},{"location":"source/interfaces/DdlBuilder/#views","text":"views ( names ): Query Defined in: src/lib/language/domain/ports/DdlBuilder.ts:30","title":"views()"},{"location":"source/interfaces/DdlBuilder/#parameters_25","text":"","title":"Parameters"},{"location":"source/interfaces/DdlBuilder/#names_1","text":"string []","title":"names"},{"location":"source/interfaces/DdlBuilder/#returns_27","text":"Query","title":"Returns"},{"location":"source/interfaces/Dependent/","text":"Lambda ORM Lambda ORM / Dependent Interface: Dependent Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:49 Properties entity entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:50 relation relation : Relation Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:51","title":"Dependent"},{"location":"source/interfaces/Dependent/#interface-dependent","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:49","title":"Interface: Dependent"},{"location":"source/interfaces/Dependent/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Dependent/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:50","title":"entity"},{"location":"source/interfaces/Dependent/#relation","text":"relation : Relation Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:51","title":"relation"},{"location":"source/interfaces/DialectFormat/","text":"Lambda ORM Lambda ORM / DialectFormat Interface: DialectFormat Defined in: src/lib/language/domain/model.ts:1 Properties date date : string Defined in: src/lib/language/domain/model.ts:3 dateTime dateTime : string Defined in: src/lib/language/domain/model.ts:2 time time : string Defined in: src/lib/language/domain/model.ts:4","title":"DialectFormat"},{"location":"source/interfaces/DialectFormat/#interface-dialectformat","text":"Defined in: src/lib/language/domain/model.ts:1","title":"Interface: DialectFormat"},{"location":"source/interfaces/DialectFormat/#properties","text":"","title":"Properties"},{"location":"source/interfaces/DialectFormat/#date","text":"date : string Defined in: src/lib/language/domain/model.ts:3","title":"date"},{"location":"source/interfaces/DialectFormat/#datetime","text":"dateTime : string Defined in: src/lib/language/domain/model.ts:2","title":"dateTime"},{"location":"source/interfaces/DialectFormat/#time","text":"time : string Defined in: src/lib/language/domain/model.ts:4","title":"time"},{"location":"source/interfaces/DialectService/","text":"Lambda ORM Lambda ORM / DialectService Interface: DialectService Defined in: src/lib/language/domain/dialectService.ts:3 Properties format format : DialectFormat Defined in: src/lib/language/domain/dialectService.ts:5 name name : string Defined in: src/lib/language/domain/dialectService.ts:4 Accessors solveComposite Get Signature get solveComposite (): boolean Defined in: src/lib/language/domain/dialectService.ts:6 Returns boolean Methods dbType() dbType ( name ): string Defined in: src/lib/language/domain/dialectService.ts:14 Parameters name string Returns string ddl() ddl ( name ): string Defined in: src/lib/language/domain/dialectService.ts:13 Parameters name string Returns string delimiter() delimiter ( name , force? , excludeUnderscore? ): string Defined in: src/lib/language/domain/dialectService.ts:16 Parameters name string force? boolean excludeUnderscore? boolean Returns string dml() dml ( name ): string Defined in: src/lib/language/domain/dialectService.ts:11 Parameters name string Returns string function() function ( name ): any Defined in: src/lib/language/domain/dialectService.ts:9 Parameters name string Returns any getFunctionMetadata() getFunctionMetadata ( name ): null | string Defined in: src/lib/language/domain/dialectService.ts:19 Parameters name string Returns null | string getOperatorMetadata() getOperatorMetadata ( name , operands ): null | string Defined in: src/lib/language/domain/dialectService.ts:18 Parameters name string operands number Returns null | string isReservedWord() isReservedWord ( name ): boolean Defined in: src/lib/language/domain/dialectService.ts:7 Parameters name string Returns boolean operator() operator ( name , operands ): string Defined in: src/lib/language/domain/dialectService.ts:8 Parameters name string operands number Returns string other() other ( name ): string Defined in: src/lib/language/domain/dialectService.ts:12 Parameters name string Returns string string() string ( name ): string Defined in: src/lib/language/domain/dialectService.ts:17 Parameters name string Returns string support() support ( name ): string Defined in: src/lib/language/domain/dialectService.ts:10 Parameters name string Returns string type() type ( name ): string Defined in: src/lib/language/domain/dialectService.ts:15 Parameters name string Returns string","title":"DialectService"},{"location":"source/interfaces/DialectService/#interface-dialectservice","text":"Defined in: src/lib/language/domain/dialectService.ts:3","title":"Interface: DialectService"},{"location":"source/interfaces/DialectService/#properties","text":"","title":"Properties"},{"location":"source/interfaces/DialectService/#format","text":"format : DialectFormat Defined in: src/lib/language/domain/dialectService.ts:5","title":"format"},{"location":"source/interfaces/DialectService/#name","text":"name : string Defined in: src/lib/language/domain/dialectService.ts:4","title":"name"},{"location":"source/interfaces/DialectService/#accessors","text":"","title":"Accessors"},{"location":"source/interfaces/DialectService/#solvecomposite","text":"","title":"solveComposite"},{"location":"source/interfaces/DialectService/#get-signature","text":"get solveComposite (): boolean Defined in: src/lib/language/domain/dialectService.ts:6","title":"Get Signature"},{"location":"source/interfaces/DialectService/#returns","text":"boolean","title":"Returns"},{"location":"source/interfaces/DialectService/#methods","text":"","title":"Methods"},{"location":"source/interfaces/DialectService/#dbtype","text":"dbType ( name ): string Defined in: src/lib/language/domain/dialectService.ts:14","title":"dbType()"},{"location":"source/interfaces/DialectService/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_1","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_1","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#ddl","text":"ddl ( name ): string Defined in: src/lib/language/domain/dialectService.ts:13","title":"ddl()"},{"location":"source/interfaces/DialectService/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_2","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_2","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#delimiter","text":"delimiter ( name , force? , excludeUnderscore? ): string Defined in: src/lib/language/domain/dialectService.ts:16","title":"delimiter()"},{"location":"source/interfaces/DialectService/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_3","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#force","text":"boolean","title":"force?"},{"location":"source/interfaces/DialectService/#excludeunderscore","text":"boolean","title":"excludeUnderscore?"},{"location":"source/interfaces/DialectService/#returns_3","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#dml","text":"dml ( name ): string Defined in: src/lib/language/domain/dialectService.ts:11","title":"dml()"},{"location":"source/interfaces/DialectService/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_4","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_4","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#function","text":"function ( name ): any Defined in: src/lib/language/domain/dialectService.ts:9","title":"function()"},{"location":"source/interfaces/DialectService/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_5","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_5","text":"any","title":"Returns"},{"location":"source/interfaces/DialectService/#getfunctionmetadata","text":"getFunctionMetadata ( name ): null | string Defined in: src/lib/language/domain/dialectService.ts:19","title":"getFunctionMetadata()"},{"location":"source/interfaces/DialectService/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_6","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_6","text":"null | string","title":"Returns"},{"location":"source/interfaces/DialectService/#getoperatormetadata","text":"getOperatorMetadata ( name , operands ): null | string Defined in: src/lib/language/domain/dialectService.ts:18","title":"getOperatorMetadata()"},{"location":"source/interfaces/DialectService/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_7","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#operands","text":"number","title":"operands"},{"location":"source/interfaces/DialectService/#returns_7","text":"null | string","title":"Returns"},{"location":"source/interfaces/DialectService/#isreservedword","text":"isReservedWord ( name ): boolean Defined in: src/lib/language/domain/dialectService.ts:7","title":"isReservedWord()"},{"location":"source/interfaces/DialectService/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_8","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_8","text":"boolean","title":"Returns"},{"location":"source/interfaces/DialectService/#operator","text":"operator ( name , operands ): string Defined in: src/lib/language/domain/dialectService.ts:8","title":"operator()"},{"location":"source/interfaces/DialectService/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_9","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#operands_1","text":"number","title":"operands"},{"location":"source/interfaces/DialectService/#returns_9","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#other","text":"other ( name ): string Defined in: src/lib/language/domain/dialectService.ts:12","title":"other()"},{"location":"source/interfaces/DialectService/#parameters_9","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_10","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_10","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#string","text":"string ( name ): string Defined in: src/lib/language/domain/dialectService.ts:17","title":"string()"},{"location":"source/interfaces/DialectService/#parameters_10","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_11","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_11","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#support","text":"support ( name ): string Defined in: src/lib/language/domain/dialectService.ts:10","title":"support()"},{"location":"source/interfaces/DialectService/#parameters_11","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_12","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_12","text":"string","title":"Returns"},{"location":"source/interfaces/DialectService/#type","text":"type ( name ): string Defined in: src/lib/language/domain/dialectService.ts:15","title":"type()"},{"location":"source/interfaces/DialectService/#parameters_12","text":"","title":"Parameters"},{"location":"source/interfaces/DialectService/#name_13","text":"string","title":"name"},{"location":"source/interfaces/DialectService/#returns_13","text":"string","title":"Returns"},{"location":"source/interfaces/DmlBuilder/","text":"Lambda ORM Lambda ORM / DmlBuilder Interface: DmlBuilder Defined in: src/lib/language/domain/ports/DmlBuilder.ts:3 Methods build() build ( sentence ): Query Defined in: src/lib/language/domain/ports/DmlBuilder.ts:4 Parameters sentence Sentence Returns Query","title":"DmlBuilder"},{"location":"source/interfaces/DmlBuilder/#interface-dmlbuilder","text":"Defined in: src/lib/language/domain/ports/DmlBuilder.ts:3","title":"Interface: DmlBuilder"},{"location":"source/interfaces/DmlBuilder/#methods","text":"","title":"Methods"},{"location":"source/interfaces/DmlBuilder/#build","text":"build ( sentence ): Query Defined in: src/lib/language/domain/ports/DmlBuilder.ts:4","title":"build()"},{"location":"source/interfaces/DmlBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/DmlBuilder/#sentence","text":"Sentence","title":"sentence"},{"location":"source/interfaces/DmlBuilder/#returns","text":"Query","title":"Returns"},{"location":"source/interfaces/DomainSchema/","text":"Lambda ORM Lambda ORM / DomainSchema Interface: DomainSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:157 Properties entities entities : Entity [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:159 enums? optional enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:160 version version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:158","title":"DomainSchema"},{"location":"source/interfaces/DomainSchema/#interface-domainschema","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:157","title":"Interface: DomainSchema"},{"location":"source/interfaces/DomainSchema/#properties","text":"","title":"Properties"},{"location":"source/interfaces/DomainSchema/#entities","text":"entities : Entity [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:159","title":"entities"},{"location":"source/interfaces/DomainSchema/#enums","text":"optional enums : Enum [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:160","title":"enums?"},{"location":"source/interfaces/DomainSchema/#version","text":"version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:158","title":"version"},{"location":"source/interfaces/Entity/","text":"Lambda ORM Lambda ORM / Entity Interface: Entity Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:57 Extended by EntityMapping FormatMapping Properties abstract? optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61 composite? optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77 constraints? optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70 dependents? optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69 extends? optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60 hadDefaults? optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75 hadReadExps? optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71 hadReadValues? optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73 hadViewReadExp? optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76 hadWriteExps? optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72 hadWriteValues? optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74 indexes? optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68 intermediate? optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58 primaryKey? optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64 properties? optional properties : Property [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:59 relations? optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66 required? optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67 singular? optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62 uniqueKey? optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65 view? optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63","title":"Entity"},{"location":"source/interfaces/Entity/#interface-entity","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:57","title":"Interface: Entity"},{"location":"source/interfaces/Entity/#extended-by","text":"EntityMapping FormatMapping","title":"Extended by"},{"location":"source/interfaces/Entity/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Entity/#abstract","text":"optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61","title":"abstract?"},{"location":"source/interfaces/Entity/#composite","text":"optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77","title":"composite?"},{"location":"source/interfaces/Entity/#constraints","text":"optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70","title":"constraints?"},{"location":"source/interfaces/Entity/#dependents","text":"optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69","title":"dependents?"},{"location":"source/interfaces/Entity/#extends","text":"optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60","title":"extends?"},{"location":"source/interfaces/Entity/#haddefaults","text":"optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75","title":"hadDefaults?"},{"location":"source/interfaces/Entity/#hadreadexps","text":"optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71","title":"hadReadExps?"},{"location":"source/interfaces/Entity/#hadreadvalues","text":"optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73","title":"hadReadValues?"},{"location":"source/interfaces/Entity/#hadviewreadexp","text":"optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76","title":"hadViewReadExp?"},{"location":"source/interfaces/Entity/#hadwriteexps","text":"optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72","title":"hadWriteExps?"},{"location":"source/interfaces/Entity/#hadwritevalues","text":"optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74","title":"hadWriteValues?"},{"location":"source/interfaces/Entity/#indexes","text":"optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68","title":"indexes?"},{"location":"source/interfaces/Entity/#intermediate","text":"optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78","title":"intermediate?"},{"location":"source/interfaces/Entity/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58","title":"name"},{"location":"source/interfaces/Entity/#primarykey","text":"optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64","title":"primaryKey?"},{"location":"source/interfaces/Entity/#properties_1","text":"optional properties : Property [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:59","title":"properties?"},{"location":"source/interfaces/Entity/#relations","text":"optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66","title":"relations?"},{"location":"source/interfaces/Entity/#required","text":"optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67","title":"required?"},{"location":"source/interfaces/Entity/#singular","text":"optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62","title":"singular?"},{"location":"source/interfaces/Entity/#uniquekey","text":"optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65","title":"uniqueKey?"},{"location":"source/interfaces/Entity/#view","text":"optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63","title":"view?"},{"location":"source/interfaces/EntityMapping/","text":"Lambda ORM Lambda ORM / EntityMapping Interface: EntityMapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:91 Extends Entity Properties abstract? optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61 Inherited from Entity . abstract composite? optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77 Inherited from Entity . composite constraints? optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70 Inherited from Entity . constraints dependents? optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69 Inherited from Entity . dependents extends? optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60 Inherited from Entity . extends filter? optional filter : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:95 hadDefaults? optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75 Inherited from Entity . hadDefaults hadKeys? optional hadKeys : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:96 hadReadExps? optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71 Inherited from Entity . hadReadExps hadReadMappingExp? optional hadReadMappingExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:97 hadReadValues? optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73 Inherited from Entity . hadReadValues hadViewReadExp? optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76 Inherited from Entity . hadViewReadExp hadWriteExps? optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72 Inherited from Entity . hadWriteExps hadWriteValues? optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74 Inherited from Entity . hadWriteValues indexes? optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68 Inherited from Entity . indexes intermediate? optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78 Inherited from Entity . intermediate mapping? optional mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:92 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58 Inherited from Entity . name primaryKey? optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64 Inherited from Entity . primaryKey properties? optional properties : PropertyMapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:94 Overrides Entity . properties relations? optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66 Inherited from Entity . relations required? optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67 Inherited from Entity . required sequence? optional sequence : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:93 singular? optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62 Inherited from Entity . singular uniqueKey? optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65 Inherited from Entity . uniqueKey view? optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63 Inherited from Entity . view","title":"EntityMapping"},{"location":"source/interfaces/EntityMapping/#interface-entitymapping","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:91","title":"Interface: EntityMapping"},{"location":"source/interfaces/EntityMapping/#extends","text":"Entity","title":"Extends"},{"location":"source/interfaces/EntityMapping/#properties","text":"","title":"Properties"},{"location":"source/interfaces/EntityMapping/#abstract","text":"optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61","title":"abstract?"},{"location":"source/interfaces/EntityMapping/#inherited-from","text":"Entity . abstract","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#composite","text":"optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77","title":"composite?"},{"location":"source/interfaces/EntityMapping/#inherited-from_1","text":"Entity . composite","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#constraints","text":"optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70","title":"constraints?"},{"location":"source/interfaces/EntityMapping/#inherited-from_2","text":"Entity . constraints","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#dependents","text":"optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69","title":"dependents?"},{"location":"source/interfaces/EntityMapping/#inherited-from_3","text":"Entity . dependents","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#extends_1","text":"optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60","title":"extends?"},{"location":"source/interfaces/EntityMapping/#inherited-from_4","text":"Entity . extends","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#filter","text":"optional filter : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:95","title":"filter?"},{"location":"source/interfaces/EntityMapping/#haddefaults","text":"optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75","title":"hadDefaults?"},{"location":"source/interfaces/EntityMapping/#inherited-from_5","text":"Entity . hadDefaults","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#hadkeys","text":"optional hadKeys : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:96","title":"hadKeys?"},{"location":"source/interfaces/EntityMapping/#hadreadexps","text":"optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71","title":"hadReadExps?"},{"location":"source/interfaces/EntityMapping/#inherited-from_6","text":"Entity . hadReadExps","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#hadreadmappingexp","text":"optional hadReadMappingExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:97","title":"hadReadMappingExp?"},{"location":"source/interfaces/EntityMapping/#hadreadvalues","text":"optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73","title":"hadReadValues?"},{"location":"source/interfaces/EntityMapping/#inherited-from_7","text":"Entity . hadReadValues","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#hadviewreadexp","text":"optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76","title":"hadViewReadExp?"},{"location":"source/interfaces/EntityMapping/#inherited-from_8","text":"Entity . hadViewReadExp","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#hadwriteexps","text":"optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72","title":"hadWriteExps?"},{"location":"source/interfaces/EntityMapping/#inherited-from_9","text":"Entity . hadWriteExps","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#hadwritevalues","text":"optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74","title":"hadWriteValues?"},{"location":"source/interfaces/EntityMapping/#inherited-from_10","text":"Entity . hadWriteValues","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#indexes","text":"optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68","title":"indexes?"},{"location":"source/interfaces/EntityMapping/#inherited-from_11","text":"Entity . indexes","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#intermediate","text":"optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78","title":"intermediate?"},{"location":"source/interfaces/EntityMapping/#inherited-from_12","text":"Entity . intermediate","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#mapping","text":"optional mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:92","title":"mapping?"},{"location":"source/interfaces/EntityMapping/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58","title":"name"},{"location":"source/interfaces/EntityMapping/#inherited-from_13","text":"Entity . name","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#primarykey","text":"optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64","title":"primaryKey?"},{"location":"source/interfaces/EntityMapping/#inherited-from_14","text":"Entity . primaryKey","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#properties_1","text":"optional properties : PropertyMapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:94","title":"properties?"},{"location":"source/interfaces/EntityMapping/#overrides","text":"Entity . properties","title":"Overrides"},{"location":"source/interfaces/EntityMapping/#relations","text":"optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66","title":"relations?"},{"location":"source/interfaces/EntityMapping/#inherited-from_15","text":"Entity . relations","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#required","text":"optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67","title":"required?"},{"location":"source/interfaces/EntityMapping/#inherited-from_16","text":"Entity . required","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#sequence","text":"optional sequence : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:93","title":"sequence?"},{"location":"source/interfaces/EntityMapping/#singular","text":"optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62","title":"singular?"},{"location":"source/interfaces/EntityMapping/#inherited-from_17","text":"Entity . singular","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#uniquekey","text":"optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65","title":"uniqueKey?"},{"location":"source/interfaces/EntityMapping/#inherited-from_18","text":"Entity . uniqueKey","title":"Inherited from"},{"location":"source/interfaces/EntityMapping/#view","text":"optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63","title":"view?"},{"location":"source/interfaces/EntityMapping/#inherited-from_19","text":"Entity . view","title":"Inherited from"},{"location":"source/interfaces/EntityView/","text":"Lambda ORM Lambda ORM / EntityView Interface: EntityView Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:116 Properties exclude? optional exclude : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:118 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:117 properties properties : PropertyView [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:119","title":"EntityView"},{"location":"source/interfaces/EntityView/#interface-entityview","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:116","title":"Interface: EntityView"},{"location":"source/interfaces/EntityView/#properties","text":"","title":"Properties"},{"location":"source/interfaces/EntityView/#exclude","text":"optional exclude : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:118","title":"exclude?"},{"location":"source/interfaces/EntityView/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:117","title":"name"},{"location":"source/interfaces/EntityView/#properties_1","text":"properties : PropertyView [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:119","title":"properties"},{"location":"source/interfaces/Enum/","text":"Lambda ORM Lambda ORM / Enum Interface: Enum Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:13 Properties abstract? optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:16 extends? optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:15 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:14 values values : EnumValue [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:17","title":"Enum"},{"location":"source/interfaces/Enum/#interface-enum","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:13","title":"Interface: Enum"},{"location":"source/interfaces/Enum/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Enum/#abstract","text":"optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:16","title":"abstract?"},{"location":"source/interfaces/Enum/#extends","text":"optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:15","title":"extends?"},{"location":"source/interfaces/Enum/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:14","title":"name"},{"location":"source/interfaces/Enum/#values","text":"values : EnumValue [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:17","title":"values"},{"location":"source/interfaces/EnumValue/","text":"Lambda ORM Lambda ORM / EnumValue Interface: EnumValue Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:9 Properties name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:10 value value : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:11","title":"EnumValue"},{"location":"source/interfaces/EnumValue/#interface-enumvalue","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:9","title":"Interface: EnumValue"},{"location":"source/interfaces/EnumValue/#properties","text":"","title":"Properties"},{"location":"source/interfaces/EnumValue/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:10","title":"name"},{"location":"source/interfaces/EnumValue/#value","text":"value : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:11","title":"value"},{"location":"source/interfaces/ExecuteResult/","text":"Lambda ORM Lambda ORM / ExecuteResult Interface: ExecuteResult Defined in: src/lib/query/domain/query.ts:67 Properties description description : string Defined in: src/lib/query/domain/query.ts:69 error? optional error : Error Defined in: src/lib/query/domain/query.ts:70 result? optional result : any Defined in: src/lib/query/domain/query.ts:68","title":"ExecuteResult"},{"location":"source/interfaces/ExecuteResult/#interface-executeresult","text":"Defined in: src/lib/query/domain/query.ts:67","title":"Interface: ExecuteResult"},{"location":"source/interfaces/ExecuteResult/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ExecuteResult/#description","text":"description : string Defined in: src/lib/query/domain/query.ts:69","title":"description"},{"location":"source/interfaces/ExecuteResult/#error","text":"optional error : Error Defined in: src/lib/query/domain/query.ts:70","title":"error?"},{"location":"source/interfaces/ExecuteResult/#result","text":"optional result : any Defined in: src/lib/query/domain/query.ts:68","title":"result?"},{"location":"source/interfaces/Executor/","text":"Lambda ORM Lambda ORM / Executor Interface: Executor Defined in: src/lib/execution/domain/executor.ts:45 Extended by ObservableExecutorDecorator Methods execute() execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:46 Parameters query Query data any options QueryOptions Returns Promise \\< any > executeList() executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/domain/executor.ts:47 Parameters queries Query [] options QueryOptions Returns Promise \\< ExecuteResult []> transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:48 Parameters options QueryOptions callback ( tr ) => Promise \\< void > Returns Promise \\< void >","title":"Executor"},{"location":"source/interfaces/Executor/#interface-executor","text":"Defined in: src/lib/execution/domain/executor.ts:45","title":"Interface: Executor"},{"location":"source/interfaces/Executor/#extended-by","text":"ObservableExecutorDecorator","title":"Extended by"},{"location":"source/interfaces/Executor/#methods","text":"","title":"Methods"},{"location":"source/interfaces/Executor/#execute","text":"execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:46","title":"execute()"},{"location":"source/interfaces/Executor/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/Executor/#query","text":"Query","title":"query"},{"location":"source/interfaces/Executor/#data","text":"any","title":"data"},{"location":"source/interfaces/Executor/#options","text":"QueryOptions","title":"options"},{"location":"source/interfaces/Executor/#returns","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/Executor/#executelist","text":"executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/domain/executor.ts:47","title":"executeList()"},{"location":"source/interfaces/Executor/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/Executor/#queries","text":"Query []","title":"queries"},{"location":"source/interfaces/Executor/#options_1","text":"QueryOptions","title":"options"},{"location":"source/interfaces/Executor/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/interfaces/Executor/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:48","title":"transaction()"},{"location":"source/interfaces/Executor/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/Executor/#options_2","text":"QueryOptions","title":"options"},{"location":"source/interfaces/Executor/#callback","text":"( tr ) => Promise \\< void >","title":"callback"},{"location":"source/interfaces/Executor/#returns_2","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/FormatMapping/","text":"Lambda ORM Lambda ORM / FormatMapping Interface: FormatMapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:99 Extends Entity Properties abstract? optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61 Inherited from Entity . abstract composite? optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77 Inherited from Entity . composite constraints? optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70 Inherited from Entity . constraints date? optional date : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:101 dateTime? optional dateTime : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:100 dependents? optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69 Inherited from Entity . dependents extends? optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60 Inherited from Entity . extends hadDefaults? optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75 Inherited from Entity . hadDefaults hadReadExps? optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71 Inherited from Entity . hadReadExps hadReadValues? optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73 Inherited from Entity . hadReadValues hadViewReadExp? optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76 Inherited from Entity . hadViewReadExp hadWriteExps? optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72 Inherited from Entity . hadWriteExps hadWriteValues? optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74 Inherited from Entity . hadWriteValues indexes? optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68 Inherited from Entity . indexes intermediate? optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78 Inherited from Entity . intermediate name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58 Inherited from Entity . name primaryKey? optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64 Inherited from Entity . primaryKey properties? optional properties : Property [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:59 Inherited from Entity . properties relations? optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66 Inherited from Entity . relations required? optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67 Inherited from Entity . required singular? optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62 Inherited from Entity . singular time? optional time : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:102 uniqueKey? optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65 Inherited from Entity . uniqueKey view? optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63 Inherited from Entity . view","title":"FormatMapping"},{"location":"source/interfaces/FormatMapping/#interface-formatmapping","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:99","title":"Interface: FormatMapping"},{"location":"source/interfaces/FormatMapping/#extends","text":"Entity","title":"Extends"},{"location":"source/interfaces/FormatMapping/#properties","text":"","title":"Properties"},{"location":"source/interfaces/FormatMapping/#abstract","text":"optional abstract : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:61","title":"abstract?"},{"location":"source/interfaces/FormatMapping/#inherited-from","text":"Entity . abstract","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#composite","text":"optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:77","title":"composite?"},{"location":"source/interfaces/FormatMapping/#inherited-from_1","text":"Entity . composite","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#constraints","text":"optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:70","title":"constraints?"},{"location":"source/interfaces/FormatMapping/#inherited-from_2","text":"Entity . constraints","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#date","text":"optional date : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:101","title":"date?"},{"location":"source/interfaces/FormatMapping/#datetime","text":"optional dateTime : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:100","title":"dateTime?"},{"location":"source/interfaces/FormatMapping/#dependents","text":"optional dependents : Dependent [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:69","title":"dependents?"},{"location":"source/interfaces/FormatMapping/#inherited-from_3","text":"Entity . dependents","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#extends_1","text":"optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:60","title":"extends?"},{"location":"source/interfaces/FormatMapping/#inherited-from_4","text":"Entity . extends","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#haddefaults","text":"optional hadDefaults : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:75","title":"hadDefaults?"},{"location":"source/interfaces/FormatMapping/#inherited-from_5","text":"Entity . hadDefaults","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#hadreadexps","text":"optional hadReadExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:71","title":"hadReadExps?"},{"location":"source/interfaces/FormatMapping/#inherited-from_6","text":"Entity . hadReadExps","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#hadreadvalues","text":"optional hadReadValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:73","title":"hadReadValues?"},{"location":"source/interfaces/FormatMapping/#inherited-from_7","text":"Entity . hadReadValues","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#hadviewreadexp","text":"optional hadViewReadExp : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:76","title":"hadViewReadExp?"},{"location":"source/interfaces/FormatMapping/#inherited-from_8","text":"Entity . hadViewReadExp","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#hadwriteexps","text":"optional hadWriteExps : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:72","title":"hadWriteExps?"},{"location":"source/interfaces/FormatMapping/#inherited-from_9","text":"Entity . hadWriteExps","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#hadwritevalues","text":"optional hadWriteValues : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:74","title":"hadWriteValues?"},{"location":"source/interfaces/FormatMapping/#inherited-from_10","text":"Entity . hadWriteValues","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#indexes","text":"optional indexes : Index [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:68","title":"indexes?"},{"location":"source/interfaces/FormatMapping/#inherited-from_11","text":"Entity . indexes","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#intermediate","text":"optional intermediate : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:78","title":"intermediate?"},{"location":"source/interfaces/FormatMapping/#inherited-from_12","text":"Entity . intermediate","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:58","title":"name"},{"location":"source/interfaces/FormatMapping/#inherited-from_13","text":"Entity . name","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#primarykey","text":"optional primaryKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:64","title":"primaryKey?"},{"location":"source/interfaces/FormatMapping/#inherited-from_14","text":"Entity . primaryKey","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#properties_1","text":"optional properties : Property [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:59","title":"properties?"},{"location":"source/interfaces/FormatMapping/#inherited-from_15","text":"Entity . properties","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#relations","text":"optional relations : Relation [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:66","title":"relations?"},{"location":"source/interfaces/FormatMapping/#inherited-from_16","text":"Entity . relations","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#required","text":"optional required : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:67","title":"required?"},{"location":"source/interfaces/FormatMapping/#inherited-from_17","text":"Entity . required","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#singular","text":"optional singular : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:62","title":"singular?"},{"location":"source/interfaces/FormatMapping/#inherited-from_18","text":"Entity . singular","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#time","text":"optional time : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:102","title":"time?"},{"location":"source/interfaces/FormatMapping/#uniquekey","text":"optional uniqueKey : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:65","title":"uniqueKey?"},{"location":"source/interfaces/FormatMapping/#inherited-from_19","text":"Entity . uniqueKey","title":"Inherited from"},{"location":"source/interfaces/FormatMapping/#view","text":"optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:63","title":"view?"},{"location":"source/interfaces/FormatMapping/#inherited-from_20","text":"Entity . view","title":"Inherited from"},{"location":"source/interfaces/IFileSchemaService/","text":"Lambda ORM Lambda ORM / IFileSchemaService Interface: IFileSchemaService Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:2 Methods read() read ( source ): Promise \\< null | SchemaInfo > Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:3 Parameters source string Returns Promise \\< null | SchemaInfo > write() write ( schema , fullPath ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:4 Parameters schema Schema fullPath string Returns Promise \\< void >","title":"IFileSchemaService"},{"location":"source/interfaces/IFileSchemaService/#interface-ifileschemaservice","text":"Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:2","title":"Interface: IFileSchemaService"},{"location":"source/interfaces/IFileSchemaService/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IFileSchemaService/#read","text":"read ( source ): Promise \\< null | SchemaInfo > Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:3","title":"read()"},{"location":"source/interfaces/IFileSchemaService/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IFileSchemaService/#source","text":"string","title":"source"},{"location":"source/interfaces/IFileSchemaService/#returns","text":"Promise \\< null | SchemaInfo >","title":"Returns"},{"location":"source/interfaces/IFileSchemaService/#write","text":"write ( schema , fullPath ): Promise \\< void > Defined in: node_modules/lambdaorm-base/schema/domain/ports/fileSchemaService.d.ts:4","title":"write()"},{"location":"source/interfaces/IFileSchemaService/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/IFileSchemaService/#schema","text":"Schema","title":"schema"},{"location":"source/interfaces/IFileSchemaService/#fullpath","text":"string","title":"fullPath"},{"location":"source/interfaces/IFileSchemaService/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/IOrm/","text":"Lambda ORM Lambda ORM / IOrm Interface: IOrm Defined in: src/lib/orm/application/orm.ts:6 Properties exp exp : Expressions Defined in: src/lib/orm/application/orm.ts:11 schema schema : SchemaFacade Defined in: src/lib/orm/application/orm.ts:9 stage stage : StageFacade Defined in: src/lib/orm/application/orm.ts:8 state state : SchemaState Defined in: src/lib/orm/application/orm.ts:10 Methods constraints() Call Signature constraints ( query ): MetadataConstraint Defined in: src/lib/orm/application/orm.ts:43 Get constraints of query Parameters query Function Returns MetadataConstraint Constraints of query Call Signature constraints ( query ): MetadataConstraint Defined in: src/lib/orm/application/orm.ts:44 Parameters query string Returns MetadataConstraint dialect() dialect ( source ): Dialect Defined in: src/lib/orm/application/orm.ts:13 Parameters source string Returns Dialect end() end (): Promise \\< void > Defined in: src/lib/orm/application/orm.ts:17 Returns Promise \\< void > execute() Call Signature execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/application/orm.ts:68 Execute query Parameters query Function Query to execute data? any Data with variables options? QueryOptions query options Returns Promise \\< any > Result of execution Call Signature execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/application/orm.ts:69 Parameters query string data? any options? QueryOptions Returns Promise \\< any > init() init ( configPath? , connect? ): Promise \\< Schema > Defined in: src/lib/orm/application/orm.ts:16 Parameters configPath? string connect? boolean Returns Promise \\< Schema > metadata() Call Signature metadata ( query ): Metadata Defined in: src/lib/orm/application/orm.ts:50 Get metadata of query Parameters query Function Returns Metadata metadata of query Call Signature metadata ( query ): Metadata Defined in: src/lib/orm/application/orm.ts:51 Parameters query string Returns Metadata model() Call Signature model ( query ): MetadataModel [] Defined in: src/lib/orm/application/orm.ts:29 Get model of query Parameters query Function Returns MetadataModel [] Model of query Call Signature model ( query ): MetadataModel [] Defined in: src/lib/orm/application/orm.ts:30 Parameters query string Returns MetadataModel [] normalize() Call Signature normalize ( query ): string Defined in: src/lib/orm/application/orm.ts:22 Normalize query Parameters query Function Returns string Expression normalized Call Signature normalize ( query ): string Defined in: src/lib/orm/application/orm.ts:23 Parameters query string Returns string parameters() Call Signature parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/application/orm.ts:36 Get parameters of query Parameters query Function Returns MetadataParameter [] Parameters of query Call Signature parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/application/orm.ts:37 Parameters query string Returns MetadataParameter [] plan() Call Signature plan ( query , options? ): QueryPlan Defined in: src/lib/orm/application/orm.ts:58 Parameters query Function options? QueryOptions Returns QueryPlan Call Signature plan ( query , options? ): QueryPlan Defined in: src/lib/orm/application/orm.ts:59 Parameters query string options? QueryOptions Returns QueryPlan transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/orm/application/orm.ts:75 transaction Parameters options query options undefined | QueryOptions callback ( tr ) => Promise \\< void > Returns Promise \\< void >","title":"IOrm"},{"location":"source/interfaces/IOrm/#interface-iorm","text":"Defined in: src/lib/orm/application/orm.ts:6","title":"Interface: IOrm"},{"location":"source/interfaces/IOrm/#properties","text":"","title":"Properties"},{"location":"source/interfaces/IOrm/#exp","text":"exp : Expressions Defined in: src/lib/orm/application/orm.ts:11","title":"exp"},{"location":"source/interfaces/IOrm/#schema","text":"schema : SchemaFacade Defined in: src/lib/orm/application/orm.ts:9","title":"schema"},{"location":"source/interfaces/IOrm/#stage","text":"stage : StageFacade Defined in: src/lib/orm/application/orm.ts:8","title":"stage"},{"location":"source/interfaces/IOrm/#state","text":"state : SchemaState Defined in: src/lib/orm/application/orm.ts:10","title":"state"},{"location":"source/interfaces/IOrm/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IOrm/#constraints","text":"","title":"constraints()"},{"location":"source/interfaces/IOrm/#call-signature","text":"constraints ( query ): MetadataConstraint Defined in: src/lib/orm/application/orm.ts:43 Get constraints of query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#returns","text":"MetadataConstraint Constraints of query","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_1","text":"constraints ( query ): MetadataConstraint Defined in: src/lib/orm/application/orm.ts:44","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_1","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#returns_1","text":"MetadataConstraint","title":"Returns"},{"location":"source/interfaces/IOrm/#dialect","text":"dialect ( source ): Dialect Defined in: src/lib/orm/application/orm.ts:13","title":"dialect()"},{"location":"source/interfaces/IOrm/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#source","text":"string","title":"source"},{"location":"source/interfaces/IOrm/#returns_2","text":"Dialect","title":"Returns"},{"location":"source/interfaces/IOrm/#end","text":"end (): Promise \\< void > Defined in: src/lib/orm/application/orm.ts:17","title":"end()"},{"location":"source/interfaces/IOrm/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/IOrm/#execute","text":"","title":"execute()"},{"location":"source/interfaces/IOrm/#call-signature_2","text":"execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/application/orm.ts:68 Execute query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_2","text":"Function Query to execute","title":"query"},{"location":"source/interfaces/IOrm/#data","text":"any Data with variables","title":"data?"},{"location":"source/interfaces/IOrm/#options","text":"QueryOptions query options","title":"options?"},{"location":"source/interfaces/IOrm/#returns_4","text":"Promise \\< any > Result of execution","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_3","text":"execute ( query , data? , options? ): Promise \\< any > Defined in: src/lib/orm/application/orm.ts:69","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_3","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#data_1","text":"any","title":"data?"},{"location":"source/interfaces/IOrm/#options_1","text":"QueryOptions","title":"options?"},{"location":"source/interfaces/IOrm/#returns_5","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/IOrm/#init","text":"init ( configPath? , connect? ): Promise \\< Schema > Defined in: src/lib/orm/application/orm.ts:16","title":"init()"},{"location":"source/interfaces/IOrm/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#configpath","text":"string","title":"configPath?"},{"location":"source/interfaces/IOrm/#connect","text":"boolean","title":"connect?"},{"location":"source/interfaces/IOrm/#returns_6","text":"Promise \\< Schema >","title":"Returns"},{"location":"source/interfaces/IOrm/#metadata","text":"","title":"metadata()"},{"location":"source/interfaces/IOrm/#call-signature_4","text":"metadata ( query ): Metadata Defined in: src/lib/orm/application/orm.ts:50 Get metadata of query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_4","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#returns_7","text":"Metadata metadata of query","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_5","text":"metadata ( query ): Metadata Defined in: src/lib/orm/application/orm.ts:51","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_5","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#returns_8","text":"Metadata","title":"Returns"},{"location":"source/interfaces/IOrm/#model","text":"","title":"model()"},{"location":"source/interfaces/IOrm/#call-signature_6","text":"model ( query ): MetadataModel [] Defined in: src/lib/orm/application/orm.ts:29 Get model of query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_6","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#returns_9","text":"MetadataModel [] Model of query","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_7","text":"model ( query ): MetadataModel [] Defined in: src/lib/orm/application/orm.ts:30","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_9","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_7","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#returns_10","text":"MetadataModel []","title":"Returns"},{"location":"source/interfaces/IOrm/#normalize","text":"","title":"normalize()"},{"location":"source/interfaces/IOrm/#call-signature_8","text":"normalize ( query ): string Defined in: src/lib/orm/application/orm.ts:22 Normalize query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_10","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_8","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#returns_11","text":"string Expression normalized","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_9","text":"normalize ( query ): string Defined in: src/lib/orm/application/orm.ts:23","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_11","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_9","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#returns_12","text":"string","title":"Returns"},{"location":"source/interfaces/IOrm/#parameters_12","text":"","title":"parameters()"},{"location":"source/interfaces/IOrm/#call-signature_10","text":"parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/application/orm.ts:36 Get parameters of query","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_13","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_10","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#returns_13","text":"MetadataParameter [] Parameters of query","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_11","text":"parameters ( query ): MetadataParameter [] Defined in: src/lib/orm/application/orm.ts:37","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_14","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_11","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#returns_14","text":"MetadataParameter []","title":"Returns"},{"location":"source/interfaces/IOrm/#plan","text":"","title":"plan()"},{"location":"source/interfaces/IOrm/#call-signature_12","text":"plan ( query , options? ): QueryPlan Defined in: src/lib/orm/application/orm.ts:58","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_15","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_12","text":"Function","title":"query"},{"location":"source/interfaces/IOrm/#options_2","text":"QueryOptions","title":"options?"},{"location":"source/interfaces/IOrm/#returns_15","text":"QueryPlan","title":"Returns"},{"location":"source/interfaces/IOrm/#call-signature_13","text":"plan ( query , options? ): QueryPlan Defined in: src/lib/orm/application/orm.ts:59","title":"Call Signature"},{"location":"source/interfaces/IOrm/#parameters_16","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#query_13","text":"string","title":"query"},{"location":"source/interfaces/IOrm/#options_3","text":"QueryOptions","title":"options?"},{"location":"source/interfaces/IOrm/#returns_16","text":"QueryPlan","title":"Returns"},{"location":"source/interfaces/IOrm/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/orm/application/orm.ts:75 transaction","title":"transaction()"},{"location":"source/interfaces/IOrm/#parameters_17","text":"","title":"Parameters"},{"location":"source/interfaces/IOrm/#options_4","text":"query options undefined | QueryOptions","title":"options"},{"location":"source/interfaces/IOrm/#callback","text":"( tr ) => Promise \\< void >","title":"callback"},{"location":"source/interfaces/IOrm/#returns_17","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/IQueryBuilder/","text":"Lambda ORM Lambda ORM / IQueryBuilder Interface: IQueryBuilder Defined in: src/lib/expressions/domain/services.ts:4 Methods build() build ( expression , options ): Query Defined in: src/lib/expressions/domain/services.ts:5 Parameters expression string options QueryOptions Returns Query","title":"IQueryBuilder"},{"location":"source/interfaces/IQueryBuilder/#interface-iquerybuilder","text":"Defined in: src/lib/expressions/domain/services.ts:4","title":"Interface: IQueryBuilder"},{"location":"source/interfaces/IQueryBuilder/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IQueryBuilder/#build","text":"build ( expression , options ): Query Defined in: src/lib/expressions/domain/services.ts:5","title":"build()"},{"location":"source/interfaces/IQueryBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IQueryBuilder/#expression","text":"string","title":"expression"},{"location":"source/interfaces/IQueryBuilder/#options","text":"QueryOptions","title":"options"},{"location":"source/interfaces/IQueryBuilder/#returns","text":"Query","title":"Returns"},{"location":"source/interfaces/IRelation/","text":"Lambda ORM Lambda ORM / IRelation Interface: IRelation\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:130 Type Parameters T T Methods distinct() distinct \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:138 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > filter() filter ( predicate , thisArg? ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:147 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns FilterClauses \\< T > first() first \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:134 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > include() include ( predicate , thisArg? ): RelationIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:140 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns RelationIncludeClauses \\< T > insert() insert ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:144 Parameters predicate? ( value ) => unknown Returns void last() last \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:136 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > map() map \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:132 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > update() update ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:142 Parameters predicate? ( value ) => unknown Returns void upsert() upsert ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:146 Parameters predicate? ( value ) => unknown Returns void","title":"IRelation"},{"location":"source/interfaces/IRelation/#interface-irelationt","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:130","title":"Interface: IRelation\\&lt;T>"},{"location":"source/interfaces/IRelation/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRelation/#t","text":"T","title":"T"},{"location":"source/interfaces/IRelation/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IRelation/#distinct","text":"distinct \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:138","title":"distinct()"},{"location":"source/interfaces/IRelation/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRelation/#u","text":"U","title":"U"},{"location":"source/interfaces/IRelation/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#filter","text":"filter ( predicate , thisArg? ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:147","title":"filter()"},{"location":"source/interfaces/IRelation/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_1","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg_1","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns_1","text":"FilterClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#first","text":"first \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:134","title":"first()"},{"location":"source/interfaces/IRelation/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRelation/#u_1","text":"U","title":"U"},{"location":"source/interfaces/IRelation/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_2","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg_2","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns_2","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#include","text":"include ( predicate , thisArg? ): RelationIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:140","title":"include()"},{"location":"source/interfaces/IRelation/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_3","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg_3","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns_3","text":"RelationIncludeClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#insert","text":"insert ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:144","title":"insert()"},{"location":"source/interfaces/IRelation/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_4","text":"( value ) => unknown","title":"predicate?"},{"location":"source/interfaces/IRelation/#returns_4","text":"void","title":"Returns"},{"location":"source/interfaces/IRelation/#last","text":"last \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:136","title":"last()"},{"location":"source/interfaces/IRelation/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRelation/#u_2","text":"U","title":"U"},{"location":"source/interfaces/IRelation/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_5","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg_4","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns_5","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#map","text":"map \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:132","title":"map()"},{"location":"source/interfaces/IRelation/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRelation/#u_3","text":"U","title":"U"},{"location":"source/interfaces/IRelation/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_6","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/IRelation/#thisarg_5","text":"any","title":"thisArg?"},{"location":"source/interfaces/IRelation/#returns_6","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/IRelation/#update","text":"update ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:142","title":"update()"},{"location":"source/interfaces/IRelation/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_7","text":"( value ) => unknown","title":"predicate?"},{"location":"source/interfaces/IRelation/#returns_7","text":"void","title":"Returns"},{"location":"source/interfaces/IRelation/#upsert","text":"upsert ( predicate? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:146","title":"upsert()"},{"location":"source/interfaces/IRelation/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/IRelation/#predicate_8","text":"( value ) => unknown","title":"predicate?"},{"location":"source/interfaces/IRelation/#returns_8","text":"void","title":"Returns"},{"location":"source/interfaces/IRepository/","text":"Lambda ORM Lambda ORM / IRepository Interface: IRepository\\<TEntity, TQuery> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:2 Type Parameters TEntity TEntity TQuery TQuery Methods bulkDelete() Call Signature bulkDelete ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:26 Parameters entities TEntity [] Returns Promise \\< any []> Call Signature bulkDelete ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:27 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Call Signature bulkDelete ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:28 Parameters entities TEntity [] include? ( value , index , array ) => unknown Returns Promise \\< any []> bulkInsert() Call Signature bulkInsert ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:7 Parameters entities TEntity [] Returns Promise \\< any []> Call Signature bulkInsert ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:8 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Call Signature bulkInsert ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:9 Parameters entities TEntity [] include? ( value , index , array ) => unknown Returns Promise \\< any []> bulkMerge() Call Signature bulkMerge ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:20 Parameters entities TEntity [] Returns Promise \\< any []> Call Signature bulkMerge ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:21 Parameters entities TEntity [] include ( value , index , array ) => unknown Returns Promise \\< any []> Call Signature bulkMerge ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:22 Parameters entities TEntity [] include? ( value , index , array ) => unknown Returns Promise \\< any []> delete() Call Signature delete ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:23 Parameters entity TEntity Returns Promise \\< number > Call Signature delete ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:24 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Call Signature delete ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:25 Parameters entity TEntity include? ( value , index , array ) => unknown Returns Promise \\< number > deleteAll() deleteAll ( data , filter? , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:29 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< number > distinct() distinct ( data , filter? , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:31 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< any []> execute() execute ( query , data? ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:3 Parameters query string data? any Returns Promise \\< any > first() first ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:32 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< null | TEntity > insert() Call Signature insert ( entity ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:4 Parameters entity TEntity Returns Promise \\< any > Call Signature insert ( entity , include ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:5 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< any > Call Signature insert ( entity , include? ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:6 Parameters entity TEntity include? ( value , index , array ) => unknown Returns Promise \\< any > last() last ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:33 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< null | TEntity > list() list ( data , filter? , include? ): Promise \\< TEntity []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:30 Parameters data any filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< TEntity []> merge() Call Signature merge ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:17 Parameters entity TEntity Returns Promise \\< number > Call Signature merge ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:18 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Call Signature merge ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:19 Parameters entity TEntity include? ( value , index , array ) => unknown Returns Promise \\< number > query() query (): Queryable \\< TQuery > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:34 Returns Queryable \\< TQuery > update() Call Signature update ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:10 Parameters entity TEntity Returns Promise \\< number > Call Signature update ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:11 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Call Signature update ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:12 Parameters entity TEntity include? ( value , index , array ) => unknown Returns Promise \\< number > updateAll() updateAll ( data , map , filter? , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:16 Parameters data any map ( value ) => unknown filter? ( value , index , array ) => unknown include? ( value , index , array ) => unknown Returns Promise \\< number > upsert() Call Signature upsert ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:13 Parameters entity TEntity Returns Promise \\< number > Call Signature upsert ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:14 Parameters entity TEntity include ( value , index , array ) => unknown Returns Promise \\< number > Call Signature upsert ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:15 Parameters entity TEntity include? ( value , index , array ) => unknown Returns Promise \\< number >","title":"IRepository"},{"location":"source/interfaces/IRepository/#interface-irepositorytentity-tquery","text":"Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:2","title":"Interface: IRepository\\&lt;TEntity, TQuery>"},{"location":"source/interfaces/IRepository/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/IRepository/#tentity","text":"TEntity","title":"TEntity"},{"location":"source/interfaces/IRepository/#tquery","text":"TQuery","title":"TQuery"},{"location":"source/interfaces/IRepository/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IRepository/#bulkdelete","text":"","title":"bulkDelete()"},{"location":"source/interfaces/IRepository/#call-signature","text":"bulkDelete ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:26","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#returns","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_1","text":"bulkDelete ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:27","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_1","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_1","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_2","text":"bulkDelete ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:28","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_2","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include_1","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_2","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#bulkinsert","text":"","title":"bulkInsert()"},{"location":"source/interfaces/IRepository/#call-signature_3","text":"bulkInsert ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:7","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_3","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#returns_3","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_4","text":"bulkInsert ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:8","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_4","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include_2","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_4","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_5","text":"bulkInsert ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:9","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_5","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_5","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include_3","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_5","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#bulkmerge","text":"","title":"bulkMerge()"},{"location":"source/interfaces/IRepository/#call-signature_6","text":"bulkMerge ( entities ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:20","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_6","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#returns_6","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_7","text":"bulkMerge ( entities , include ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:21","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_7","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include_4","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_7","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_8","text":"bulkMerge ( entities , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:22","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_8","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entities_8","text":"TEntity []","title":"entities"},{"location":"source/interfaces/IRepository/#include_5","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_8","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#delete","text":"","title":"delete()"},{"location":"source/interfaces/IRepository/#call-signature_9","text":"delete ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:23","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_9","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#returns_9","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_10","text":"delete ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:24","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_10","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_1","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_6","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_10","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_11","text":"delete ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:25","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_11","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_2","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_7","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_11","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#deleteall","text":"deleteAll ( data , filter? , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:29","title":"deleteAll()"},{"location":"source/interfaces/IRepository/#parameters_12","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#filter","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_8","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_12","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#distinct","text":"distinct ( data , filter? , include? ): Promise \\< any []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:31","title":"distinct()"},{"location":"source/interfaces/IRepository/#parameters_13","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data_1","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#filter_1","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_9","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_13","text":"Promise \\< any []>","title":"Returns"},{"location":"source/interfaces/IRepository/#execute","text":"execute ( query , data? ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:3","title":"execute()"},{"location":"source/interfaces/IRepository/#parameters_14","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#query","text":"string","title":"query"},{"location":"source/interfaces/IRepository/#data_2","text":"any","title":"data?"},{"location":"source/interfaces/IRepository/#returns_14","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/IRepository/#first","text":"first ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:32","title":"first()"},{"location":"source/interfaces/IRepository/#parameters_15","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data_3","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#filter_2","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_10","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_15","text":"Promise \\< null | TEntity >","title":"Returns"},{"location":"source/interfaces/IRepository/#insert","text":"","title":"insert()"},{"location":"source/interfaces/IRepository/#call-signature_12","text":"insert ( entity ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:4","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_16","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_3","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#returns_16","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_13","text":"insert ( entity , include ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:5","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_17","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_4","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_11","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_17","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_14","text":"insert ( entity , include? ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:6","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_18","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_5","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_12","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_18","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/IRepository/#last","text":"last ( data , filter? , include? ): Promise \\< null | TEntity > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:33","title":"last()"},{"location":"source/interfaces/IRepository/#parameters_19","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data_4","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#filter_3","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_13","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_19","text":"Promise \\< null | TEntity >","title":"Returns"},{"location":"source/interfaces/IRepository/#list","text":"list ( data , filter? , include? ): Promise \\< TEntity []> Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:30","title":"list()"},{"location":"source/interfaces/IRepository/#parameters_20","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data_5","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#filter_4","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_14","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_20","text":"Promise \\< TEntity []>","title":"Returns"},{"location":"source/interfaces/IRepository/#merge","text":"","title":"merge()"},{"location":"source/interfaces/IRepository/#call-signature_15","text":"merge ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:17","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_21","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_6","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#returns_21","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_16","text":"merge ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:18","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_22","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_7","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_15","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_22","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_17","text":"merge ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:19","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_23","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_8","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_16","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_23","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#query_1","text":"query (): Queryable \\< TQuery > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:34","title":"query()"},{"location":"source/interfaces/IRepository/#returns_24","text":"Queryable \\< TQuery >","title":"Returns"},{"location":"source/interfaces/IRepository/#update","text":"","title":"update()"},{"location":"source/interfaces/IRepository/#call-signature_18","text":"update ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:10","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_24","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_9","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#returns_25","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_19","text":"update ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:11","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_25","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_10","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_17","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_26","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_20","text":"update ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:12","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_26","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_11","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_18","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_27","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#updateall","text":"updateAll ( data , map , filter? , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:16","title":"updateAll()"},{"location":"source/interfaces/IRepository/#parameters_27","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#data_6","text":"any","title":"data"},{"location":"source/interfaces/IRepository/#map","text":"( value ) => unknown","title":"map"},{"location":"source/interfaces/IRepository/#filter_5","text":"( value , index , array ) => unknown","title":"filter?"},{"location":"source/interfaces/IRepository/#include_19","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_28","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#upsert","text":"","title":"upsert()"},{"location":"source/interfaces/IRepository/#call-signature_21","text":"upsert ( entity ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:13","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_28","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_12","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#returns_29","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_22","text":"upsert ( entity , include ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:14","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_29","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_13","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_20","text":"( value , index , array ) => unknown","title":"include"},{"location":"source/interfaces/IRepository/#returns_30","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRepository/#call-signature_23","text":"upsert ( entity , include? ): Promise \\< number > Defined in: node_modules/lambdaorm-base/repository/application/repository.d.ts:15","title":"Call Signature"},{"location":"source/interfaces/IRepository/#parameters_30","text":"","title":"Parameters"},{"location":"source/interfaces/IRepository/#entity_14","text":"TEntity","title":"entity"},{"location":"source/interfaces/IRepository/#include_21","text":"( value , index , array ) => unknown","title":"include?"},{"location":"source/interfaces/IRepository/#returns_31","text":"Promise \\< number >","title":"Returns"},{"location":"source/interfaces/IRouteService/","text":"Lambda ORM Lambda ORM / IRouteService Interface: IRouteService Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:4 Methods eval() eval ( source , info ): boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:5 Parameters source SourceRule info SentenceInfo Returns boolean getSource() getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:6 Parameters info SentenceInfo stage? string Returns string","title":"IRouteService"},{"location":"source/interfaces/IRouteService/#interface-irouteservice","text":"Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:4","title":"Interface: IRouteService"},{"location":"source/interfaces/IRouteService/#methods","text":"","title":"Methods"},{"location":"source/interfaces/IRouteService/#eval","text":"eval ( source , info ): boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:5","title":"eval()"},{"location":"source/interfaces/IRouteService/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/IRouteService/#source","text":"SourceRule","title":"source"},{"location":"source/interfaces/IRouteService/#info","text":"SentenceInfo","title":"info"},{"location":"source/interfaces/IRouteService/#returns","text":"boolean","title":"Returns"},{"location":"source/interfaces/IRouteService/#getsource","text":"getSource ( info , stage? ): string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:6","title":"getSource()"},{"location":"source/interfaces/IRouteService/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/IRouteService/#info_1","text":"SentenceInfo","title":"info"},{"location":"source/interfaces/IRouteService/#stage","text":"string","title":"stage?"},{"location":"source/interfaces/IRouteService/#returns_1","text":"string","title":"Returns"},{"location":"source/interfaces/ISentenceBuilder/","text":"Lambda ORM Lambda ORM / ISentenceBuilder Interface: ISentenceBuilder Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:3 Methods build() build ( query ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:4 Parameters query string Returns Sentence","title":"ISentenceBuilder"},{"location":"source/interfaces/ISentenceBuilder/#interface-isentencebuilder","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:3","title":"Interface: ISentenceBuilder"},{"location":"source/interfaces/ISentenceBuilder/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ISentenceBuilder/#build","text":"build ( query ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:4","title":"build()"},{"location":"source/interfaces/ISentenceBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ISentenceBuilder/#query","text":"string","title":"query"},{"location":"source/interfaces/ISentenceBuilder/#returns","text":"Sentence","title":"Returns"},{"location":"source/interfaces/ISentenceCompleteBuilder/","text":"Lambda ORM Lambda ORM / ISentenceCompleteBuilder Interface: ISentenceCompleteBuilder Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:6 Methods build() build ( query , view , stage ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:7 Parameters query string view ViewConfigService stage string Returns Sentence","title":"ISentenceCompleteBuilder"},{"location":"source/interfaces/ISentenceCompleteBuilder/#interface-isentencecompletebuilder","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:6","title":"Interface: ISentenceCompleteBuilder"},{"location":"source/interfaces/ISentenceCompleteBuilder/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ISentenceCompleteBuilder/#build","text":"build ( query , view , stage ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:7","title":"build()"},{"location":"source/interfaces/ISentenceCompleteBuilder/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ISentenceCompleteBuilder/#query","text":"string","title":"query"},{"location":"source/interfaces/ISentenceCompleteBuilder/#view","text":"ViewConfigService","title":"view"},{"location":"source/interfaces/ISentenceCompleteBuilder/#stage","text":"string","title":"stage"},{"location":"source/interfaces/ISentenceCompleteBuilder/#returns","text":"Sentence","title":"Returns"},{"location":"source/interfaces/Index/","text":"Lambda ORM Lambda ORM / Index Interface: Index Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:53 Properties fields fields : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:55 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:54","title":"Index"},{"location":"source/interfaces/Index/#interface-index","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:53","title":"Interface: Index"},{"location":"source/interfaces/Index/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Index/#fields","text":"fields : string [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:55","title":"fields"},{"location":"source/interfaces/Index/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:54","title":"name"},{"location":"source/interfaces/InfrastructureSchema/","text":"Lambda ORM Lambda ORM / InfrastructureSchema Interface: InfrastructureSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:165 Properties mappings? optional mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:167 paths? optional paths : AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:166 server? optional server : ServerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:171 sources? optional sources : Source [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:169 stages? optional stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:170 views? optional views : View [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:168","title":"InfrastructureSchema"},{"location":"source/interfaces/InfrastructureSchema/#interface-infrastructureschema","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:165","title":"Interface: InfrastructureSchema"},{"location":"source/interfaces/InfrastructureSchema/#properties","text":"","title":"Properties"},{"location":"source/interfaces/InfrastructureSchema/#mappings","text":"optional mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:167","title":"mappings?"},{"location":"source/interfaces/InfrastructureSchema/#paths","text":"optional paths : AppPathsConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:166","title":"paths?"},{"location":"source/interfaces/InfrastructureSchema/#server","text":"optional server : ServerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:171","title":"server?"},{"location":"source/interfaces/InfrastructureSchema/#sources","text":"optional sources : Source [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:169","title":"sources?"},{"location":"source/interfaces/InfrastructureSchema/#stages","text":"optional stages : Stage [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:170","title":"stages?"},{"location":"source/interfaces/InfrastructureSchema/#views","text":"optional views : View [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:168","title":"views?"},{"location":"source/interfaces/InitializeSchemaArgs/","text":"Lambda ORM Lambda ORM / InitializeSchemaArgs Interface: InitializeSchemaArgs Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:13 Properties connection? optional connection : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:18 dataPath? optional dataPath : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:19 dialect? optional dialect : Dialect Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:17 source? optional source : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:16 url? optional url : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:15 workspace workspace : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:14","title":"InitializeSchemaArgs"},{"location":"source/interfaces/InitializeSchemaArgs/#interface-initializeschemaargs","text":"Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:13","title":"Interface: InitializeSchemaArgs"},{"location":"source/interfaces/InitializeSchemaArgs/#properties","text":"","title":"Properties"},{"location":"source/interfaces/InitializeSchemaArgs/#connection","text":"optional connection : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:18","title":"connection?"},{"location":"source/interfaces/InitializeSchemaArgs/#datapath","text":"optional dataPath : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:19","title":"dataPath?"},{"location":"source/interfaces/InitializeSchemaArgs/#dialect","text":"optional dialect : Dialect Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:17","title":"dialect?"},{"location":"source/interfaces/InitializeSchemaArgs/#source","text":"optional source : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:16","title":"source?"},{"location":"source/interfaces/InitializeSchemaArgs/#url","text":"optional url : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:15","title":"url?"},{"location":"source/interfaces/InitializeSchemaArgs/#workspace","text":"workspace : string Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:14","title":"workspace"},{"location":"source/interfaces/Language/","text":"Lambda ORM Lambda ORM / Language Interface: Language Defined in: src/lib/language/domain/ports/language.ts:6 Properties dialects dialects : DialectService [] Defined in: src/lib/language/domain/ports/language.ts:7 name name : string Defined in: src/lib/language/domain/ports/language.ts:8 solveComposite? optional solveComposite : boolean Defined in: src/lib/language/domain/ports/language.ts:9 Methods ddlBuilder() ddlBuilder ( source , mapping ): DdlBuilder Defined in: src/lib/language/domain/ports/language.ts:11 Parameters source Source mapping MappingConfigService Returns DdlBuilder dmlBuilder() dmlBuilder ( source , mapping ): DmlBuilder Defined in: src/lib/language/domain/ports/language.ts:12 Parameters source Source mapping MappingConfigService Returns DmlBuilder getDialect() getDialect ( name ): DialectService Defined in: src/lib/language/domain/ports/language.ts:10 Parameters name string Returns DialectService","title":"Language"},{"location":"source/interfaces/Language/#interface-language","text":"Defined in: src/lib/language/domain/ports/language.ts:6","title":"Interface: Language"},{"location":"source/interfaces/Language/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Language/#dialects","text":"dialects : DialectService [] Defined in: src/lib/language/domain/ports/language.ts:7","title":"dialects"},{"location":"source/interfaces/Language/#name","text":"name : string Defined in: src/lib/language/domain/ports/language.ts:8","title":"name"},{"location":"source/interfaces/Language/#solvecomposite","text":"optional solveComposite : boolean Defined in: src/lib/language/domain/ports/language.ts:9","title":"solveComposite?"},{"location":"source/interfaces/Language/#methods","text":"","title":"Methods"},{"location":"source/interfaces/Language/#ddlbuilder","text":"ddlBuilder ( source , mapping ): DdlBuilder Defined in: src/lib/language/domain/ports/language.ts:11","title":"ddlBuilder()"},{"location":"source/interfaces/Language/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/Language/#source","text":"Source","title":"source"},{"location":"source/interfaces/Language/#mapping","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Language/#returns","text":"DdlBuilder","title":"Returns"},{"location":"source/interfaces/Language/#dmlbuilder","text":"dmlBuilder ( source , mapping ): DmlBuilder Defined in: src/lib/language/domain/ports/language.ts:12","title":"dmlBuilder()"},{"location":"source/interfaces/Language/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/Language/#source_1","text":"Source","title":"source"},{"location":"source/interfaces/Language/#mapping_1","text":"MappingConfigService","title":"mapping"},{"location":"source/interfaces/Language/#returns_1","text":"DmlBuilder","title":"Returns"},{"location":"source/interfaces/Language/#getdialect","text":"getDialect ( name ): DialectService Defined in: src/lib/language/domain/ports/language.ts:10","title":"getDialect()"},{"location":"source/interfaces/Language/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/Language/#name_1","text":"string","title":"name"},{"location":"source/interfaces/Language/#returns_2","text":"DialectService","title":"Returns"},{"location":"source/interfaces/ListenerConfig/","text":"Lambda ORM Lambda ORM / ListenerConfig Interface: ListenerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:139 Properties after? optional after : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:144 before? optional before : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:143 condition? optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:142 error? optional error : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:145 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:140 on on : SentenceCategory [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:141","title":"ListenerConfig"},{"location":"source/interfaces/ListenerConfig/#interface-listenerconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:139","title":"Interface: ListenerConfig"},{"location":"source/interfaces/ListenerConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ListenerConfig/#after","text":"optional after : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:144","title":"after?"},{"location":"source/interfaces/ListenerConfig/#before","text":"optional before : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:143","title":"before?"},{"location":"source/interfaces/ListenerConfig/#condition","text":"optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:142","title":"condition?"},{"location":"source/interfaces/ListenerConfig/#error","text":"optional error : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:145","title":"error?"},{"location":"source/interfaces/ListenerConfig/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:140","title":"name"},{"location":"source/interfaces/ListenerConfig/#on","text":"on : SentenceCategory [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:141","title":"on"},{"location":"source/interfaces/Mapping/","text":"Lambda ORM Lambda ORM / Mapping Interface: Mapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:104 Properties entities? optional entities : EntityMapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:108 extends? optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:105 format? optional format : FormatMapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:109 mapping? optional mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:106 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:107","title":"Mapping"},{"location":"source/interfaces/Mapping/#interface-mapping","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:104","title":"Interface: Mapping"},{"location":"source/interfaces/Mapping/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Mapping/#entities","text":"optional entities : EntityMapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:108","title":"entities?"},{"location":"source/interfaces/Mapping/#extends","text":"optional extends : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:105","title":"extends?"},{"location":"source/interfaces/Mapping/#format","text":"optional format : FormatMapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:109","title":"format?"},{"location":"source/interfaces/Mapping/#mapping","text":"optional mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:106","title":"mapping?"},{"location":"source/interfaces/Mapping/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:107","title":"name"},{"location":"source/interfaces/MappingConfig/","text":"Lambda ORM Lambda ORM / MappingConfig Interface: MappingConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:191 Properties inconsistency inconsistency : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:194 mapping mapping : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:192 pending pending : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:193","title":"MappingConfig"},{"location":"source/interfaces/MappingConfig/#interface-mappingconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:191","title":"Interface: MappingConfig"},{"location":"source/interfaces/MappingConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/MappingConfig/#inconsistency","text":"inconsistency : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:194","title":"inconsistency"},{"location":"source/interfaces/MappingConfig/#mapping","text":"mapping : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:192","title":"mapping"},{"location":"source/interfaces/MappingConfig/#pending","text":"pending : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:193","title":"pending"},{"location":"source/interfaces/MatchOptions/","text":"Lambda ORM Lambda ORM / MatchOptions Interface: MatchOptions Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:8 Extended by StagePullOptions Properties removeEntities? optional removeEntities : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:9 removeProperties? optional removeProperties : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:10 removeRelations? optional removeRelations : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:11","title":"MatchOptions"},{"location":"source/interfaces/MatchOptions/#interface-matchoptions","text":"Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:8","title":"Interface: MatchOptions"},{"location":"source/interfaces/MatchOptions/#extended-by","text":"StagePullOptions","title":"Extended by"},{"location":"source/interfaces/MatchOptions/#properties","text":"","title":"Properties"},{"location":"source/interfaces/MatchOptions/#removeentities","text":"optional removeEntities : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:9","title":"removeEntities?"},{"location":"source/interfaces/MatchOptions/#removeproperties","text":"optional removeProperties : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:10","title":"removeProperties?"},{"location":"source/interfaces/MatchOptions/#removerelations","text":"optional removeRelations : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:11","title":"removeRelations?"},{"location":"source/interfaces/Metadata/","text":"Lambda ORM Lambda ORM / Metadata Interface: Metadata Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:18 Properties alias? optional alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:34 children? optional children : Metadata [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:22 classtype classtype : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:19 clause? optional clause : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:33 columns? optional columns : Property [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:26 constraints? optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:29 defaults? optional defaults : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:31 entity? optional entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:25 isRoot? optional isRoot : boolean Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:35 name name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:21 number? optional number : number Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:36 parameters? optional parameters : Parameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:28 pos pos : Position Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:20 property? optional property : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:27 relation? optional relation : Relation Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:32 returnType? optional returnType : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:24 type type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:23 values? optional values : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:30","title":"Metadata"},{"location":"source/interfaces/Metadata/#interface-metadata","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:18","title":"Interface: Metadata"},{"location":"source/interfaces/Metadata/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Metadata/#alias","text":"optional alias : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:34","title":"alias?"},{"location":"source/interfaces/Metadata/#children","text":"optional children : Metadata [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:22","title":"children?"},{"location":"source/interfaces/Metadata/#classtype","text":"classtype : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:19","title":"classtype"},{"location":"source/interfaces/Metadata/#clause","text":"optional clause : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:33","title":"clause?"},{"location":"source/interfaces/Metadata/#columns","text":"optional columns : Property [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:26","title":"columns?"},{"location":"source/interfaces/Metadata/#constraints","text":"optional constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:29","title":"constraints?"},{"location":"source/interfaces/Metadata/#defaults","text":"optional defaults : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:31","title":"defaults?"},{"location":"source/interfaces/Metadata/#entity","text":"optional entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:25","title":"entity?"},{"location":"source/interfaces/Metadata/#isroot","text":"optional isRoot : boolean Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:35","title":"isRoot?"},{"location":"source/interfaces/Metadata/#name","text":"name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:21","title":"name"},{"location":"source/interfaces/Metadata/#number","text":"optional number : number Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:36","title":"number?"},{"location":"source/interfaces/Metadata/#parameters","text":"optional parameters : Parameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:28","title":"parameters?"},{"location":"source/interfaces/Metadata/#pos","text":"pos : Position Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:20","title":"pos"},{"location":"source/interfaces/Metadata/#property","text":"optional property : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:27","title":"property?"},{"location":"source/interfaces/Metadata/#relation","text":"optional relation : Relation Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:32","title":"relation?"},{"location":"source/interfaces/Metadata/#returntype","text":"optional returnType : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:24","title":"returnType?"},{"location":"source/interfaces/Metadata/#type","text":"type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:23","title":"type"},{"location":"source/interfaces/Metadata/#values","text":"optional values : Behavior [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:30","title":"values?"},{"location":"source/interfaces/MetadataConstraint/","text":"Lambda ORM Lambda ORM / MetadataConstraint Interface: MetadataConstraint Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:13 Properties children? optional children : MetadataConstraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:16 constraints constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:15 entity entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:14","title":"MetadataConstraint"},{"location":"source/interfaces/MetadataConstraint/#interface-metadataconstraint","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:13","title":"Interface: MetadataConstraint"},{"location":"source/interfaces/MetadataConstraint/#properties","text":"","title":"Properties"},{"location":"source/interfaces/MetadataConstraint/#children","text":"optional children : MetadataConstraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:16","title":"children?"},{"location":"source/interfaces/MetadataConstraint/#constraints","text":"constraints : Constraint [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:15","title":"constraints"},{"location":"source/interfaces/MetadataConstraint/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:14","title":"entity"},{"location":"source/interfaces/MetadataModel/","text":"Lambda ORM Lambda ORM / MetadataModel Interface: MetadataModel Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:8 Properties children? optional children : MetadataModel [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:11 name name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:9 type type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:10","title":"MetadataModel"},{"location":"source/interfaces/MetadataModel/#interface-metadatamodel","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:8","title":"Interface: MetadataModel"},{"location":"source/interfaces/MetadataModel/#properties","text":"","title":"Properties"},{"location":"source/interfaces/MetadataModel/#children","text":"optional children : MetadataModel [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:11","title":"children?"},{"location":"source/interfaces/MetadataModel/#name","text":"name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:9","title":"name"},{"location":"source/interfaces/MetadataModel/#type","text":"type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:10","title":"type"},{"location":"source/interfaces/MetadataParameter/","text":"Lambda ORM Lambda ORM / MetadataParameter Interface: MetadataParameter Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:3 Properties children? optional children : MetadataParameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:6 name name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:4 type type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:5","title":"MetadataParameter"},{"location":"source/interfaces/MetadataParameter/#interface-metadataparameter","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:3","title":"Interface: MetadataParameter"},{"location":"source/interfaces/MetadataParameter/#properties","text":"","title":"Properties"},{"location":"source/interfaces/MetadataParameter/#children","text":"optional children : MetadataParameter [] Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:6","title":"children?"},{"location":"source/interfaces/MetadataParameter/#name","text":"name : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:4","title":"name"},{"location":"source/interfaces/MetadataParameter/#type","text":"type : string Defined in: node_modules/lambdaorm-base/sentence/domain/metadata.d.ts:5","title":"type"},{"location":"source/interfaces/ModelConfig/","text":"Lambda ORM Lambda ORM / ModelConfig Interface: ModelConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:188 Properties mappings mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:189","title":"ModelConfig"},{"location":"source/interfaces/ModelConfig/#interface-modelconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:188","title":"Interface: ModelConfig"},{"location":"source/interfaces/ModelConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ModelConfig/#mappings","text":"mappings : Mapping [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:189","title":"mappings"},{"location":"source/interfaces/ModifyAllClauses/","text":"Lambda ORM Lambda ORM / ModifyAllClauses Interface: ModifyAllClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:108 Type Parameters T T Methods include() include ( predicate , thisArg? ): ModifyIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:110 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns ModifyIncludeClauses \\< T >","title":"ModifyAllClauses"},{"location":"source/interfaces/ModifyAllClauses/#interface-modifyallclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:108","title":"Interface: ModifyAllClauses\\&lt;T>"},{"location":"source/interfaces/ModifyAllClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/ModifyAllClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/ModifyAllClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ModifyAllClauses/#include","text":"include ( predicate , thisArg? ): ModifyIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:110","title":"include()"},{"location":"source/interfaces/ModifyAllClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ModifyAllClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/ModifyAllClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/ModifyAllClauses/#returns","text":"ModifyIncludeClauses \\< T >","title":"Returns"},{"location":"source/interfaces/ModifyClauses/","text":"Lambda ORM Lambda ORM / ModifyClauses Interface: ModifyClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:102 Type Parameters T T Methods filter() filter ( predicate , thisArg? ): ModifyFilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:104 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns ModifyFilterClauses \\< T > include() include ( predicate , thisArg? ): ModifyIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:106 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns ModifyIncludeClauses \\< T >","title":"ModifyClauses"},{"location":"source/interfaces/ModifyClauses/#interface-modifyclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:102","title":"Interface: ModifyClauses\\&lt;T>"},{"location":"source/interfaces/ModifyClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/ModifyClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/ModifyClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ModifyClauses/#filter","text":"filter ( predicate , thisArg? ): ModifyFilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:104","title":"filter()"},{"location":"source/interfaces/ModifyClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ModifyClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/ModifyClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/ModifyClauses/#returns","text":"ModifyFilterClauses \\< T >","title":"Returns"},{"location":"source/interfaces/ModifyClauses/#include","text":"include ( predicate , thisArg? ): ModifyIncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:106","title":"include()"},{"location":"source/interfaces/ModifyClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/ModifyClauses/#predicate_1","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/ModifyClauses/#thisarg_1","text":"any","title":"thisArg?"},{"location":"source/interfaces/ModifyClauses/#returns_1","text":"ModifyIncludeClauses \\< T >","title":"Returns"},{"location":"source/interfaces/ModifyFilterClauses/","text":"Lambda ORM Lambda ORM / ModifyFilterClauses Interface: ModifyFilterClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:94 Type Parameters T T Methods include() include ( predicate , thisArg? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:96 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns void","title":"ModifyFilterClauses"},{"location":"source/interfaces/ModifyFilterClauses/#interface-modifyfilterclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:94","title":"Interface: ModifyFilterClauses\\&lt;T>"},{"location":"source/interfaces/ModifyFilterClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/ModifyFilterClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/ModifyFilterClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ModifyFilterClauses/#include","text":"include ( predicate , thisArg? ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:96","title":"include()"},{"location":"source/interfaces/ModifyFilterClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ModifyFilterClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/ModifyFilterClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/ModifyFilterClauses/#returns","text":"void","title":"Returns"},{"location":"source/interfaces/ModifyIncludeClauses/","text":"Lambda ORM Lambda ORM / ModifyIncludeClauses Interface: ModifyIncludeClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:98 Type Parameters T T Methods filter() filter ( predicate , thisArg? ): ModifyFilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:100 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns ModifyFilterClauses \\< T >","title":"ModifyIncludeClauses"},{"location":"source/interfaces/ModifyIncludeClauses/#interface-modifyincludeclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:98","title":"Interface: ModifyIncludeClauses\\&lt;T>"},{"location":"source/interfaces/ModifyIncludeClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/ModifyIncludeClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/ModifyIncludeClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ModifyIncludeClauses/#filter","text":"filter ( predicate , thisArg? ): ModifyFilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:100","title":"filter()"},{"location":"source/interfaces/ModifyIncludeClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ModifyIncludeClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/ModifyIncludeClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/ModifyIncludeClauses/#returns","text":"ModifyFilterClauses \\< T >","title":"Returns"},{"location":"source/interfaces/ObservableExecutor/","text":"Lambda ORM Lambda ORM / ObservableExecutor Interface: ObservableExecutor Defined in: src/lib/execution/domain/executor.ts:51 Extended by ObservableExecutorDecorator Methods subscribe() subscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:52 Parameters observer ActionObserver Returns void unsubscribe() unsubscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:53 Parameters observer ActionObserver Returns void","title":"ObservableExecutor"},{"location":"source/interfaces/ObservableExecutor/#interface-observableexecutor","text":"Defined in: src/lib/execution/domain/executor.ts:51","title":"Interface: ObservableExecutor"},{"location":"source/interfaces/ObservableExecutor/#extended-by","text":"ObservableExecutorDecorator","title":"Extended by"},{"location":"source/interfaces/ObservableExecutor/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ObservableExecutor/#subscribe","text":"subscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:52","title":"subscribe()"},{"location":"source/interfaces/ObservableExecutor/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutor/#observer","text":"ActionObserver","title":"observer"},{"location":"source/interfaces/ObservableExecutor/#returns","text":"void","title":"Returns"},{"location":"source/interfaces/ObservableExecutor/#unsubscribe","text":"unsubscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:53","title":"unsubscribe()"},{"location":"source/interfaces/ObservableExecutor/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutor/#observer_1","text":"ActionObserver","title":"observer"},{"location":"source/interfaces/ObservableExecutor/#returns_1","text":"void","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/","text":"Lambda ORM Lambda ORM / ObservableExecutorDecorator Interface: ObservableExecutorDecorator Defined in: src/lib/execution/domain/executor.ts:56 Extends Executor . ObservableExecutor Methods execute() execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:46 Parameters query Query data any options QueryOptions Returns Promise \\< any > Inherited from Executor . execute executeList() executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/domain/executor.ts:47 Parameters queries Query [] options QueryOptions Returns Promise \\< ExecuteResult []> Inherited from Executor . executeList subscribe() subscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:52 Parameters observer ActionObserver Returns void Inherited from ObservableExecutor . subscribe transaction() transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:48 Parameters options QueryOptions callback ( tr ) => Promise \\< void > Returns Promise \\< void > Inherited from Executor . transaction unsubscribe() unsubscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:53 Parameters observer ActionObserver Returns void Inherited from ObservableExecutor . unsubscribe","title":"ObservableExecutorDecorator"},{"location":"source/interfaces/ObservableExecutorDecorator/#interface-observableexecutordecorator","text":"Defined in: src/lib/execution/domain/executor.ts:56","title":"Interface: ObservableExecutorDecorator"},{"location":"source/interfaces/ObservableExecutorDecorator/#extends","text":"Executor . ObservableExecutor","title":"Extends"},{"location":"source/interfaces/ObservableExecutorDecorator/#methods","text":"","title":"Methods"},{"location":"source/interfaces/ObservableExecutorDecorator/#execute","text":"execute ( query , data , options ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:46","title":"execute()"},{"location":"source/interfaces/ObservableExecutorDecorator/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutorDecorator/#query","text":"Query","title":"query"},{"location":"source/interfaces/ObservableExecutorDecorator/#data","text":"any","title":"data"},{"location":"source/interfaces/ObservableExecutorDecorator/#options","text":"QueryOptions","title":"options"},{"location":"source/interfaces/ObservableExecutorDecorator/#returns","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/#inherited-from","text":"Executor . execute","title":"Inherited from"},{"location":"source/interfaces/ObservableExecutorDecorator/#executelist","text":"executeList ( queries , options ): Promise \\< ExecuteResult []> Defined in: src/lib/execution/domain/executor.ts:47","title":"executeList()"},{"location":"source/interfaces/ObservableExecutorDecorator/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutorDecorator/#queries","text":"Query []","title":"queries"},{"location":"source/interfaces/ObservableExecutorDecorator/#options_1","text":"QueryOptions","title":"options"},{"location":"source/interfaces/ObservableExecutorDecorator/#returns_1","text":"Promise \\< ExecuteResult []>","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/#inherited-from_1","text":"Executor . executeList","title":"Inherited from"},{"location":"source/interfaces/ObservableExecutorDecorator/#subscribe","text":"subscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:52","title":"subscribe()"},{"location":"source/interfaces/ObservableExecutorDecorator/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutorDecorator/#observer","text":"ActionObserver","title":"observer"},{"location":"source/interfaces/ObservableExecutorDecorator/#returns_2","text":"void","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/#inherited-from_2","text":"ObservableExecutor . subscribe","title":"Inherited from"},{"location":"source/interfaces/ObservableExecutorDecorator/#transaction","text":"transaction ( options , callback ): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:48","title":"transaction()"},{"location":"source/interfaces/ObservableExecutorDecorator/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutorDecorator/#options_2","text":"QueryOptions","title":"options"},{"location":"source/interfaces/ObservableExecutorDecorator/#callback","text":"( tr ) => Promise \\< void >","title":"callback"},{"location":"source/interfaces/ObservableExecutorDecorator/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/#inherited-from_3","text":"Executor . transaction","title":"Inherited from"},{"location":"source/interfaces/ObservableExecutorDecorator/#unsubscribe","text":"unsubscribe ( observer ): void Defined in: src/lib/execution/domain/executor.ts:53","title":"unsubscribe()"},{"location":"source/interfaces/ObservableExecutorDecorator/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/ObservableExecutorDecorator/#observer_1","text":"ActionObserver","title":"observer"},{"location":"source/interfaces/ObservableExecutorDecorator/#returns_4","text":"void","title":"Returns"},{"location":"source/interfaces/ObservableExecutorDecorator/#inherited-from_4","text":"ObservableExecutor . unsubscribe","title":"Inherited from"},{"location":"source/interfaces/Property/","text":"Lambda ORM Lambda ORM / Property Interface: Property Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:23 Extended by PropertyMapping Properties autoIncrement? optional autoIncrement : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:29 default? optional default : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:33 enum? optional enum : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:36 key? optional key : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:37 length? optional length : number Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:26 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:24 primaryKey? optional primaryKey : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:28 readExp? optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:31 readValue? optional readValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:34 required? optional required : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:27 type? optional type : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:25 view? optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:30 writeExp? optional writeExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:32 writeValue? optional writeValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:35","title":"Property"},{"location":"source/interfaces/Property/#interface-property","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:23","title":"Interface: Property"},{"location":"source/interfaces/Property/#extended-by","text":"PropertyMapping","title":"Extended by"},{"location":"source/interfaces/Property/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Property/#autoincrement","text":"optional autoIncrement : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:29","title":"autoIncrement?"},{"location":"source/interfaces/Property/#default","text":"optional default : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:33","title":"default?"},{"location":"source/interfaces/Property/#enum","text":"optional enum : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:36","title":"enum?"},{"location":"source/interfaces/Property/#key","text":"optional key : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:37","title":"key?"},{"location":"source/interfaces/Property/#length","text":"optional length : number Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:26","title":"length?"},{"location":"source/interfaces/Property/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:24","title":"name"},{"location":"source/interfaces/Property/#primarykey","text":"optional primaryKey : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:28","title":"primaryKey?"},{"location":"source/interfaces/Property/#readexp","text":"optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:31","title":"readExp?"},{"location":"source/interfaces/Property/#readvalue","text":"optional readValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:34","title":"readValue?"},{"location":"source/interfaces/Property/#required","text":"optional required : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:27","title":"required?"},{"location":"source/interfaces/Property/#type","text":"optional type : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:25","title":"type?"},{"location":"source/interfaces/Property/#view","text":"optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:30","title":"view?"},{"location":"source/interfaces/Property/#writeexp","text":"optional writeExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:32","title":"writeExp?"},{"location":"source/interfaces/Property/#writevalue","text":"optional writeValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:35","title":"writeValue?"},{"location":"source/interfaces/PropertyMapping/","text":"Lambda ORM Lambda ORM / PropertyMapping Interface: PropertyMapping Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:86 Extends Property Properties autoIncrement? optional autoIncrement : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:29 Inherited from Property . autoIncrement dbType? optional dbType : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:89 default? optional default : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:33 Inherited from Property . default enum? optional enum : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:36 Inherited from Property . enum key? optional key : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:37 Inherited from Property . key length? optional length : number Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:26 Inherited from Property . length mapping mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:87 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:24 Inherited from Property . name primaryKey? optional primaryKey : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:28 Inherited from Property . primaryKey readExp? optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:31 Inherited from Property . readExp readMappingExp? optional readMappingExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:88 readValue? optional readValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:34 Inherited from Property . readValue required? optional required : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:27 Inherited from Property . required type? optional type : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:25 Inherited from Property . type view? optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:30 Inherited from Property . view writeExp? optional writeExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:32 Inherited from Property . writeExp writeValue? optional writeValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:35 Inherited from Property . writeValue","title":"PropertyMapping"},{"location":"source/interfaces/PropertyMapping/#interface-propertymapping","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:86","title":"Interface: PropertyMapping"},{"location":"source/interfaces/PropertyMapping/#extends","text":"Property","title":"Extends"},{"location":"source/interfaces/PropertyMapping/#properties","text":"","title":"Properties"},{"location":"source/interfaces/PropertyMapping/#autoincrement","text":"optional autoIncrement : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:29","title":"autoIncrement?"},{"location":"source/interfaces/PropertyMapping/#inherited-from","text":"Property . autoIncrement","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#dbtype","text":"optional dbType : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:89","title":"dbType?"},{"location":"source/interfaces/PropertyMapping/#default","text":"optional default : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:33","title":"default?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_1","text":"Property . default","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#enum","text":"optional enum : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:36","title":"enum?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_2","text":"Property . enum","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#key","text":"optional key : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:37","title":"key?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_3","text":"Property . key","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#length","text":"optional length : number Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:26","title":"length?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_4","text":"Property . length","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#mapping","text":"mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:87","title":"mapping"},{"location":"source/interfaces/PropertyMapping/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:24","title":"name"},{"location":"source/interfaces/PropertyMapping/#inherited-from_5","text":"Property . name","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#primarykey","text":"optional primaryKey : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:28","title":"primaryKey?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_6","text":"Property . primaryKey","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#readexp","text":"optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:31","title":"readExp?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_7","text":"Property . readExp","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#readmappingexp","text":"optional readMappingExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:88","title":"readMappingExp?"},{"location":"source/interfaces/PropertyMapping/#readvalue","text":"optional readValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:34","title":"readValue?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_8","text":"Property . readValue","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#required","text":"optional required : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:27","title":"required?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_9","text":"Property . required","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#type","text":"optional type : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:25","title":"type?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_10","text":"Property . type","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#view","text":"optional view : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:30","title":"view?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_11","text":"Property . view","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#writeexp","text":"optional writeExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:32","title":"writeExp?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_12","text":"Property . writeExp","title":"Inherited from"},{"location":"source/interfaces/PropertyMapping/#writevalue","text":"optional writeValue : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:35","title":"writeValue?"},{"location":"source/interfaces/PropertyMapping/#inherited-from_13","text":"Property . writeValue","title":"Inherited from"},{"location":"source/interfaces/PropertyView/","text":"Lambda ORM Lambda ORM / PropertyView Interface: PropertyView Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:111 Properties exclude? optional exclude : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:114 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:112 readExp? optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:113","title":"PropertyView"},{"location":"source/interfaces/PropertyView/#interface-propertyview","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:111","title":"Interface: PropertyView"},{"location":"source/interfaces/PropertyView/#properties","text":"","title":"Properties"},{"location":"source/interfaces/PropertyView/#exclude","text":"optional exclude : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:114","title":"exclude?"},{"location":"source/interfaces/PropertyView/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:112","title":"name"},{"location":"source/interfaces/PropertyView/#readexp","text":"optional readExp : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:113","title":"readExp?"},{"location":"source/interfaces/QueryActions/","text":"Lambda ORM Lambda ORM / QueryActions Interface: QueryActions Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:3 Methods constraints() constraints ( query ): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:8 Parameters query string Returns Promise \\< MetadataConstraint > execute() execute ( query , data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:4 Parameters query string data any Returns Promise \\< any > metadata() metadata ( query ): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:9 Parameters query string Returns Promise \\< Metadata > model() model ( query ): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:6 Parameters query string Returns Promise \\< MetadataModel []> normalize() normalize ( query ): string Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:5 Parameters query string Returns string parameters() parameters ( query ): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:7 Parameters query string Returns Promise \\< MetadataParameter []> plan() plan ( query ): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:10 Parameters query string Returns Promise \\< QueryPlan >","title":"QueryActions"},{"location":"source/interfaces/QueryActions/#interface-queryactions","text":"Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:3","title":"Interface: QueryActions"},{"location":"source/interfaces/QueryActions/#methods","text":"","title":"Methods"},{"location":"source/interfaces/QueryActions/#constraints","text":"constraints ( query ): Promise \\< MetadataConstraint > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:8","title":"constraints()"},{"location":"source/interfaces/QueryActions/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns","text":"Promise \\< MetadataConstraint >","title":"Returns"},{"location":"source/interfaces/QueryActions/#execute","text":"execute ( query , data ): Promise \\< any > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:4","title":"execute()"},{"location":"source/interfaces/QueryActions/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_1","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#data","text":"any","title":"data"},{"location":"source/interfaces/QueryActions/#returns_1","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/QueryActions/#metadata","text":"metadata ( query ): Promise \\< Metadata > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:9","title":"metadata()"},{"location":"source/interfaces/QueryActions/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_2","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns_2","text":"Promise \\< Metadata >","title":"Returns"},{"location":"source/interfaces/QueryActions/#model","text":"model ( query ): Promise \\< MetadataModel []> Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:6","title":"model()"},{"location":"source/interfaces/QueryActions/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_3","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns_3","text":"Promise \\< MetadataModel []>","title":"Returns"},{"location":"source/interfaces/QueryActions/#normalize","text":"normalize ( query ): string Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:5","title":"normalize()"},{"location":"source/interfaces/QueryActions/#parameters_4","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_4","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns_4","text":"string","title":"Returns"},{"location":"source/interfaces/QueryActions/#parameters_5","text":"parameters ( query ): Promise \\< MetadataParameter []> Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:7","title":"parameters()"},{"location":"source/interfaces/QueryActions/#parameters_6","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_5","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns_5","text":"Promise \\< MetadataParameter []>","title":"Returns"},{"location":"source/interfaces/QueryActions/#plan","text":"plan ( query ): Promise \\< QueryPlan > Defined in: node_modules/lambdaorm-base/repository/domain/actions.d.ts:10","title":"plan()"},{"location":"source/interfaces/QueryActions/#parameters_7","text":"","title":"Parameters"},{"location":"source/interfaces/QueryActions/#query_6","text":"string","title":"query"},{"location":"source/interfaces/QueryActions/#returns_6","text":"Promise \\< QueryPlan >","title":"Returns"},{"location":"source/interfaces/QueryArgs/","text":"Lambda ORM Lambda ORM / QueryArgs Interface: QueryArgs Defined in: src/lib/query/domain/query.ts:4 Properties action action : SentenceAction Defined in: src/lib/query/domain/query.ts:5 category category : SentenceCategory Defined in: src/lib/query/domain/query.ts:7 columns? optional columns : Property [] Defined in: src/lib/query/domain/query.ts:12 constraints? optional constraints : Constraint [] Defined in: src/lib/query/domain/query.ts:14 defaults? optional defaults : Behavior [] Defined in: src/lib/query/domain/query.ts:16 description description : string Defined in: src/lib/query/domain/query.ts:20 dialect dialect : string Defined in: src/lib/query/domain/query.ts:8 entity entity : string Defined in: src/lib/query/domain/query.ts:11 includes? optional includes : Include [] Defined in: src/lib/query/domain/query.ts:18 parameters? optional parameters : Parameter [] Defined in: src/lib/query/domain/query.ts:13 query? optional query : string Defined in: src/lib/query/domain/query.ts:19 sentence sentence : string Defined in: src/lib/query/domain/query.ts:10 source source : string Defined in: src/lib/query/domain/query.ts:9 type type : SentenceType Defined in: src/lib/query/domain/query.ts:6 values? optional values : Behavior [] Defined in: src/lib/query/domain/query.ts:15","title":"QueryArgs"},{"location":"source/interfaces/QueryArgs/#interface-queryargs","text":"Defined in: src/lib/query/domain/query.ts:4","title":"Interface: QueryArgs"},{"location":"source/interfaces/QueryArgs/#properties","text":"","title":"Properties"},{"location":"source/interfaces/QueryArgs/#action","text":"action : SentenceAction Defined in: src/lib/query/domain/query.ts:5","title":"action"},{"location":"source/interfaces/QueryArgs/#category","text":"category : SentenceCategory Defined in: src/lib/query/domain/query.ts:7","title":"category"},{"location":"source/interfaces/QueryArgs/#columns","text":"optional columns : Property [] Defined in: src/lib/query/domain/query.ts:12","title":"columns?"},{"location":"source/interfaces/QueryArgs/#constraints","text":"optional constraints : Constraint [] Defined in: src/lib/query/domain/query.ts:14","title":"constraints?"},{"location":"source/interfaces/QueryArgs/#defaults","text":"optional defaults : Behavior [] Defined in: src/lib/query/domain/query.ts:16","title":"defaults?"},{"location":"source/interfaces/QueryArgs/#description","text":"description : string Defined in: src/lib/query/domain/query.ts:20","title":"description"},{"location":"source/interfaces/QueryArgs/#dialect","text":"dialect : string Defined in: src/lib/query/domain/query.ts:8","title":"dialect"},{"location":"source/interfaces/QueryArgs/#entity","text":"entity : string Defined in: src/lib/query/domain/query.ts:11","title":"entity"},{"location":"source/interfaces/QueryArgs/#includes","text":"optional includes : Include [] Defined in: src/lib/query/domain/query.ts:18","title":"includes?"},{"location":"source/interfaces/QueryArgs/#parameters","text":"optional parameters : Parameter [] Defined in: src/lib/query/domain/query.ts:13","title":"parameters?"},{"location":"source/interfaces/QueryArgs/#query","text":"optional query : string Defined in: src/lib/query/domain/query.ts:19","title":"query?"},{"location":"source/interfaces/QueryArgs/#sentence","text":"sentence : string Defined in: src/lib/query/domain/query.ts:10","title":"sentence"},{"location":"source/interfaces/QueryArgs/#source","text":"source : string Defined in: src/lib/query/domain/query.ts:9","title":"source"},{"location":"source/interfaces/QueryArgs/#type","text":"type : SentenceType Defined in: src/lib/query/domain/query.ts:6","title":"type"},{"location":"source/interfaces/QueryArgs/#values","text":"optional values : Behavior [] Defined in: src/lib/query/domain/query.ts:15","title":"values?"},{"location":"source/interfaces/QueryExecutor/","text":"Lambda ORM Lambda ORM / QueryExecutor Interface: QueryExecutor Defined in: src/lib/execution/domain/executor.ts:37 Accessors options Get Signature get options (): QueryOptions Defined in: src/lib/execution/domain/executor.ts:38 Returns QueryOptions Methods commit() commit (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:39 Returns Promise \\< void > execute() execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:42 Parameters query Query data any Returns Promise \\< any > release() release (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:41 Returns Promise \\< void > rollback() rollback (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:40 Returns Promise \\< void >","title":"QueryExecutor"},{"location":"source/interfaces/QueryExecutor/#interface-queryexecutor","text":"Defined in: src/lib/execution/domain/executor.ts:37","title":"Interface: QueryExecutor"},{"location":"source/interfaces/QueryExecutor/#accessors","text":"","title":"Accessors"},{"location":"source/interfaces/QueryExecutor/#options","text":"","title":"options"},{"location":"source/interfaces/QueryExecutor/#get-signature","text":"get options (): QueryOptions Defined in: src/lib/execution/domain/executor.ts:38","title":"Get Signature"},{"location":"source/interfaces/QueryExecutor/#returns","text":"QueryOptions","title":"Returns"},{"location":"source/interfaces/QueryExecutor/#methods","text":"","title":"Methods"},{"location":"source/interfaces/QueryExecutor/#commit","text":"commit (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:39","title":"commit()"},{"location":"source/interfaces/QueryExecutor/#returns_1","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/QueryExecutor/#execute","text":"execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/domain/executor.ts:42","title":"execute()"},{"location":"source/interfaces/QueryExecutor/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/QueryExecutor/#query","text":"Query","title":"query"},{"location":"source/interfaces/QueryExecutor/#data","text":"any","title":"data"},{"location":"source/interfaces/QueryExecutor/#returns_2","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/QueryExecutor/#release","text":"release (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:41","title":"release()"},{"location":"source/interfaces/QueryExecutor/#returns_3","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/QueryExecutor/#rollback","text":"rollback (): Promise \\< void > Defined in: src/lib/execution/domain/executor.ts:40","title":"rollback()"},{"location":"source/interfaces/QueryExecutor/#returns_4","text":"Promise \\< void >","title":"Returns"},{"location":"source/interfaces/QueryInternalExecutor/","text":"Lambda ORM Lambda ORM / QueryInternalExecutor Interface: QueryInternalExecutor Defined in: src/lib/execution/application/services/queryExecutor/queryInternalExecutor.ts:4 Methods _execute() _execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryInternalExecutor.ts:5 Parameters query Query data Data Returns Promise \\< any >","title":"QueryInternalExecutor"},{"location":"source/interfaces/QueryInternalExecutor/#interface-queryinternalexecutor","text":"Defined in: src/lib/execution/application/services/queryExecutor/queryInternalExecutor.ts:4","title":"Interface: QueryInternalExecutor"},{"location":"source/interfaces/QueryInternalExecutor/#methods","text":"","title":"Methods"},{"location":"source/interfaces/QueryInternalExecutor/#_execute","text":"_execute ( query , data ): Promise \\< any > Defined in: src/lib/execution/application/services/queryExecutor/queryInternalExecutor.ts:5","title":"_execute()"},{"location":"source/interfaces/QueryInternalExecutor/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/QueryInternalExecutor/#query","text":"Query","title":"query"},{"location":"source/interfaces/QueryInternalExecutor/#data","text":"Data","title":"data"},{"location":"source/interfaces/QueryInternalExecutor/#returns","text":"Promise \\< any >","title":"Returns"},{"location":"source/interfaces/QueryOptions/","text":"Lambda ORM Lambda ORM / QueryOptions Interface: QueryOptions Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:8 Extended by StagePullOptions Properties chunkSize? optional chunkSize : number Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:11 headers? optional headers : [ string , any ][] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:13 stage? optional stage : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:9 tryAllCan? optional tryAllCan : boolean Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:12 view? optional view : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:10","title":"QueryOptions"},{"location":"source/interfaces/QueryOptions/#interface-queryoptions","text":"Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:8","title":"Interface: QueryOptions"},{"location":"source/interfaces/QueryOptions/#extended-by","text":"StagePullOptions","title":"Extended by"},{"location":"source/interfaces/QueryOptions/#properties","text":"","title":"Properties"},{"location":"source/interfaces/QueryOptions/#chunksize","text":"optional chunkSize : number Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:11","title":"chunkSize?"},{"location":"source/interfaces/QueryOptions/#headers","text":"optional headers : [ string , any ][] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:13","title":"headers?"},{"location":"source/interfaces/QueryOptions/#stage","text":"optional stage : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:9","title":"stage?"},{"location":"source/interfaces/QueryOptions/#tryallcan","text":"optional tryAllCan : boolean Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:12","title":"tryAllCan?"},{"location":"source/interfaces/QueryOptions/#view","text":"optional view : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:10","title":"view?"},{"location":"source/interfaces/QueryPlan/","text":"Lambda ORM Lambda ORM / QueryPlan Interface: QueryPlan Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:1 Properties children? optional children : QueryPlan [] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:6 dialect dialect : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:3 entity entity : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:2 sentence sentence : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:5 source source : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:4","title":"QueryPlan"},{"location":"source/interfaces/QueryPlan/#interface-queryplan","text":"Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:1","title":"Interface: QueryPlan"},{"location":"source/interfaces/QueryPlan/#properties","text":"","title":"Properties"},{"location":"source/interfaces/QueryPlan/#children","text":"optional children : QueryPlan [] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:6","title":"children?"},{"location":"source/interfaces/QueryPlan/#dialect","text":"dialect : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:3","title":"dialect"},{"location":"source/interfaces/QueryPlan/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:2","title":"entity"},{"location":"source/interfaces/QueryPlan/#sentence","text":"sentence : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:5","title":"sentence"},{"location":"source/interfaces/QueryPlan/#source","text":"source : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:4","title":"source"},{"location":"source/interfaces/Relation/","text":"Lambda ORM Lambda ORM / Relation Interface: Relation Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:39 Properties composite? optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:42 entity entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:44 from from : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:43 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:40 target? optional target : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:47 to to : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:45 type type : RelationType Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:41 weak? optional weak : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:46","title":"Relation"},{"location":"source/interfaces/Relation/#interface-relation","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:39","title":"Interface: Relation"},{"location":"source/interfaces/Relation/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Relation/#composite","text":"optional composite : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:42","title":"composite?"},{"location":"source/interfaces/Relation/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:44","title":"entity"},{"location":"source/interfaces/Relation/#from","text":"from : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:43","title":"from"},{"location":"source/interfaces/Relation/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:40","title":"name"},{"location":"source/interfaces/Relation/#target","text":"optional target : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:47","title":"target?"},{"location":"source/interfaces/Relation/#to","text":"to : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:45","title":"to"},{"location":"source/interfaces/Relation/#type","text":"type : RelationType Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:41","title":"type"},{"location":"source/interfaces/Relation/#weak","text":"optional weak : boolean Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:46","title":"weak?"},{"location":"source/interfaces/RelationIncludeClauses/","text":"Lambda ORM Lambda ORM / RelationIncludeClauses Interface: RelationIncludeClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:120 Type Parameters T T Methods distinct() distinct \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:128 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > first() first \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:124 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > last() last \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:126 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T > map() map \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:122 Type Parameters U U Parameters predicate ( value , index , array ) => U thisArg? any Returns RelationMapClauses \\< T >","title":"RelationIncludeClauses"},{"location":"source/interfaces/RelationIncludeClauses/#interface-relationincludeclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:120","title":"Interface: RelationIncludeClauses\\&lt;T>"},{"location":"source/interfaces/RelationIncludeClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/RelationIncludeClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/RelationIncludeClauses/#distinct","text":"distinct \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:128","title":"distinct()"},{"location":"source/interfaces/RelationIncludeClauses/#type-parameters_1","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#u","text":"U","title":"U"},{"location":"source/interfaces/RelationIncludeClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#predicate","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/RelationIncludeClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationIncludeClauses/#returns","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationIncludeClauses/#first","text":"first \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:124","title":"first()"},{"location":"source/interfaces/RelationIncludeClauses/#type-parameters_2","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#u_1","text":"U","title":"U"},{"location":"source/interfaces/RelationIncludeClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#predicate_1","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/RelationIncludeClauses/#thisarg_1","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationIncludeClauses/#returns_1","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationIncludeClauses/#last","text":"last \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:126","title":"last()"},{"location":"source/interfaces/RelationIncludeClauses/#type-parameters_3","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#u_2","text":"U","title":"U"},{"location":"source/interfaces/RelationIncludeClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#predicate_2","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/RelationIncludeClauses/#thisarg_2","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationIncludeClauses/#returns_2","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationIncludeClauses/#map","text":"map \\< U >( predicate , thisArg? ): RelationMapClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:122","title":"map()"},{"location":"source/interfaces/RelationIncludeClauses/#type-parameters_4","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#u_3","text":"U","title":"U"},{"location":"source/interfaces/RelationIncludeClauses/#parameters_3","text":"","title":"Parameters"},{"location":"source/interfaces/RelationIncludeClauses/#predicate_3","text":"( value , index , array ) => U","title":"predicate"},{"location":"source/interfaces/RelationIncludeClauses/#thisarg_3","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationIncludeClauses/#returns_3","text":"RelationMapClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationInfo/","text":"Lambda ORM Lambda ORM / RelationInfo Interface: RelationInfo Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:80 Properties entity entity : Entity Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:83 previousEntity previousEntity : Entity Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:82 previousRelation previousRelation : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:81 relation relation : Relation Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:84","title":"RelationInfo"},{"location":"source/interfaces/RelationInfo/#interface-relationinfo","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:80","title":"Interface: RelationInfo"},{"location":"source/interfaces/RelationInfo/#properties","text":"","title":"Properties"},{"location":"source/interfaces/RelationInfo/#entity","text":"entity : Entity Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:83","title":"entity"},{"location":"source/interfaces/RelationInfo/#previousentity","text":"previousEntity : Entity Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:82","title":"previousEntity"},{"location":"source/interfaces/RelationInfo/#previousrelation","text":"previousRelation : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:81","title":"previousRelation"},{"location":"source/interfaces/RelationInfo/#relation","text":"relation : Relation Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:84","title":"relation"},{"location":"source/interfaces/RelationMapClauses/","text":"Lambda ORM Lambda ORM / RelationMapClauses Interface: RelationMapClauses\\<T> Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:112 Type Parameters T T Methods filter() filter ( predicate , thisArg? ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:116 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns FilterClauses \\< T > include() include ( predicate , thisArg? ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:118 Parameters predicate ( value , index , array ) => unknown thisArg? any Returns IncludeClauses \\< T > sort() sort ( predicate , ... args ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:114 Parameters predicate ( value , index , array ) => unknown args ... any Returns void","title":"RelationMapClauses"},{"location":"source/interfaces/RelationMapClauses/#interface-relationmapclausest","text":"Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:112","title":"Interface: RelationMapClauses\\&lt;T>"},{"location":"source/interfaces/RelationMapClauses/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/interfaces/RelationMapClauses/#t","text":"T","title":"T"},{"location":"source/interfaces/RelationMapClauses/#methods","text":"","title":"Methods"},{"location":"source/interfaces/RelationMapClauses/#filter","text":"filter ( predicate , thisArg? ): FilterClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:116","title":"filter()"},{"location":"source/interfaces/RelationMapClauses/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/RelationMapClauses/#predicate","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/RelationMapClauses/#thisarg","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationMapClauses/#returns","text":"FilterClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationMapClauses/#include","text":"include ( predicate , thisArg? ): IncludeClauses \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:118","title":"include()"},{"location":"source/interfaces/RelationMapClauses/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/RelationMapClauses/#predicate_1","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/RelationMapClauses/#thisarg_1","text":"any","title":"thisArg?"},{"location":"source/interfaces/RelationMapClauses/#returns_1","text":"IncludeClauses \\< T >","title":"Returns"},{"location":"source/interfaces/RelationMapClauses/#sort","text":"sort ( predicate , ... args ): void Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:114","title":"sort()"},{"location":"source/interfaces/RelationMapClauses/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/RelationMapClauses/#predicate_2","text":"( value , index , array ) => unknown","title":"predicate"},{"location":"source/interfaces/RelationMapClauses/#args","text":"... any","title":"args"},{"location":"source/interfaces/RelationMapClauses/#returns_2","text":"void","title":"Returns"},{"location":"source/interfaces/Schema/","text":"Lambda ORM Lambda ORM / Schema Interface: Schema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:178 Properties application? optional application : ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:182 domain domain : DomainSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:180 infrastructure? optional infrastructure : InfrastructureSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:181 version version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:179","title":"Schema"},{"location":"source/interfaces/Schema/#interface-schema","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:178","title":"Interface: Schema"},{"location":"source/interfaces/Schema/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Schema/#application","text":"optional application : ApplicationSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:182","title":"application?"},{"location":"source/interfaces/Schema/#domain","text":"domain : DomainSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:180","title":"domain"},{"location":"source/interfaces/Schema/#infrastructure","text":"optional infrastructure : InfrastructureSchema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:181","title":"infrastructure?"},{"location":"source/interfaces/Schema/#version","text":"version : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:179","title":"version"},{"location":"source/interfaces/SchemaData/","text":"Lambda ORM Lambda ORM / SchemaData Interface: SchemaData Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:205 Properties entities entities : SchemaEntityData [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:206","title":"SchemaData"},{"location":"source/interfaces/SchemaData/#interface-schemadata","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:205","title":"Interface: SchemaData"},{"location":"source/interfaces/SchemaData/#properties","text":"","title":"Properties"},{"location":"source/interfaces/SchemaData/#entities","text":"entities : SchemaEntityData [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:206","title":"entities"},{"location":"source/interfaces/SchemaEntityData/","text":"Lambda ORM Lambda ORM / SchemaEntityData Interface: SchemaEntityData Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:201 Properties entity entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:202 rows rows : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:203","title":"SchemaEntityData"},{"location":"source/interfaces/SchemaEntityData/#interface-schemaentitydata","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:201","title":"Interface: SchemaEntityData"},{"location":"source/interfaces/SchemaEntityData/#properties","text":"","title":"Properties"},{"location":"source/interfaces/SchemaEntityData/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:202","title":"entity"},{"location":"source/interfaces/SchemaEntityData/#rows","text":"rows : any [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:203","title":"rows"},{"location":"source/interfaces/SchemaInfo/","text":"Lambda ORM Lambda ORM / SchemaInfo Interface: SchemaInfo Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:184 Properties path? optional path : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:186 schema schema : Schema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:185","title":"SchemaInfo"},{"location":"source/interfaces/SchemaInfo/#interface-schemainfo","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:184","title":"Interface: SchemaInfo"},{"location":"source/interfaces/SchemaInfo/#properties","text":"","title":"Properties"},{"location":"source/interfaces/SchemaInfo/#path","text":"optional path : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:186","title":"path?"},{"location":"source/interfaces/SchemaInfo/#schema","text":"schema : Schema Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:185","title":"schema"},{"location":"source/interfaces/SentenceInfo/","text":"Lambda ORM Lambda ORM / SentenceInfo Interface: SentenceInfo Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:59 Properties action action : SentenceAction Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:61 category category : SentenceCategory Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:62 ddl ddl : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:66 dml dml : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:67 entity entity : string Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:60 read read : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:64 type type : SentenceType Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:63 write write : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:65","title":"SentenceInfo"},{"location":"source/interfaces/SentenceInfo/#interface-sentenceinfo","text":"Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:59","title":"Interface: SentenceInfo"},{"location":"source/interfaces/SentenceInfo/#properties","text":"","title":"Properties"},{"location":"source/interfaces/SentenceInfo/#action","text":"action : SentenceAction Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:61","title":"action"},{"location":"source/interfaces/SentenceInfo/#category","text":"category : SentenceCategory Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:62","title":"category"},{"location":"source/interfaces/SentenceInfo/#ddl","text":"ddl : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:66","title":"ddl"},{"location":"source/interfaces/SentenceInfo/#dml","text":"dml : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:67","title":"dml"},{"location":"source/interfaces/SentenceInfo/#entity","text":"entity : string Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:60","title":"entity"},{"location":"source/interfaces/SentenceInfo/#read","text":"read : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:64","title":"read"},{"location":"source/interfaces/SentenceInfo/#type","text":"type : SentenceType Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:63","title":"type"},{"location":"source/interfaces/SentenceInfo/#write","text":"write : boolean Defined in: node_modules/lambdaorm-base/schema/domain/sentence.d.ts:65","title":"write"},{"location":"source/interfaces/SentenceSerializer/","text":"Lambda ORM Lambda ORM / SentenceSerializer Interface: SentenceSerializer Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:9 Methods clone() clone ( sentence ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:10 Parameters sentence Sentence Returns Sentence deserialize() deserialize ( value ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:12 Parameters value string Returns Sentence serialize() serialize ( sentence ): string Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:11 Parameters sentence Sentence Returns string","title":"SentenceSerializer"},{"location":"source/interfaces/SentenceSerializer/#interface-sentenceserializer","text":"Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:9","title":"Interface: SentenceSerializer"},{"location":"source/interfaces/SentenceSerializer/#methods","text":"","title":"Methods"},{"location":"source/interfaces/SentenceSerializer/#clone","text":"clone ( sentence ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:10","title":"clone()"},{"location":"source/interfaces/SentenceSerializer/#parameters","text":"","title":"Parameters"},{"location":"source/interfaces/SentenceSerializer/#sentence","text":"Sentence","title":"sentence"},{"location":"source/interfaces/SentenceSerializer/#returns","text":"Sentence","title":"Returns"},{"location":"source/interfaces/SentenceSerializer/#deserialize","text":"deserialize ( value ): Sentence Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:12","title":"deserialize()"},{"location":"source/interfaces/SentenceSerializer/#parameters_1","text":"","title":"Parameters"},{"location":"source/interfaces/SentenceSerializer/#value","text":"string","title":"value"},{"location":"source/interfaces/SentenceSerializer/#returns_1","text":"Sentence","title":"Returns"},{"location":"source/interfaces/SentenceSerializer/#serialize","text":"serialize ( sentence ): string Defined in: node_modules/lambdaorm-base/sentence/domain/services.d.ts:11","title":"serialize()"},{"location":"source/interfaces/SentenceSerializer/#parameters_2","text":"","title":"Parameters"},{"location":"source/interfaces/SentenceSerializer/#sentence_1","text":"Sentence","title":"sentence"},{"location":"source/interfaces/SentenceSerializer/#returns_2","text":"string","title":"Returns"},{"location":"source/interfaces/ServerConfig/","text":"Lambda ORM Lambda ORM / ServerConfig Interface: ServerConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:162 Properties url url : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:163","title":"ServerConfig"},{"location":"source/interfaces/ServerConfig/#interface-serverconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:162","title":"Interface: ServerConfig"},{"location":"source/interfaces/ServerConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/ServerConfig/#url","text":"url : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:163","title":"url"},{"location":"source/interfaces/Source/","text":"Lambda ORM Lambda ORM / Source Interface: Source Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:125 Properties connection connection : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:129 dialect dialect : Dialect Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:127 mapping mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:128 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:126","title":"Source"},{"location":"source/interfaces/Source/#interface-source","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:125","title":"Interface: Source"},{"location":"source/interfaces/Source/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Source/#connection","text":"connection : any Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:129","title":"connection"},{"location":"source/interfaces/Source/#dialect","text":"dialect : Dialect Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:127","title":"dialect"},{"location":"source/interfaces/Source/#mapping","text":"mapping : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:128","title":"mapping"},{"location":"source/interfaces/Source/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:126","title":"name"},{"location":"source/interfaces/SourceRule/","text":"Lambda ORM Lambda ORM / SourceRule Interface: SourceRule Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:131 Properties condition? optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:133 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:132","title":"SourceRule"},{"location":"source/interfaces/SourceRule/#interface-sourcerule","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:131","title":"Interface: SourceRule"},{"location":"source/interfaces/SourceRule/#properties","text":"","title":"Properties"},{"location":"source/interfaces/SourceRule/#condition","text":"optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:133","title":"condition?"},{"location":"source/interfaces/SourceRule/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:132","title":"name"},{"location":"source/interfaces/Stage/","text":"Lambda ORM Lambda ORM / Stage Interface: Stage Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:135 Properties name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:136 sources sources : SourceRule [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:137","title":"Stage"},{"location":"source/interfaces/Stage/#interface-stage","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:135","title":"Interface: Stage"},{"location":"source/interfaces/Stage/#properties","text":"","title":"Properties"},{"location":"source/interfaces/Stage/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:136","title":"name"},{"location":"source/interfaces/Stage/#sources","text":"sources : SourceRule [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:137","title":"sources"},{"location":"source/interfaces/StagePullOptions/","text":"Lambda ORM Lambda ORM / StagePullOptions Interface: StagePullOptions Defined in: src/lib/stage/domain/index.ts:3 Extends QueryOptions . MatchOptions Properties chunkSize? optional chunkSize : number Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:11 Inherited from QueryOptions . chunkSize headers? optional headers : [ string , any ][] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:13 Inherited from QueryOptions . headers removeEntities? optional removeEntities : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:9 Inherited from MatchOptions . removeEntities removeProperties? optional removeProperties : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:10 Inherited from MatchOptions . removeProperties removeRelations? optional removeRelations : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:11 Inherited from MatchOptions . removeRelations stage? optional stage : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:9 Inherited from QueryOptions . stage tryAllCan? optional tryAllCan : boolean Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:12 Inherited from QueryOptions . tryAllCan view? optional view : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:10 Inherited from QueryOptions . view","title":"StagePullOptions"},{"location":"source/interfaces/StagePullOptions/#interface-stagepulloptions","text":"Defined in: src/lib/stage/domain/index.ts:3","title":"Interface: StagePullOptions"},{"location":"source/interfaces/StagePullOptions/#extends","text":"QueryOptions . MatchOptions","title":"Extends"},{"location":"source/interfaces/StagePullOptions/#properties","text":"","title":"Properties"},{"location":"source/interfaces/StagePullOptions/#chunksize","text":"optional chunkSize : number Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:11","title":"chunkSize?"},{"location":"source/interfaces/StagePullOptions/#inherited-from","text":"QueryOptions . chunkSize","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#headers","text":"optional headers : [ string , any ][] Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:13","title":"headers?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_1","text":"QueryOptions . headers","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#removeentities","text":"optional removeEntities : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:9","title":"removeEntities?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_2","text":"MatchOptions . removeEntities","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#removeproperties","text":"optional removeProperties : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:10","title":"removeProperties?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_3","text":"MatchOptions . removeProperties","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#removerelations","text":"optional removeRelations : boolean Defined in: node_modules/lambdaorm-base/schema/domain/services.d.ts:11","title":"removeRelations?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_4","text":"MatchOptions . removeRelations","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#stage","text":"optional stage : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:9","title":"stage?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_5","text":"QueryOptions . stage","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#tryallcan","text":"optional tryAllCan : boolean Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:12","title":"tryAllCan?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_6","text":"QueryOptions . tryAllCan","title":"Inherited from"},{"location":"source/interfaces/StagePullOptions/#view","text":"optional view : string Defined in: node_modules/lambdaorm-base/query/domain/query.d.ts:10","title":"view?"},{"location":"source/interfaces/StagePullOptions/#inherited-from_7","text":"QueryOptions . view","title":"Inherited from"},{"location":"source/interfaces/TaskConfig/","text":"Lambda ORM Lambda ORM / TaskConfig Interface: TaskConfig Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:147 Properties condition? optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:149 expression expression : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:150 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:148","title":"TaskConfig"},{"location":"source/interfaces/TaskConfig/#interface-taskconfig","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:147","title":"Interface: TaskConfig"},{"location":"source/interfaces/TaskConfig/#properties","text":"","title":"Properties"},{"location":"source/interfaces/TaskConfig/#condition","text":"optional condition : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:149","title":"condition?"},{"location":"source/interfaces/TaskConfig/#expression","text":"expression : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:150","title":"expression"},{"location":"source/interfaces/TaskConfig/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:148","title":"name"},{"location":"source/interfaces/View/","text":"Lambda ORM Lambda ORM / View Interface: View Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:121 Properties entities entities : EntityView [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:123 name name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:122","title":"View"},{"location":"source/interfaces/View/#interface-view","text":"Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:121","title":"Interface: View"},{"location":"source/interfaces/View/#properties","text":"","title":"Properties"},{"location":"source/interfaces/View/#entities","text":"entities : EntityView [] Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:123","title":"entities"},{"location":"source/interfaces/View/#name","text":"name : string Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:122","title":"name"},{"location":"source/type-aliases/ManyToOne/","text":"Lambda ORM Lambda ORM / ManyToOne Type Alias: ManyToOne\\<T> ManyToOne \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:151 Type Parameters T T","title":"ManyToOne"},{"location":"source/type-aliases/ManyToOne/#type-alias-manytoonet","text":"ManyToOne \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:151","title":"Type Alias: ManyToOne\\&lt;T>"},{"location":"source/type-aliases/ManyToOne/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/type-aliases/ManyToOne/#t","text":"T","title":"T"},{"location":"source/type-aliases/OneToMany/","text":"Lambda ORM Lambda ORM / OneToMany Type Alias: OneToMany\\<T> OneToMany \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:149 Type Parameters T T","title":"OneToMany"},{"location":"source/type-aliases/OneToMany/#type-alias-onetomanyt","text":"OneToMany \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:149","title":"Type Alias: OneToMany\\&lt;T>"},{"location":"source/type-aliases/OneToMany/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/type-aliases/OneToMany/#t","text":"T","title":"T"},{"location":"source/type-aliases/OneToOne/","text":"Lambda ORM Lambda ORM / OneToOne Type Alias: OneToOne\\<T> OneToOne \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:150 Type Parameters T T","title":"OneToOne"},{"location":"source/type-aliases/OneToOne/#type-alias-onetoonet","text":"OneToOne \\< T > = IRelation \\< T > Defined in: node_modules/lambdaorm-base/repository/domain/queryable.d.ts:150","title":"Type Alias: OneToOne\\&lt;T>"},{"location":"source/type-aliases/OneToOne/#type-parameters","text":"","title":"Type Parameters"},{"location":"source/type-aliases/OneToOne/#t","text":"T","title":"T"},{"location":"source/variables/DIALECT_DEFAULT/","text":"Lambda ORM Lambda ORM / DIALECT_DEFAULT Variable: DIALECT_DEFAULT const DIALECT_DEFAULT : MySQL = Dialect.MySQL Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:3","title":"DIALECT DEFAULT"},{"location":"source/variables/DIALECT_DEFAULT/#variable-dialect_default","text":"const DIALECT_DEFAULT : MySQL = Dialect.MySQL Defined in: node_modules/lambdaorm-base/schema/domain/schema.d.ts:3","title":"Variable: DIALECT_DEFAULT"},{"location":"source/variables/orm/","text":"Lambda ORM Lambda ORM / orm Variable: orm const orm : Orm Defined in: src/lib/orm/infrastructure/orm.ts:254","title":"Orm"},{"location":"source/variables/orm/#variable-orm","text":"const orm : Orm Defined in: src/lib/orm/infrastructure/orm.ts:254","title":"Variable: orm"}]}